Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2020.04.17 - 15:41:07]

agdcode.asm
Errors: 0

       1   00:7B00                      ; Code for header to create a .vz file
       2   00:7B00                      
       3   00:7B00  56 5A 46 30         	defb 'VZF0'
       4   00:7B04                      	defb 'AGDGAME',0,0,0,0,0,0,0,0,0,0
       4   00:7B04  41 47 44 47 41 4D 45 00 00 00 00 00 00 00 00 00 
       4   00:7B14  00 
       5   00:7B15  F1                  	defb $f1
       6   00:7B16  00                  	defb $00	; lb $7b00
       7   00:7B17  7B                  	defb $7b	; hb $7b00
       8   00:7B18                      
       9   00:7B18                      	org $7b00
      10   00:7B00                      
      11   00:7B00  (00:0018)           SCRHGT equ 24
      12   00:7B00  (00:001C)           XMODE  equ 28
      13   00:7B00  (00:0020)           XPORT  equ 32
      14   00:7B00  (00:0002)           XFLAG  equ 2
      15   00:7B00  (00:0000)           AFLAG = 0
      16   00:7B00  (00:0000)           CRFLAG = 0
      17   00:7B00  (00:0001)           IFLAG = 1
      18   00:7B00  (00:0000)           MFLAG = 0
      19   00:7B00  (00:0001)           GFLAG = 1
      20   00:7B00  C3 F1 C8                   jp start
      21   00:7B03                      
      22   00:7B03  (00:0001)           WINDOWTOP equ 1
      23   00:7B03  (00:0001)           WINDOWLFT equ 1
      24   00:7B03  (00:0012)           WINDOWHGT equ 18
      25   00:7B03  (00:001E)           WINDOWWID equ 30 ;@
      26   00:7B03  (00:0009)           MAPWID equ 9
      27   00:7B03                             defb 255,255,255,255,255,255,255,255,255
      27   00:7B03  FF FF FF FF FF FF FF FF FF 
      28   00:7B0C  (00:7B0C)           mapdat equ $
      29   00:7B0C                             defb 255,255,255,255,0,255,255,255,255
      29   00:7B0C  FF FF FF FF 00 FF FF FF FF 
      30   00:7B15                             defb 255,255,1,2,3,4,5,255,255
      30   00:7B15  FF FF 01 02 03 04 05 FF FF 
      31   00:7B1E                             defb 255,6,7,8,9,10,11,255,255
      31   00:7B1E  FF 06 07 08 09 0A 0B FF FF 
      32   00:7B27                             defb 255,12,13,14,15,16,17,18,255
      32   00:7B27  FF 0C 0D 0E 0F 10 11 12 FF 
      33   00:7B30                             defb 255,19,20,21,255,255,255,255,255
      33   00:7B30  FF 13 14 15 FF FF FF FF FF 
      34   00:7B39                             defb 255,255,255,255,255,255,255,255,255
      34   00:7B39  FF FF FF FF FF FF FF FF FF 
      35   00:7B42  04                  stmap  defb 4
      36   00:7B43  (00:7B43)           evnt00 equ $
      37   00:7B43  06 06                      ld b,CUSTOM
      38   00:7B45  CD F1 D5                   call tded
      39   00:7B48  B8                         cp b
      40   00:7B49  C2 53 7B                   jp nz,a00033
      41   00:7B4C  3A 49 C9                   ld a,(varp)
      42   00:7B4F  3C                         inc a
      43   00:7B50  32 49 C9                   ld (varp),a
      44   00:7B53  3E 28               a00033 ld a,40
      45   00:7B55  21 49 C9                   ld hl,varp
      46   00:7B58  BE                         cp (hl)
      47   00:7B59  D2 61 7B                   jp nc,a00058
      48   00:7B5C  3E 28                      ld a,40
      49   00:7B5E  32 49 C9                   ld (varp),a
      50   00:7B61  3A 21 C9            a00058 ld a,(joyval)
      51   00:7B64  E6 20                      and 32
      52   00:7B66  CA 71 7B                   jp z,a00084
      53   00:7B69  3E 03                      ld a,3
      54   00:7B6B  CD 82 C9                   call mmenu
      55   00:7B6E  CD 16 CC                   call redraw
      56   00:7B71  3E FF               a00084 ld a,255
      57   00:7B73  21 3B C9                   ld hl,varb
      58   00:7B76  BE                         cp (hl)
      59   00:7B77  C2 8F 7B                   jp nz,a00138
      60   00:7B7A  3E FF                      ld a,255
      61   00:7B7C  21 3C C9                   ld hl,varc
      62   00:7B7F  BE                         cp (hl)
      63   00:7B80  C2 8F 7B                   jp nz,a00138
      64   00:7B83  DD 7E 08                   ld a,(ix+8)
      65   00:7B86  32 3B C9                   ld (varb),a
      66   00:7B89  DD 7E 09                   ld a,(ix+9)
      67   00:7B8C  32 3C C9                   ld (varc),a
      68   00:7B8F  DD 7E 0B            a00138 ld a,(ix+11)
      69   00:7B92  3C                         inc a
      70   00:7B93  DD 77 0B                   ld (ix+11),a
      71   00:7B96  3E 02                      ld a,2
      72   00:7B98  DD BE 0B                   cp (ix+11)
      73   00:7B9B  D2 A2 7B                   jp nc,a00172
      74   00:7B9E  AF                         xor a
      75   00:7B9F  DD 77 0B                   ld (ix+11),a
      76   00:7BA2  CD E3 D1            a00172 call skobj
      77   00:7BA5  32 57 C9                   ld (varobj),a
      78   00:7BA8  3E 03                      ld a,3
      79   00:7BAA  21 57 C9                   ld hl,varobj
      80   00:7BAD  BE                         cp (hl)
      81   00:7BAE  D2 BF 7B                   jp nc,a00226
      82   00:7BB1  3E 0A                      ld a,10
      83   00:7BB3  21 57 C9                   ld hl,varobj
      84   00:7BB6  BE                         cp (hl)
      85   00:7BB7  DA BF 7B                   jp c,a00226
      86   00:7BBA  3E 5A                      ld a,90
      87   00:7BBC  32 11 CC                   ld (sndtyp),a
      88   00:7BBF  3E FF               a00226 ld a,255
      89   00:7BC1  21 57 C9                   ld hl,varobj
      90   00:7BC4  BE                         cp (hl)
      91   00:7BC5  C2 CB 7B                   jp nz,a00248
      92   00:7BC8  C3 DC 7B                   jp a00275
      93   00:7BCB  3A 57 C9            a00248 ld a,(varobj)
      94   00:7BCE  CD 7D D1                   call getob
      95   00:7BD1  21 0A 00                   ld hl,10
      96   00:7BD4  CD C2 D2                   call addsc
      97   00:7BD7  3E 5A                      ld a,90
      98   00:7BD9  32 11 CC                   ld (sndtyp),a
      99   00:7BDC  CD 14 DC            a00275 call tfall
     100   00:7BDF  3E 0C                      ld a,12
     101   00:7BE1  DD BE 08                   cp (ix+8)
     102   00:7BE4  DA F3 7B                   jp c,a00313
     103   00:7BE7  3E 7E                      ld a,126
     104   00:7BE9  DD 77 08                   ld (ix+8),a
     105   00:7BEC  CD 13 DB                   call scru
     106   00:7BEF  AF                         xor a
     107   00:7BF0  32 3D C9                   ld (vard),a
     108   00:7BF3  3E 84               a00313 ld a,132
     109   00:7BF5  DD BE 08                   cp (ix+8)
     110   00:7BF8  D2 07 7C                   jp nc,a00347
     111   00:7BFB  3E 0D                      ld a,13
     112   00:7BFD  DD 77 08                   ld (ix+8),a
     113   00:7C00  CD 1A DB                   call scrd
     114   00:7C03  AF                         xor a
     115   00:7C04  32 3D C9                   ld (vard),a
     116   00:7C07  3A 21 C9            a00347 ld a,(joyval)
     117   00:7C0A  E6 01                      and 1
     118   00:7C0C  CA 47 7C                   jp z,a00457
     119   00:7C0F  3E E6                      ld a,230
     120   00:7C11  DD BE 09                   cp (ix+9)
     121   00:7C14  D2 27 7C                   jp nc,a00401
     122   00:7C17  CD 0D DB                   call scrr
     123   00:7C1A  AF                         xor a
     124   00:7C1B  32 3D C9                   ld (vard),a
     125   00:7C1E  3E 10                      ld a,16
     126   00:7C20  DD 77 09                   ld (ix+9),a
     127   00:7C23  C9                         ret
     128   00:7C24  C3 47 7C                   jp a00457
     129   00:7C27  CD 3E D5            a00401 call cangr
     130   00:7C2A  C2 47 7C                   jp nz,a00457
     131   00:7C2D  AF                         xor a
     132   00:7C2E  DD 77 06                   ld (ix+6),a
     133   00:7C31  AF                         xor a
     134   00:7C32  CD 3F DA                   call animsp
     135   00:7C35  AF                         xor a
     136   00:7C36  DD BE 0B                   cp (ix+11)
     137   00:7C39  C2 41 7C                   jp nz,a00448
     138   00:7C3C  3E 05                      ld a,5
     139   00:7C3E  32 11 CC                   ld (sndtyp),a
     140   00:7C41  DD 34 09            a00448 inc (ix+9)
     141   00:7C44  DD 34 09                   inc (ix+9)
     142   00:7C47  3A 21 C9            a00457 ld a,(joyval)
     143   00:7C4A  E6 02                      and 2
     144   00:7C4C  CA 88 7C                   jp z,a00567
     145   00:7C4F  3E 08                      ld a,8
     146   00:7C51  DD BE 09                   cp (ix+9)
     147   00:7C54  DA 67 7C                   jp c,a00511
     148   00:7C57  CD F7 DA                   call scrl
     149   00:7C5A  AF                         xor a
     150   00:7C5B  32 3D C9                   ld (vard),a
     151   00:7C5E  3E E4                      ld a,228
     152   00:7C60  DD 77 09                   ld (ix+9),a
     153   00:7C63  C9                         ret
     154   00:7C64  C3 88 7C                   jp a00567
     155   00:7C67  CD 33 D5            a00511 call cangl
     156   00:7C6A  C2 88 7C                   jp nz,a00567
     157   00:7C6D  3E 01                      ld a,1
     158   00:7C6F  DD 77 06                   ld (ix+6),a
     159   00:7C72  AF                         xor a
     160   00:7C73  CD 3F DA                   call animsp
     161   00:7C76  AF                         xor a
     162   00:7C77  DD BE 0B                   cp (ix+11)
     163   00:7C7A  C2 82 7C                   jp nz,a00558
     164   00:7C7D  3E 05                      ld a,5
     165   00:7C7F  32 11 CC                   ld (sndtyp),a
     166   00:7C82  DD 35 09            a00558 dec (ix+9)
     167   00:7C85  DD 35 09                   dec (ix+9)
     168   00:7C88  3A 21 C9            a00567 ld a,(joyval)
     169   00:7C8B  E6 10                      and 16
     170   00:7C8D  CA A1 7C                   jp z,a00608
     171   00:7C90  CD 65 D6                   call hop
     172   00:7C93  CD 10 D5                   call cangd
     173   00:7C96  C2 9C 7C                   jp nz,a00599
     174   00:7C99  C3 A1 7C                   jp a00608
     175   00:7C9C  3E 3C               a00599 ld a,60
     176   00:7C9E  32 11 CC                   ld (sndtyp),a
     177   00:7CA1  06 05               a00608 ld b,DEADLY
     178   00:7CA3  CD F1 D5                   call tded
     179   00:7CA6  B8                         cp b
     180   00:7CA7  C2 AE 7C                   jp nz,a00634
     181   00:7CAA  21 5C C9                   ld hl,deadf
     182   00:7CAD  74                         ld (hl),h
     183   00:7CAE  C3 35 DB            a00634 jp grav
     184   00:7CB1  (00:7CB1)           evnt01 equ $
     185   00:7CB1  3E 03                      ld a,3
     186   00:7CB3  DD BE 06                   cp (ix+6)
     187   00:7CB6  C2 C1 7C                   jp nz,b00028
     188   00:7CB9  3E 01                      ld a,1
     189   00:7CBB  DD 77 0C                   ld (ix+12),a
     190   00:7CBE  C3 C6 7C                   jp b00037
     191   00:7CC1  3E 01               b00028 ld a,1
     192   00:7CC3  DD 77 0C                   ld (ix+12),a
     193   00:7CC6  AF                  b00037 xor a
     194   00:7CC7  DD BE 0B                   cp (ix+11)
     195   00:7CCA  C2 12 7D                   jp nz,b00168
     196   00:7CCD  DD 7E 0C                   ld a,(ix+12)
     197   00:7CD0  32 60 C9                   ld (loopa),a
     198   00:7CD3  CD 33 D5            b00060 call cangl
     199   00:7CD6  C2 FF 7C                   jp nz,b00134
     200   00:7CD9  DD 35 09                   dec (ix+9)
     201   00:7CDC  DD 35 09                   dec (ix+9)
     202   00:7CDF  0E 10                      ld c,16
     203   00:7CE1  DD 7E 09                   ld a,(ix+9)
     204   00:7CE4  91                         sub c
     205   00:7CE5  DD 77 09                   ld (ix+9),a
     206   00:7CE8  CD 10 D5                   call cangd
     207   00:7CEB  C2 F3 7C                   jp nz,b00113
     208   00:7CEE  3E 01                      ld a,1
     209   00:7CF0  DD 77 0B                   ld (ix+11),a
     210   00:7CF3  0E 10               b00113 ld c,16
     211   00:7CF5  DD 7E 09                   ld a,(ix+9)
     212   00:7CF8  81                         add a,c
     213   00:7CF9  DD 77 09                   ld (ix+9),a
     214   00:7CFC  C3 04 7D                   jp b00142
     215   00:7CFF  3E 01               b00134 ld a,1
     216   00:7D01  DD 77 0B                   ld (ix+11),a
     217   00:7D04  21 60 C9            b00142 ld hl,loopa
     218   00:7D07  35                         dec (hl)
     219   00:7D08  C2 D3 7C                   jp nz,b00060
     220   00:7D0B  AF                         xor a
     221   00:7D0C  CD 57 DA                   call animbk
     222   00:7D0F  C3 52 7D                   jp b00282
     223   00:7D12  DD 7E 0C            b00168 ld a,(ix+12)
     224   00:7D15  32 60 C9                   ld (loopa),a
     225   00:7D18  CD 3E D5            b00178 call cangr
     226   00:7D1B  C2 43 7D                   jp nz,b00252
     227   00:7D1E  DD 34 09                   inc (ix+9)
     228   00:7D21  DD 34 09                   inc (ix+9)
     229   00:7D24  0E 10                      ld c,16
     230   00:7D26  DD 7E 09                   ld a,(ix+9)
     231   00:7D29  81                         add a,c
     232   00:7D2A  DD 77 09                   ld (ix+9),a
     233   00:7D2D  CD 10 D5                   call cangd
     234   00:7D30  C2 37 7D                   jp nz,b00232
     235   00:7D33  AF                         xor a
     236   00:7D34  DD 77 0B                   ld (ix+11),a
     237   00:7D37  0E 10               b00232 ld c,16
     238   00:7D39  DD 7E 09                   ld a,(ix+9)
     239   00:7D3C  91                         sub c
     240   00:7D3D  DD 77 09                   ld (ix+9),a
     241   00:7D40  C3 47 7D                   jp b00261
     242   00:7D43  AF                  b00252 xor a
     243   00:7D44  DD 77 0B                   ld (ix+11),a
     244   00:7D47  21 60 C9            b00261 ld hl,loopa
     245   00:7D4A  35                         dec (hl)
     246   00:7D4B  C2 18 7D                   jp nz,b00178
     247   00:7D4E  AF                         xor a
     248   00:7D4F  CD 3F DA                   call animsp
     249   00:7D52  06 00               b00282 ld b,0
     250   00:7D54  CD 6D DA                   call sktyp
     251   00:7D57  D2 5E 7D                   jp nc,b00304
     252   00:7D5A  21 5C C9                   ld hl,deadf
     253   00:7D5D  74                         ld (hl),h
     254   00:7D5E  C9                  b00304 ret
     255   00:7D5F  (00:7D5F)           evnt02 equ $
     256   00:7D5F  3E 05                      ld a,5
     257   00:7D61  DD BE 06                   cp (ix+6)
     258   00:7D64  C2 6F 7D                   jp nz,c00028
     259   00:7D67  3E 02                      ld a,2
     260   00:7D69  DD 77 0C                   ld (ix+12),a
     261   00:7D6C  C3 74 7D                   jp c00037
     262   00:7D6F  3E 01               c00028 ld a,1
     263   00:7D71  DD 77 0C                   ld (ix+12),a
     264   00:7D74  AF                  c00037 xor a
     265   00:7D75  DD BE 0B                   cp (ix+11)
     266   00:7D78  C2 9F 7D                   jp nz,c00109
     267   00:7D7B  DD 7E 0C                   ld a,(ix+12)
     268   00:7D7E  32 60 C9                   ld (loopa),a
     269   00:7D81  CD ED D4            c00060 call cangu
     270   00:7D84  C2 90 7D                   jp nz,c00082
     271   00:7D87  DD 35 08                   dec (ix+8)
     272   00:7D8A  DD 35 08                   dec (ix+8)
     273   00:7D8D  C3 95 7D                   jp c00091
     274   00:7D90  3E 01               c00082 ld a,1
     275   00:7D92  DD 77 0B                   ld (ix+11),a
     276   00:7D95  21 60 C9            c00091 ld hl,loopa
     277   00:7D98  35                         dec (hl)
     278   00:7D99  C2 81 7D                   jp nz,c00060
     279   00:7D9C  C3 BF 7D                   jp c00164
     280   00:7D9F  DD 7E 0C            c00109 ld a,(ix+12)
     281   00:7DA2  32 60 C9                   ld (loopa),a
     282   00:7DA5  CD 10 D5            c00119 call cangd
     283   00:7DA8  C2 B4 7D                   jp nz,c00142
     284   00:7DAB  DD 34 08                   inc (ix+8)
     285   00:7DAE  DD 34 08                   inc (ix+8)
     286   00:7DB1  C3 B8 7D                   jp c00150
     287   00:7DB4  AF                  c00142 xor a
     288   00:7DB5  DD 77 0B                   ld (ix+11),a
     289   00:7DB8  21 60 C9            c00150 ld hl,loopa
     290   00:7DBB  35                         dec (hl)
     291   00:7DBC  C2 A5 7D                   jp nz,c00119
     292   00:7DBF  AF                  c00164 xor a
     293   00:7DC0  CD 3F DA                   call animsp
     294   00:7DC3  06 00                      ld b,0
     295   00:7DC5  CD 6D DA                   call sktyp
     296   00:7DC8  D2 CF 7D                   jp nc,c00194
     297   00:7DCB  21 5C C9                   ld hl,deadf
     298   00:7DCE  74                         ld (hl),h
     299   00:7DCF  C9                  c00194 ret
     300   00:7DD0  (00:7DD0)           evnt03 equ $
     301   00:7DD0  AF                         xor a
     302   00:7DD1  DD BE 0B                   cp (ix+11)
     303   00:7DD4  C2 EE 7D                   jp nz,d00051
     304   00:7DD7  CD 33 D5                   call cangl
     305   00:7DDA  C2 E6 7D                   jp nz,d00038
     306   00:7DDD  DD 35 09                   dec (ix+9)
     307   00:7DE0  DD 35 09                   dec (ix+9)
     308   00:7DE3  C3 EB 7D                   jp d00047
     309   00:7DE6  3E 01               d00038 ld a,1
     310   00:7DE8  DD 77 0B                   ld (ix+11),a
     311   00:7DEB  C3 01 7E            d00047 jp d00082
     312   00:7DEE  CD 3E D5            d00051 call cangr
     313   00:7DF1  C2 FD 7D                   jp nz,d00074
     314   00:7DF4  DD 34 09                   inc (ix+9)
     315   00:7DF7  DD 34 09                   inc (ix+9)
     316   00:7DFA  C3 01 7E                   jp d00082
     317   00:7DFD  AF                  d00074 xor a
     318   00:7DFE  DD 77 0B                   ld (ix+11),a
     319   00:7E01  AF                  d00082 xor a
     320   00:7E02  DD BE 0A                   cp (ix+10)
     321   00:7E05  C2 1F 7E                   jp nz,d00130
     322   00:7E08  CD ED D4                   call cangu
     323   00:7E0B  C2 17 7E                   jp nz,d00118
     324   00:7E0E  DD 35 08                   dec (ix+8)
     325   00:7E11  DD 35 08                   dec (ix+8)
     326   00:7E14  C3 1C 7E                   jp d00126
     327   00:7E17  3E 01               d00118 ld a,1
     328   00:7E19  DD 77 0A                   ld (ix+10),a
     329   00:7E1C  C3 32 7E            d00126 jp d00161
     330   00:7E1F  CD 10 D5            d00130 call cangd
     331   00:7E22  C2 2E 7E                   jp nz,d00153
     332   00:7E25  DD 34 08                   inc (ix+8)
     333   00:7E28  DD 34 08                   inc (ix+8)
     334   00:7E2B  C3 32 7E                   jp d00161
     335   00:7E2E  AF                  d00153 xor a
     336   00:7E2F  DD 77 0A                   ld (ix+10),a
     337   00:7E32  AF                  d00161 xor a
     338   00:7E33  CD 3F DA                   call animsp
     339   00:7E36  06 00                      ld b,0
     340   00:7E38  CD 6D DA                   call sktyp
     341   00:7E3B  D2 42 7E                   jp nc,d00191
     342   00:7E3E  21 5C C9                   ld hl,deadf
     343   00:7E41  74                         ld (hl),h
     344   00:7E42  C9                  d00191 ret
     345   00:7E43  (00:7E43)           evnt04 equ $
     346   00:7E43  C9                         ret
     347   00:7E44  (00:7E44)           evnt05 equ $
     348   00:7E44  AF                         xor a
     349   00:7E45  CD 3F DA                   call animsp
     350   00:7E48  C9                         ret
     351   00:7E49  (00:7E49)           evnt06 equ $
     352   00:7E49  CD E3 D1                   call skobj
     353   00:7E4C  32 57 C9                   ld (varobj),a
     354   00:7E4F  3E FE                      ld a,254
     355   00:7E51  21 57 C9                   ld hl,varobj
     356   00:7E54  BE                         cp (hl)
     357   00:7E55  DA 5D 7E                   jp c,g00038
     358   00:7E58  DD 36 05 FF                ld (ix+5),255
     359   00:7E5C  C9                         ret
     360   00:7E5D  3A 43 C9            g00038 ld a,(varj)
     361   00:7E60  21 38 C9                   ld hl,scno
     362   00:7E63  BE                         cp (hl)
     363   00:7E64  C2 85 7E                   jp nz,g00110
     364   00:7E67  AF                         xor a
     365   00:7E68  CD A2 D1                   call gotob
     366   00:7E6B  DA 71 7E                   jp c,g00073
     367   00:7E6E  C3 80 7E                   jp g00102
     368   00:7E71  DD 7E 09            g00073 ld a,(ix+9)
     369   00:7E74  67                         ld h,a
     370   00:7E75  DD 7E 08                   ld a,(ix+8)
     371   00:7E78  6F                         ld l,a
     372   00:7E79  22 5E C9                   ld (dispx),hl
     373   00:7E7C  AF                         xor a
     374   00:7E7D  CD C4 D1                   call drpob
     375   00:7E80  DD 36 05 FF         g00102 ld (ix+5),255
     376   00:7E84  C9                         ret
     377   00:7E85  3A 44 C9            g00110 ld a,(vark)
     378   00:7E88  21 38 C9                   ld hl,scno
     379   00:7E8B  BE                         cp (hl)
     380   00:7E8C  C2 AF 7E                   jp nz,g00183
     381   00:7E8F  3E 01                      ld a,1
     382   00:7E91  CD A2 D1                   call gotob
     383   00:7E94  DA 9A 7E                   jp c,g00145
     384   00:7E97  C3 AA 7E                   jp g00175
     385   00:7E9A  DD 7E 09            g00145 ld a,(ix+9)
     386   00:7E9D  67                         ld h,a
     387   00:7E9E  DD 7E 08                   ld a,(ix+8)
     388   00:7EA1  6F                         ld l,a
     389   00:7EA2  22 5E C9                   ld (dispx),hl
     390   00:7EA5  3E 01                      ld a,1
     391   00:7EA7  CD C4 D1                   call drpob
     392   00:7EAA  DD 36 05 FF         g00175 ld (ix+5),255
     393   00:7EAE  C9                         ret
     394   00:7EAF  3A 45 C9            g00183 ld a,(varl)
     395   00:7EB2  21 38 C9                   ld hl,scno
     396   00:7EB5  BE                         cp (hl)
     397   00:7EB6  C2 D9 7E                   jp nz,g00256
     398   00:7EB9  3E 02                      ld a,2
     399   00:7EBB  CD A2 D1                   call gotob
     400   00:7EBE  DA C4 7E                   jp c,g00218
     401   00:7EC1  C3 D4 7E                   jp g00248
     402   00:7EC4  DD 7E 09            g00218 ld a,(ix+9)
     403   00:7EC7  67                         ld h,a
     404   00:7EC8  DD 7E 08                   ld a,(ix+8)
     405   00:7ECB  6F                         ld l,a
     406   00:7ECC  22 5E C9                   ld (dispx),hl
     407   00:7ECF  3E 02                      ld a,2
     408   00:7ED1  CD C4 D1                   call drpob
     409   00:7ED4  DD 36 05 FF         g00248 ld (ix+5),255
     410   00:7ED8  C9                         ret
     411   00:7ED9  3A 42 C9            g00256 ld a,(vari)
     412   00:7EDC  21 38 C9                   ld hl,scno
     413   00:7EDF  BE                         cp (hl)
     414   00:7EE0  C2 03 7F                   jp nz,g00329
     415   00:7EE3  3E 03                      ld a,3
     416   00:7EE5  CD A2 D1                   call gotob
     417   00:7EE8  DA EE 7E                   jp c,g00291
     418   00:7EEB  C3 FE 7E                   jp g00321
     419   00:7EEE  DD 7E 09            g00291 ld a,(ix+9)
     420   00:7EF1  67                         ld h,a
     421   00:7EF2  DD 7E 08                   ld a,(ix+8)
     422   00:7EF5  6F                         ld l,a
     423   00:7EF6  22 5E C9                   ld (dispx),hl
     424   00:7EF9  3E 03                      ld a,3
     425   00:7EFB  CD C4 D1                   call drpob
     426   00:7EFE  DD 36 05 FF         g00321 ld (ix+5),255
     427   00:7F02  C9                         ret
     428   00:7F03  DD 36 05 FF         g00329 ld (ix+5),255
     429   00:7F07  C9                         ret
     430   00:7F08  (00:7F08)           evnt07 equ $
     431   00:7F08  06 00                      ld b,0
     432   00:7F0A  CD 6D DA                   call sktyp
     433   00:7F0D  D2 49 7F                   jp nc,h00104
     434   00:7F10  AF                         xor a
     435   00:7F11  DD BE 07                   cp (ix+7)
     436   00:7F14  C2 1A 7F                   jp nz,h00033
     437   00:7F17  C3 49 7F                   jp h00104
     438   00:7F1A  DD 2A 8E DA         h00033 ld ix,(skptr)
     439   00:7F1E  3E 01                      ld a,1
     440   00:7F20  DD BE 06                   cp (ix+6)
     441   00:7F23  C2 32 7F                   jp nz,h00069
     442   00:7F26  DD 34 09                   inc (ix+9)
     443   00:7F29  DD 34 09                   inc (ix+9)
     444   00:7F2C  DD 34 09                   inc (ix+9)
     445   00:7F2F  DD 34 09                   inc (ix+9)
     446   00:7F32  AF                  h00069 xor a
     447   00:7F33  DD BE 06                   cp (ix+6)
     448   00:7F36  C2 45 7F                   jp nz,h00099
     449   00:7F39  DD 35 09                   dec (ix+9)
     450   00:7F3C  DD 35 09                   dec (ix+9)
     451   00:7F3F  DD 35 09                   dec (ix+9)
     452   00:7F42  DD 35 09                   dec (ix+9)
     453   00:7F45  DD 2A 80 D8         h00099 ld ix,(ogptr)
     454   00:7F49  AF                  h00104 xor a
     455   00:7F4A  DD BE 0B                   cp (ix+11)
     456   00:7F4D  D2 5C 7F                   jp nc,h00138
     457   00:7F50  3E 04                      ld a,4
     458   00:7F52  DD BE 0B                   cp (ix+11)
     459   00:7F55  DA 5C 7F                   jp c,h00138
     460   00:7F58  AF                         xor a
     461   00:7F59  CD 3F DA                   call animsp
     462   00:7F5C  3E 19               h00138 ld a,25
     463   00:7F5E  DD BE 0B                   cp (ix+11)
     464   00:7F61  D2 70 7F                   jp nc,h00172
     465   00:7F64  3E 1D                      ld a,29
     466   00:7F66  DD BE 0B                   cp (ix+11)
     467   00:7F69  DA 70 7F                   jp c,h00172
     468   00:7F6C  AF                         xor a
     469   00:7F6D  CD 57 DA                   call animbk
     470   00:7F70  DD 7E 0B            h00172 ld a,(ix+11)
     471   00:7F73  3C                         inc a
     472   00:7F74  DD 77 0B                   ld (ix+11),a
     473   00:7F77  3E 96                      ld a,150
     474   00:7F79  DD BE 0B                   cp (ix+11)
     475   00:7F7C  C2 83 7F                   jp nz,h00207
     476   00:7F7F  AF                         xor a
     477   00:7F80  DD 77 0B                   ld (ix+11),a
     478   00:7F83  C9                  h00207 ret
     479   00:7F84  (00:7F84)           evnt08 equ $
     480   00:7F84  AF                         xor a
     481   00:7F85  CD 3F DA                   call animsp
     482   00:7F88  06 00                      ld b,0
     483   00:7F8A  CD 6D DA                   call sktyp
     484   00:7F8D  D2 B3 7F                   jp nc,i00084
     485   00:7F90  AF                         xor a
     486   00:7F91  CD A2 D1                   call gotob
     487   00:7F94  DA B3 7F                   jp c,i00084
     488   00:7F97  3E 01                      ld a,1
     489   00:7F99  CD A2 D1                   call gotob
     490   00:7F9C  DA B3 7F                   jp c,i00084
     491   00:7F9F  3E 02                      ld a,2
     492   00:7FA1  CD A2 D1                   call gotob
     493   00:7FA4  DA B3 7F                   jp c,i00084
     494   00:7FA7  3E 03                      ld a,3
     495   00:7FA9  CD A2 D1                   call gotob
     496   00:7FAC  DA B3 7F                   jp c,i00084
     497   00:7FAF  21 5D C9                   ld hl,gamwon
     498   00:7FB2  74                         ld (hl),h
     499   00:7FB3  C9                  i00084 ret
     500   00:7FB4  (00:7FB4)           evnt09 equ $
     501   00:7FB4  AF                         xor a
     502   00:7FB5  DD BE 05                   cp (ix+5)
     503   00:7FB8  C2 F1 7F                   jp nz,j00111
     504   00:7FBB  3E FF                      ld a,255
     505   00:7FBD  21 3B C9                   ld hl,varb
     506   00:7FC0  BE                         cp (hl)
     507   00:7FC1  CA D9 7F                   jp z,j00068
     508   00:7FC4  3E FF                      ld a,255
     509   00:7FC6  21 3C C9                   ld hl,varc
     510   00:7FC9  BE                         cp (hl)
     511   00:7FCA  CA D9 7F                   jp z,j00068
     512   00:7FCD  3A 3B C9                   ld a,(varb)
     513   00:7FD0  DD 77 08                   ld (ix+8),a
     514   00:7FD3  3A 3C C9                   ld a,(varc)
     515   00:7FD6  DD 77 09                   ld (ix+9),a
     516   00:7FD9  3E 02               j00068 ld a,2
     517   00:7FDB  DD BE 05                   cp (ix+5)
     518   00:7FDE  C2 F1 7F                   jp nz,j00111
     519   00:7FE1  3A 3A C9                   ld a,(vara)
     520   00:7FE4  3C                         inc a
     521   00:7FE5  32 3A C9                   ld (vara),a
     522   00:7FE8  AF                         xor a
     523   00:7FE9  DD 77 0B                   ld (ix+11),a
     524   00:7FEC  3E 45                      ld a,69
     525   00:7FEE  DD 77 0C                   ld (ix+12),a
     526   00:7FF1  C9                  j00111 ret
     527   00:7FF2  (00:7FF2)           evnt10 equ $
     528   00:7FF2  3E 15                      ld a,21
     529   00:7FF4  32 53 C9                   ld (charx),a
     530   00:7FF7  3E 18                      ld a,24
     531   00:7FF9  32 54 C9                   ld (chary),a
     532   00:7FFC  21 71 D2                   ld hl,score
     533   00:7FFF  06 06                      ld b,6
     534   00:8001  CD 8B D2                   call dscor
     535   00:8004  3E 18                      ld a,24
     536   00:8006  32 54 C9                   ld (chary),a
     537   00:8009  3E 03                      ld a,3
     538   00:800B  32 60 C9                   ld (loopa),a
     539   00:800E  21 86 9D            k00050 ld hl,chgfx
     540   00:8011  22 83 D2                   ld (grbase),hl
     541   00:8014  2A 53 C9                   ld hl,(charx)
     542   00:8017  22 5E C9                   ld (dispx),hl
     543   00:801A  AF                         xor a
     544   00:801B  CD 90 D3                   call pattr
     545   00:801E  2A 5E C9                   ld hl,(dispx)
     546   00:8021  22 53 C9                   ld (charx),hl
     547   00:8024  21 60 C9                   ld hl,loopa
     548   00:8027  35                         dec (hl)
     549   00:8028  C2 0E 80                   jp nz,k00050
     550   00:802B  3E 0C                      ld a,12
     551   00:802D  32 54 C9                   ld (chary),a
     552   00:8030  AF                         xor a
     553   00:8031  CD A2 D1                   call gotob
     554   00:8034  DA 51 80                   jp c,k00168
     555   00:8037  21 86 9D                   ld hl,chgfx
     556   00:803A  22 83 D2                   ld (grbase),hl
     557   00:803D  2A 53 C9                   ld hl,(charx)
     558   00:8040  22 5E C9                   ld (dispx),hl
     559   00:8043  3E 49                      ld a,73
     560   00:8045  CD 90 D3                   call pattr
     561   00:8048  2A 5E C9                   ld hl,(dispx)
     562   00:804B  22 53 C9                   ld (charx),hl
     563   00:804E  C3 68 80                   jp k00208
     564   00:8051  21 86 9D            k00168 ld hl,chgfx
     565   00:8054  22 83 D2                   ld (grbase),hl
     566   00:8057  2A 53 C9                   ld hl,(charx)
     567   00:805A  22 5E C9                   ld (dispx),hl
     568   00:805D  3E 46                      ld a,70
     569   00:805F  CD 90 D3                   call pattr
     570   00:8062  2A 5E C9                   ld hl,(dispx)
     571   00:8065  22 53 C9                   ld (charx),hl
     572   00:8068  3E 01               k00208 ld a,1
     573   00:806A  CD A2 D1                   call gotob
     574   00:806D  DA 8A 80                   jp c,k00264
     575   00:8070  21 86 9D                   ld hl,chgfx
     576   00:8073  22 83 D2                   ld (grbase),hl
     577   00:8076  2A 53 C9                   ld hl,(charx)
     578   00:8079  22 5E C9                   ld (dispx),hl
     579   00:807C  3E 4A                      ld a,74
     580   00:807E  CD 90 D3                   call pattr
     581   00:8081  2A 5E C9                   ld hl,(dispx)
     582   00:8084  22 53 C9                   ld (charx),hl
     583   00:8087  C3 A1 80                   jp k00304
     584   00:808A  21 86 9D            k00264 ld hl,chgfx
     585   00:808D  22 83 D2                   ld (grbase),hl
     586   00:8090  2A 53 C9                   ld hl,(charx)
     587   00:8093  22 5E C9                   ld (dispx),hl
     588   00:8096  3E 47                      ld a,71
     589   00:8098  CD 90 D3                   call pattr
     590   00:809B  2A 5E C9                   ld hl,(dispx)
     591   00:809E  22 53 C9                   ld (charx),hl
     592   00:80A1  3E 02               k00304 ld a,2
     593   00:80A3  CD A2 D1                   call gotob
     594   00:80A6  DA C3 80                   jp c,k00360
     595   00:80A9  21 86 9D                   ld hl,chgfx
     596   00:80AC  22 83 D2                   ld (grbase),hl
     597   00:80AF  2A 53 C9                   ld hl,(charx)
     598   00:80B2  22 5E C9                   ld (dispx),hl
     599   00:80B5  3E 4B                      ld a,75
     600   00:80B7  CD 90 D3                   call pattr
     601   00:80BA  2A 5E C9                   ld hl,(dispx)
     602   00:80BD  22 53 C9                   ld (charx),hl
     603   00:80C0  C3 DA 80                   jp k00400
     604   00:80C3  21 86 9D            k00360 ld hl,chgfx
     605   00:80C6  22 83 D2                   ld (grbase),hl
     606   00:80C9  2A 53 C9                   ld hl,(charx)
     607   00:80CC  22 5E C9                   ld (dispx),hl
     608   00:80CF  3E 48                      ld a,72
     609   00:80D1  CD 90 D3                   call pattr
     610   00:80D4  2A 5E C9                   ld hl,(dispx)
     611   00:80D7  22 53 C9                   ld (charx),hl
     612   00:80DA  3E 03               k00400 ld a,3
     613   00:80DC  CD A2 D1                   call gotob
     614   00:80DF  DA FC 80                   jp c,k00456
     615   00:80E2  21 86 9D                   ld hl,chgfx
     616   00:80E5  22 83 D2                   ld (grbase),hl
     617   00:80E8  2A 53 C9                   ld hl,(charx)
     618   00:80EB  22 5E C9                   ld (dispx),hl
     619   00:80EE  3E 4C                      ld a,76
     620   00:80F0  CD 90 D3                   call pattr
     621   00:80F3  2A 5E C9                   ld hl,(dispx)
     622   00:80F6  22 53 C9                   ld (charx),hl
     623   00:80F9  C3 13 81                   jp k00496
     624   00:80FC  21 86 9D            k00456 ld hl,chgfx
     625   00:80FF  22 83 D2                   ld (grbase),hl
     626   00:8102  2A 53 C9                   ld hl,(charx)
     627   00:8105  22 5E C9                   ld (dispx),hl
     628   00:8108  3E 4D                      ld a,77
     629   00:810A  CD 90 D3                   call pattr
     630   00:810D  2A 5E C9                   ld hl,(dispx)
     631   00:8110  22 53 C9                   ld (charx),hl
     632   00:8113  AF                  k00496 xor a
     633   00:8114  21 46 C9                   ld hl,varm
     634   00:8117  BE                         cp (hl)
     635   00:8118  C2 2D 81                   jp nz,k00549
     636   00:811B  AF                         xor a
     637   00:811C  21 47 C9                   ld hl,varn
     638   00:811F  BE                         cp (hl)
     639   00:8120  C2 2D 81                   jp nz,k00549
     640   00:8123  3E 01                      ld a,1
     641   00:8125  32 39 C9                   ld (numlif),a
     642   00:8128  21 5C C9                   ld hl,deadf
     643   00:812B  74                         ld (hl),h
     644   00:812C  C9                         ret
     645   00:812D  3A 3A C9            k00549 ld a,(vara)
     646   00:8130  3C                         inc a
     647   00:8131  32 3A C9                   ld (vara),a
     648   00:8134  3E 0A                      ld a,10
     649   00:8136  21 3A C9                   ld hl,vara
     650   00:8139  BE                         cp (hl)
     651   00:813A  C2 41 81                   jp nz,k00587
     652   00:813D  AF                         xor a
     653   00:813E  32 3A C9                   ld (vara),a
     654   00:8141  3E 15               k00587 ld a,21
     655   00:8143  32 53 C9                   ld (charx),a
     656   00:8146  3E 07                      ld a,7
     657   00:8148  32 54 C9                   ld (chary),a
     658   00:814B  21 86 9D                   ld hl,chgfx
     659   00:814E  22 83 D2                   ld (grbase),hl
     660   00:8151  2A 53 C9                   ld hl,(charx)
     661   00:8154  22 5E C9                   ld (dispx),hl
     662   00:8157  3E 54                      ld a,84
     663   00:8159  CD 90 D3                   call pattr
     664   00:815C  2A 5E C9                   ld hl,(dispx)
     665   00:815F  22 53 C9                   ld (charx),hl
     666   00:8162  3A 54 C9                   ld a,(chary)
     667   00:8165  3C                         inc a
     668   00:8166  32 54 C9                   ld (chary),a
     669   00:8169  3A 39 C9                   ld a,(numlif)
     670   00:816C  CD C9 DA                   call disply
     671   00:816F  3E 15                      ld a,21
     672   00:8171  32 53 C9                   ld (charx),a
     673   00:8174  3E 13                      ld a,19
     674   00:8176  32 54 C9                   ld (chary),a
     675   00:8179  21 86 9D                   ld hl,chgfx
     676   00:817C  22 83 D2                   ld (grbase),hl
     677   00:817F  2A 53 C9                   ld hl,(charx)
     678   00:8182  22 5E C9                   ld (dispx),hl
     679   00:8185  3E 59                      ld a,89
     680   00:8187  CD 90 D3                   call pattr
     681   00:818A  2A 5E C9                   ld hl,(dispx)
     682   00:818D  22 53 C9                   ld (charx),hl
     683   00:8190  21 86 9D                   ld hl,chgfx
     684   00:8193  22 83 D2                   ld (grbase),hl
     685   00:8196  2A 53 C9                   ld hl,(charx)
     686   00:8199  22 5E C9                   ld (dispx),hl
     687   00:819C  AF                         xor a
     688   00:819D  CD 90 D3                   call pattr
     689   00:81A0  2A 5E C9                   ld hl,(dispx)
     690   00:81A3  22 53 C9                   ld (charx),hl
     691   00:81A6  3A 49 C9                   ld a,(varp)
     692   00:81A9  32 4C C9                   ld (vars),a
     693   00:81AC  3A 4C C9                   ld a,(vars)
     694   00:81AF  1F                         rra
     695   00:81B0  1F                         rra
     696   00:81B1  1F                         rra
     697   00:81B2  E6 1F                      and 31
     698   00:81B4  32 4C C9                   ld (vars),a
     699   00:81B7  AF                         xor a
     700   00:81B8  21 4C C9                   ld hl,vars
     701   00:81BB  BE                         cp (hl)
     702   00:81BC  D2 E3 81                   jp nc,k00873
     703   00:81BF  3A 4C C9                   ld a,(vars)
     704   00:81C2  32 60 C9                   ld (loopa),a
     705   00:81C5  21 86 9D            k00820 ld hl,chgfx
     706   00:81C8  22 83 D2                   ld (grbase),hl
     707   00:81CB  2A 53 C9                   ld hl,(charx)
     708   00:81CE  22 5E C9                   ld (dispx),hl
     709   00:81D1  3E 53                      ld a,83
     710   00:81D3  CD 90 D3                   call pattr
     711   00:81D6  2A 5E C9                   ld hl,(dispx)
     712   00:81D9  22 53 C9                   ld (charx),hl
     713   00:81DC  21 60 C9                   ld hl,loopa
     714   00:81DF  35                         dec (hl)
     715   00:81E0  C2 C5 81                   jp nz,k00820
     716   00:81E3  3A 4C C9            k00873 ld a,(vars)
     717   00:81E6  87                         add a,a
     718   00:81E7  87                         add a,a
     719   00:81E8  87                         add a,a
     720   00:81E9  32 4C C9                   ld (vars),a
     721   00:81EC  3A 4C C9                   ld a,(vars)
     722   00:81EF  4F                         ld c,a
     723   00:81F0  3A 49 C9                   ld a,(varp)
     724   00:81F3  91                         sub c
     725   00:81F4  32 49 C9                   ld (varp),a
     726   00:81F7  3A 49 C9                   ld a,(varp)
     727   00:81FA  32 4D C9                   ld (vart),a
     728   00:81FD  3A 4D C9                   ld a,(vart)
     729   00:8200  CB 3F                      srl a
     730   00:8202  32 4D C9                   ld (vart),a
     731   00:8205  0E 4F                      ld c,79
     732   00:8207  3A 4D C9                   ld a,(vart)
     733   00:820A  81                         add a,c
     734   00:820B  32 4D C9                   ld (vart),a
     735   00:820E  3E 0A                      ld a,10
     736   00:8210  21 4D C9                   ld hl,vart
     737   00:8213  BE                         cp (hl)
     738   00:8214  D2 32 82                   jp nc,k01016
     739   00:8217  21 86 9D                   ld hl,chgfx
     740   00:821A  22 83 D2                   ld (grbase),hl
     741   00:821D  2A 53 C9                   ld hl,(charx)
     742   00:8220  22 5E C9                   ld (dispx),hl
     743   00:8223  3A 4D C9                   ld a,(vart)
     744   00:8226  CD 90 D3                   call pattr
     745   00:8229  2A 5E C9                   ld hl,(dispx)
     746   00:822C  22 53 C9                   ld (charx),hl
     747   00:822F  C3 49 82                   jp k01055
     748   00:8232  21 86 9D            k01016 ld hl,chgfx
     749   00:8235  22 83 D2                   ld (grbase),hl
     750   00:8238  2A 53 C9                   ld hl,(charx)
     751   00:823B  22 5E C9                   ld (dispx),hl
     752   00:823E  3E 4F                      ld a,79
     753   00:8240  CD 90 D3                   call pattr
     754   00:8243  2A 5E C9                   ld hl,(dispx)
     755   00:8246  22 53 C9                   ld (charx),hl
     756   00:8249  3A 4C C9            k01055 ld a,(vars)
     757   00:824C  4F                         ld c,a
     758   00:824D  3A 49 C9                   ld a,(varp)
     759   00:8250  81                         add a,c
     760   00:8251  32 49 C9                   ld (varp),a
     761   00:8254  3A 4A C9                   ld a,(varq)
     762   00:8257  3D                         dec a
     763   00:8258  32 4A C9                   ld (varq),a
     764   00:825B  3E 1E                      ld a,30
     765   00:825D  21 4A C9                   ld hl,varq
     766   00:8260  BE                         cp (hl)
     767   00:8261  DA 69 82                   jp c,k01115
     768   00:8264  3E 64                      ld a,100
     769   00:8266  32 4A C9                   ld (varq),a
     770   00:8269  3E 64               k01115 ld a,100
     771   00:826B  21 4A C9                   ld hl,varq
     772   00:826E  BE                         cp (hl)
     773   00:826F  C2 79 82                   jp nz,k01145
     774   00:8272  3A 49 C9                   ld a,(varp)
     775   00:8275  3D                         dec a
     776   00:8276  32 49 C9                   ld (varp),a
     777   00:8279  AF                  k01145 xor a
     778   00:827A  21 49 C9                   ld hl,varp
     779   00:827D  BE                         cp (hl)
     780   00:827E  C2 8F 82                   jp nz,k01188
     781   00:8281  21 5C C9                   ld hl,deadf
     782   00:8284  74                         ld (hl),h
     783   00:8285  3E 28                      ld a,40
     784   00:8287  32 49 C9                   ld (varp),a
     785   00:828A  3E 63                      ld a,99
     786   00:828C  32 4A C9                   ld (varq),a
     787   00:828F  3A 48 C9            k01188 ld a,(varo)
     788   00:8292  3D                         dec a
     789   00:8293  32 48 C9                   ld (varo),a
     790   00:8296  3E FF                      ld a,255
     791   00:8298  21 48 C9                   ld hl,varo
     792   00:829B  BE                         cp (hl)
     793   00:829C  C2 AB 82                   jp nz,k01239
     794   00:829F  3E 19                      ld a,25
     795   00:82A1  32 48 C9                   ld (varo),a
     796   00:82A4  3A 47 C9                   ld a,(varn)
     797   00:82A7  3D                         dec a
     798   00:82A8  32 47 C9                   ld (varn),a
     799   00:82AB  3E FF               k01239 ld a,255
     800   00:82AD  21 47 C9                   ld hl,varn
     801   00:82B0  BE                         cp (hl)
     802   00:82B1  C2 C0 82                   jp nz,k01277
     803   00:82B4  3E 3B                      ld a,59
     804   00:82B6  32 47 C9                   ld (varn),a
     805   00:82B9  3A 46 C9                   ld a,(varm)
     806   00:82BC  3D                         dec a
     807   00:82BD  32 46 C9                   ld (varm),a
     808   00:82C0  AF                  k01277 xor a
     809   00:82C1  21 46 C9                   ld hl,varm
     810   00:82C4  BE                         cp (hl)
     811   00:82C5  C2 DF 82                   jp nz,k01337
     812   00:82C8  3E 1E                      ld a,30
     813   00:82CA  21 47 C9                   ld hl,varn
     814   00:82CD  BE                         cp (hl)
     815   00:82CE  DA DF 82                   jp c,k01337
     816   00:82D1  3E 19                      ld a,25
     817   00:82D3  21 48 C9                   ld hl,varo
     818   00:82D6  BE                         cp (hl)
     819   00:82D7  C2 DF 82                   jp nz,k01337
     820   00:82DA  3E 28                      ld a,40
     821   00:82DC  32 11 CC                   ld (sndtyp),a
     822   00:82DF  3E 15               k01337 ld a,21
     823   00:82E1  32 53 C9                   ld (charx),a
     824   00:82E4  3E 02                      ld a,2
     825   00:82E6  32 54 C9                   ld (chary),a
     826   00:82E9  3A 46 C9                   ld a,(varm)
     827   00:82EC  CD C9 DA                   call disply
     828   00:82EF  3E 05                      ld a,5
     829   00:82F1  21 48 C9                   ld hl,varo
     830   00:82F4  BE                         cp (hl)
     831   00:82F5  D2 11 83                   jp nc,k01423
     832   00:82F8  21 86 9D                   ld hl,chgfx
     833   00:82FB  22 83 D2                   ld (grbase),hl
     834   00:82FE  2A 53 C9                   ld hl,(charx)
     835   00:8301  22 5E C9                   ld (dispx),hl
     836   00:8304  AF                         xor a
     837   00:8305  CD 90 D3                   call pattr
     838   00:8308  2A 5E C9                   ld hl,(dispx)
     839   00:830B  22 53 C9                   ld (charx),hl
     840   00:830E  C3 28 83                   jp k01463
     841   00:8311  21 86 9D            k01423 ld hl,chgfx
     842   00:8314  22 83 D2                   ld (grbase),hl
     843   00:8317  2A 53 C9                   ld hl,(charx)
     844   00:831A  22 5E C9                   ld (dispx),hl
     845   00:831D  3E 4E                      ld a,78
     846   00:831F  CD 90 D3                   call pattr
     847   00:8322  2A 5E C9                   ld hl,(dispx)
     848   00:8325  22 53 C9                   ld (charx),hl
     849   00:8328  3E 09               k01463 ld a,9
     850   00:832A  21 47 C9                   ld hl,varn
     851   00:832D  BE                         cp (hl)
     852   00:832E  DA 35 83                   jp c,k01487
     853   00:8331  AF                         xor a
     854   00:8332  CD C9 DA                   call disply
     855   00:8335  3A 47 C9            k01487 ld a,(varn)
     856   00:8338  CD C9 DA                   call disply
     857   00:833B  21 86 9D                   ld hl,chgfx
     858   00:833E  22 83 D2                   ld (grbase),hl
     859   00:8341  2A 53 C9                   ld hl,(charx)
     860   00:8344  22 5E C9                   ld (dispx),hl
     861   00:8347  AF                         xor a
     862   00:8348  CD 90 D3                   call pattr
     863   00:834B  2A 5E C9                   ld hl,(dispx)
     864   00:834E  22 53 C9                   ld (charx),hl
     865   00:8351  3E 08                      ld a,8
     866   00:8353  21 49 C9                   ld hl,varp
     867   00:8356  BE                         cp (hl)
     868   00:8357  DA 68 83                   jp c,k01578
     869   00:835A  3E 02                      ld a,2
     870   00:835C  21 3A C9                   ld hl,vara
     871   00:835F  BE                         cp (hl)
     872   00:8360  DA 68 83                   jp c,k01578
     873   00:8363  3E 28                      ld a,40
     874   00:8365  32 11 CC                   ld (sndtyp),a
     875   00:8368  C9                  k01578 ret
     876   00:8369  (00:8369)           evnt11 equ $
     877   00:8369  C9                         ret
     878   00:836A  (00:836A)           evnt12 equ $
     879   00:836A  3E 01                      ld a,1
     880   00:836C  32 53 C9                   ld (charx),a
     881   00:836F  3E 09                      ld a,9
     882   00:8371  32 54 C9                   ld (chary),a
     883   00:8374  AF                         xor a
     884   00:8375  CD 20 D7                   call dmsg
     885   00:8378  3E 0A                      ld a,10
     886   00:837A  CD B6 D3                   call setfgm
     887   00:837D  3E 08                      ld a,8
     888   00:837F  CD B7 D3                   call setbgm
     889   00:8382  3E 02                      ld a,2
     890   00:8384  32 53 C9                   ld (charx),a
     891   00:8387  3E 06                      ld a,6
     892   00:8389  32 54 C9                   ld (chary),a
     893   00:838C  3E 01                      ld a,1
     894   00:838E  32 5F D7                   ld (prtmod),a
     895   00:8391  3E 01                      ld a,1
     896   00:8393  CD 20 D7                   call dmsg
     897   00:8396  AF                         xor a
     898   00:8397  32 5F D7                   ld (prtmod),a
     899   00:839A  3E 0C                      ld a,12
     900   00:839C  CD B6 D3                   call setfgm
     901   00:839F  3E 08                      ld a,8
     902   00:83A1  CD B7 D3                   call setbgm
     903   00:83A4  3E 05                      ld a,5
     904   00:83A6  32 53 C9                   ld (charx),a
     905   00:83A9  3E 07                      ld a,7
     906   00:83AB  32 54 C9                   ld (chary),a
     907   00:83AE  3E 09                      ld a,9
     908   00:83B0  CD 20 D7                   call dmsg
     909   00:83B3  3E 09                      ld a,9
     910   00:83B5  32 53 C9                   ld (charx),a
     911   00:83B8  AF                         xor a
     912   00:83B9  32 54 C9                   ld (chary),a
     913   00:83BC  3E 0F                      ld a,15
     914   00:83BE  CD B6 D3                   call setfgm
     915   00:83C1  3E 08                      ld a,8
     916   00:83C3  CD B7 D3                   call setbgm
     917   00:83C6  3E 02                      ld a,2
     918   00:83C8  CD 20 D7                   call dmsg
     919   00:83CB  3E 16                      ld a,22
     920   00:83CD  32 53 C9                   ld (charx),a
     921   00:83D0  3E 06                      ld a,6
     922   00:83D2  32 54 C9                   ld (chary),a
     923   00:83D5  3E 09                      ld a,9
     924   00:83D7  CD B6 D3                   call setfgm
     925   00:83DA  3E 08                      ld a,8
     926   00:83DC  CD B7 D3                   call setbgm
     927   00:83DF  3E 08                      ld a,8
     928   00:83E1  CD 20 D7                   call dmsg
     929   00:83E4  3E 63                      ld a,99
     930   00:83E6  32 52 C9                   ld (contrl),a
     931   00:83E9  3E 63               m00219 ld a,99
     932   00:83EB  21 52 C9                   ld hl,contrl
     933   00:83EE  BE                         cp (hl)
     934   00:83EF  C2 27 84                   jp nz,m00325
     935   00:83F2  3A ED C8                   ld a,(keys+7)
     936   00:83F5  CD A1 D6                   call ktest
     937   00:83F8  DA FF 83                   jp c,m00260
     938   00:83FB  AF                         xor a
     939   00:83FC  32 52 C9                   ld (contrl),a
     940   00:83FF  3A EE C8            m00260 ld a,(keys+8)
     941   00:8402  CD A1 D6                   call ktest
     942   00:8405  DA 0D 84                   jp c,m00283
     943   00:8408  3E 01                      ld a,1
     944   00:840A  32 52 C9                   ld (contrl),a
     945   00:840D  3A EF C8            m00283 ld a,(keys+9)
     946   00:8410  CD A1 D6                   call ktest
     947   00:8413  DA 1B 84                   jp c,m00306
     948   00:8416  3E 02                      ld a,2
     949   00:8418  32 52 C9                   ld (contrl),a
     950   00:841B  3A F0 C8            m00306 ld a,(keys+10)
     951   00:841E  CD A1 D6                   call ktest
     952   00:8421  DA 24 84                   jp c,m00321
     953   00:8424  C3 E9 83            m00321 jp m00219
     954   00:8427  C9                  m00325 ret
     955   00:8428  (00:8428)           evnt13 equ $
     956   00:8428  3E 0E                      ld a,14
     957   00:842A  CD B6 D3                   call setfgm
     958   00:842D  3E 08                      ld a,8
     959   00:842F  CD B7 D3                   call setbgm
     960   00:8432  CD 49 CC                   call cls
     961   00:8435  AF                         xor a
     962   00:8436  32 3A C9                   ld (vara),a
     963   00:8439  3E FF                      ld a,255
     964   00:843B  32 3B C9                   ld (varb),a
     965   00:843E  3E FF                      ld a,255
     966   00:8440  32 3C C9                   ld (varc),a
     967   00:8443  3E 28                      ld a,40
     968   00:8445  32 49 C9                   ld (varp),a
     969   00:8448  3E 63                      ld a,99
     970   00:844A  32 4A C9                   ld (varq),a
     971   00:844D  3E 04                      ld a,4
     972   00:844F  32 46 C9                   ld (varm),a
     973   00:8452  3E 3B                      ld a,59
     974   00:8454  32 47 C9                   ld (varn),a
     975   00:8457  3E 19                      ld a,25
     976   00:8459  32 48 C9                   ld (varo),a
     977   00:845C  21 86 9D                   ld hl,chgfx
     978   00:845F  22 83 D2                   ld (grbase),hl
     979   00:8462  2A 53 C9                   ld hl,(charx)
     980   00:8465  22 5E C9                   ld (dispx),hl
     981   00:8468  3E 1D                      ld a,29
     982   00:846A  CD 90 D3                   call pattr
     983   00:846D  2A 5E C9                   ld hl,(dispx)
     984   00:8470  22 53 C9                   ld (charx),hl
     985   00:8473  3E 1E                      ld a,30
     986   00:8475  32 60 C9                   ld (loopa),a
     987   00:8478  21 86 9D            n00140 ld hl,chgfx
     988   00:847B  22 83 D2                   ld (grbase),hl
     989   00:847E  2A 53 C9                   ld hl,(charx)
     990   00:8481  22 5E C9                   ld (dispx),hl
     991   00:8484  3E 21                      ld a,33
     992   00:8486  CD 90 D3                   call pattr
     993   00:8489  2A 5E C9                   ld hl,(dispx)
     994   00:848C  22 53 C9                   ld (charx),hl
     995   00:848F  21 60 C9                   ld hl,loopa
     996   00:8492  35                         dec (hl)
     997   00:8493  C2 78 84                   jp nz,n00140
     998   00:8496  21 86 9D                   ld hl,chgfx
     999   00:8499  22 83 D2                   ld (grbase),hl
    1000   00:849C  2A 53 C9                   ld hl,(charx)
    1001   00:849F  22 5E C9                   ld (dispx),hl
    1002   00:84A2  3E 1E                      ld a,30
    1003   00:84A4  CD 90 D3                   call pattr
    1004   00:84A7  2A 5E C9                   ld hl,(dispx)
    1005   00:84AA  22 53 C9                   ld (charx),hl
    1006   00:84AD  AF                         xor a
    1007   00:84AE  32 53 C9                   ld (charx),a
    1008   00:84B1  3E 12                      ld a,18
    1009   00:84B3  32 60 C9                   ld (loopa),a
    1010   00:84B6  3A 53 C9            n00249 ld a,(charx)
    1011   00:84B9  3C                         inc a
    1012   00:84BA  32 53 C9                   ld (charx),a
    1013   00:84BD  AF                         xor a
    1014   00:84BE  32 54 C9                   ld (chary),a
    1015   00:84C1  21 86 9D                   ld hl,chgfx
    1016   00:84C4  22 83 D2                   ld (grbase),hl
    1017   00:84C7  2A 53 C9                   ld hl,(charx)
    1018   00:84CA  22 5E C9                   ld (dispx),hl
    1019   00:84CD  3E 22                      ld a,34
    1020   00:84CF  CD 90 D3                   call pattr
    1021   00:84D2  2A 5E C9                   ld hl,(dispx)
    1022   00:84D5  22 53 C9                   ld (charx),hl
    1023   00:84D8  3E 1F                      ld a,31
    1024   00:84DA  32 54 C9                   ld (chary),a
    1025   00:84DD  21 86 9D                   ld hl,chgfx
    1026   00:84E0  22 83 D2                   ld (grbase),hl
    1027   00:84E3  2A 53 C9                   ld hl,(charx)
    1028   00:84E6  22 5E C9                   ld (dispx),hl
    1029   00:84E9  3E 22                      ld a,34
    1030   00:84EB  CD 90 D3                   call pattr
    1031   00:84EE  2A 5E C9                   ld hl,(dispx)
    1032   00:84F1  22 53 C9                   ld (charx),hl
    1033   00:84F4  21 60 C9                   ld hl,loopa
    1034   00:84F7  35                         dec (hl)
    1035   00:84F8  C2 B6 84                   jp nz,n00249
    1036   00:84FB  3A 53 C9                   ld a,(charx)
    1037   00:84FE  3C                         inc a
    1038   00:84FF  32 53 C9                   ld (charx),a
    1039   00:8502  AF                         xor a
    1040   00:8503  32 54 C9                   ld (chary),a
    1041   00:8506  21 86 9D                   ld hl,chgfx
    1042   00:8509  22 83 D2                   ld (grbase),hl
    1043   00:850C  2A 53 C9                   ld hl,(charx)
    1044   00:850F  22 5E C9                   ld (dispx),hl
    1045   00:8512  3E 25                      ld a,37
    1046   00:8514  CD 90 D3                   call pattr
    1047   00:8517  2A 5E C9                   ld hl,(dispx)
    1048   00:851A  22 53 C9                   ld (charx),hl
    1049   00:851D  3E 1E                      ld a,30
    1050   00:851F  32 60 C9                   ld (loopa),a
    1051   00:8522  21 86 9D            n00442 ld hl,chgfx
    1052   00:8525  22 83 D2                   ld (grbase),hl
    1053   00:8528  2A 53 C9                   ld hl,(charx)
    1054   00:852B  22 5E C9                   ld (dispx),hl
    1055   00:852E  3E 21                      ld a,33
    1056   00:8530  CD 90 D3                   call pattr
    1057   00:8533  2A 5E C9                   ld hl,(dispx)
    1058   00:8536  22 53 C9                   ld (charx),hl
    1059   00:8539  21 60 C9                   ld hl,loopa
    1060   00:853C  35                         dec (hl)
    1061   00:853D  C2 22 85                   jp nz,n00442
    1062   00:8540  21 86 9D                   ld hl,chgfx
    1063   00:8543  22 83 D2                   ld (grbase),hl
    1064   00:8546  2A 53 C9                   ld hl,(charx)
    1065   00:8549  22 5E C9                   ld (dispx),hl
    1066   00:854C  3E 25                      ld a,37
    1067   00:854E  CD 90 D3                   call pattr
    1068   00:8551  2A 5E C9                   ld hl,(dispx)
    1069   00:8554  22 53 C9                   ld (charx),hl
    1070   00:8557  3E 03                      ld a,3
    1071   00:8559  32 60 C9                   ld (loopa),a
    1072   00:855C  3A 53 C9            n00543 ld a,(charx)
    1073   00:855F  3C                         inc a
    1074   00:8560  32 53 C9                   ld (charx),a
    1075   00:8563  AF                         xor a
    1076   00:8564  32 54 C9                   ld (chary),a
    1077   00:8567  21 86 9D                   ld hl,chgfx
    1078   00:856A  22 83 D2                   ld (grbase),hl
    1079   00:856D  2A 53 C9                   ld hl,(charx)
    1080   00:8570  22 5E C9                   ld (dispx),hl
    1081   00:8573  3E 22                      ld a,34
    1082   00:8575  CD 90 D3                   call pattr
    1083   00:8578  2A 5E C9                   ld hl,(dispx)
    1084   00:857B  22 53 C9                   ld (charx),hl
    1085   00:857E  3E 1F                      ld a,31
    1086   00:8580  32 54 C9                   ld (chary),a
    1087   00:8583  21 86 9D                   ld hl,chgfx
    1088   00:8586  22 83 D2                   ld (grbase),hl
    1089   00:8589  2A 53 C9                   ld hl,(charx)
    1090   00:858C  22 5E C9                   ld (dispx),hl
    1091   00:858F  3E 22                      ld a,34
    1092   00:8591  CD 90 D3                   call pattr
    1093   00:8594  2A 5E C9                   ld hl,(dispx)
    1094   00:8597  22 53 C9                   ld (charx),hl
    1095   00:859A  21 60 C9                   ld hl,loopa
    1096   00:859D  35                         dec (hl)
    1097   00:859E  C2 5C 85                   jp nz,n00543
    1098   00:85A1  AF                         xor a
    1099   00:85A2  32 54 C9                   ld (chary),a
    1100   00:85A5  3E 17                      ld a,23
    1101   00:85A7  32 53 C9                   ld (charx),a
    1102   00:85AA  21 86 9D                   ld hl,chgfx
    1103   00:85AD  22 83 D2                   ld (grbase),hl
    1104   00:85B0  2A 53 C9                   ld hl,(charx)
    1105   00:85B3  22 5E C9                   ld (dispx),hl
    1106   00:85B6  3E 20                      ld a,32
    1107   00:85B8  CD 90 D3                   call pattr
    1108   00:85BB  2A 5E C9                   ld hl,(dispx)
    1109   00:85BE  22 53 C9                   ld (charx),hl
    1110   00:85C1  3E 1E                      ld a,30
    1111   00:85C3  32 60 C9                   ld (loopa),a
    1112   00:85C6  21 86 9D            n00732 ld hl,chgfx
    1113   00:85C9  22 83 D2                   ld (grbase),hl
    1114   00:85CC  2A 53 C9                   ld hl,(charx)
    1115   00:85CF  22 5E C9                   ld (dispx),hl
    1116   00:85D2  3E 21                      ld a,33
    1117   00:85D4  CD 90 D3                   call pattr
    1118   00:85D7  2A 5E C9                   ld hl,(dispx)
    1119   00:85DA  22 53 C9                   ld (charx),hl
    1120   00:85DD  21 60 C9                   ld hl,loopa
    1121   00:85E0  35                         dec (hl)
    1122   00:85E1  C2 C6 85                   jp nz,n00732
    1123   00:85E4  21 86 9D                   ld hl,chgfx
    1124   00:85E7  22 83 D2                   ld (grbase),hl
    1125   00:85EA  2A 53 C9                   ld hl,(charx)
    1126   00:85ED  22 5E C9                   ld (dispx),hl
    1127   00:85F0  3E 1F                      ld a,31
    1128   00:85F2  CD 90 D3                   call pattr
    1129   00:85F5  2A 5E C9                   ld hl,(dispx)
    1130   00:85F8  22 53 C9                   ld (charx),hl
    1131   00:85FB  3E 05                      ld a,5
    1132   00:85FD  32 39 C9                   ld (numlif),a
    1133   00:8600  3E 05                      ld a,5
    1134   00:8602  57                         ld d,a
    1135   00:8603  CD 73 D6                   call random
    1136   00:8606  67                         ld h,a
    1137   00:8607  CD 1C D1                   call imul
    1138   00:860A  7C                         ld a,h
    1139   00:860B  32 56 C9                   ld (varrnd),a
    1140   00:860E  3A 56 C9                   ld a,(varrnd)
    1141   00:8611  3C                         inc a
    1142   00:8612  32 56 C9                   ld (varrnd),a
    1143   00:8615  3A 56 C9                   ld a,(varrnd)
    1144   00:8618  32 43 C9                   ld (varj),a
    1145   00:861B  3E 05                      ld a,5
    1146   00:861D  57                         ld d,a
    1147   00:861E  CD 73 D6                   call random
    1148   00:8621  67                         ld h,a
    1149   00:8622  CD 1C D1                   call imul
    1150   00:8625  7C                         ld a,h
    1151   00:8626  32 56 C9                   ld (varrnd),a
    1152   00:8629  0E 07                      ld c,7
    1153   00:862B  3A 56 C9                   ld a,(varrnd)
    1154   00:862E  81                         add a,c
    1155   00:862F  32 56 C9                   ld (varrnd),a
    1156   00:8632  3A 56 C9                   ld a,(varrnd)
    1157   00:8635  32 44 C9                   ld (vark),a
    1158   00:8638  3E 05                      ld a,5
    1159   00:863A  57                         ld d,a
    1160   00:863B  CD 73 D6                   call random
    1161   00:863E  67                         ld h,a
    1162   00:863F  CD 1C D1                   call imul
    1163   00:8642  7C                         ld a,h
    1164   00:8643  32 56 C9                   ld (varrnd),a
    1165   00:8646  0E 0D                      ld c,13
    1166   00:8648  3A 56 C9                   ld a,(varrnd)
    1167   00:864B  81                         add a,c
    1168   00:864C  32 56 C9                   ld (varrnd),a
    1169   00:864F  3A 56 C9                   ld a,(varrnd)
    1170   00:8652  32 45 C9                   ld (varl),a
    1171   00:8655  3E 03                      ld a,3
    1172   00:8657  57                         ld d,a
    1173   00:8658  CD 73 D6                   call random
    1174   00:865B  67                         ld h,a
    1175   00:865C  CD 1C D1                   call imul
    1176   00:865F  7C                         ld a,h
    1177   00:8660  32 56 C9                   ld (varrnd),a
    1178   00:8663  0E 13                      ld c,19
    1179   00:8665  3A 56 C9                   ld a,(varrnd)
    1180   00:8668  81                         add a,c
    1181   00:8669  32 56 C9                   ld (varrnd),a
    1182   00:866C  3A 56 C9                   ld a,(varrnd)
    1183   00:866F  32 42 C9                   ld (vari),a
    1184   00:8672  C9                         ret
    1185   00:8673  (00:8673)           evnt14 equ $
    1186   00:8673  AF                         xor a
    1187   00:8674  32 3A C9                   ld (vara),a
    1188   00:8677  AF                         xor a
    1189   00:8678  21 3D C9                   ld hl,vard
    1190   00:867B  BE                         cp (hl)
    1191   00:867C  C2 89 86                   jp nz,o00045
    1192   00:867F  3E FF                      ld a,255
    1193   00:8681  32 3B C9                   ld (varb),a
    1194   00:8684  3E FF                      ld a,255
    1195   00:8686  32 3C C9                   ld (varc),a
    1196   00:8689  C9                  o00045 ret
    1197   00:868A  (00:868A)           evnt15 equ $
    1198   00:868A  3E 09                      ld a,9
    1199   00:868C  DD BE 05                   cp (ix+5)
    1200   00:868F  C2 96 86                   jp nz,p00025
    1201   00:8692  21 5C C9                   ld hl,deadf
    1202   00:8695  74                         ld (hl),h
    1203   00:8696  C9                  p00025 ret
    1204   00:8697  (00:8697)           evnt16 equ $
    1205   00:8697  3E 7F                      ld a,127
    1206   00:8699  32 11 CC                   ld (sndtyp),a
    1207   00:869C  3A 39 C9                   ld a,(numlif)
    1208   00:869F  3D                         dec a
    1209   00:86A0  32 39 C9                   ld (numlif),a
    1210   00:86A3  3E 01                      ld a,1
    1211   00:86A5  32 3D C9                   ld (vard),a
    1212   00:86A8  C9                         ret
    1213   00:86A9  (00:86A9)           evnt17 equ $
    1214   00:86A9  3E 0F                      ld a,15
    1215   00:86AB  CD B6 D3                   call setfgm
    1216   00:86AE  3E 08                      ld a,8
    1217   00:86B0  CD B7 D3                   call setbgm
    1218   00:86B3  CD 49 CC                   call cls
    1219   00:86B6  3E 08                      ld a,8
    1220   00:86B8  32 53 C9                   ld (charx),a
    1221   00:86BB  3E 0B                      ld a,11
    1222   00:86BD  32 54 C9                   ld (chary),a
    1223   00:86C0  3E 01                      ld a,1
    1224   00:86C2  32 5F D7                   ld (prtmod),a
    1225   00:86C5  3E 07                      ld a,7
    1226   00:86C7  CD 20 D7                   call dmsg
    1227   00:86CA  AF                         xor a
    1228   00:86CB  32 5F D7                   ld (prtmod),a
    1229   00:86CE  3E 0E                      ld a,14
    1230   00:86D0  CD B6 D3                   call setfgm
    1231   00:86D3  3E 08                      ld a,8
    1232   00:86D5  CD B7 D3                   call setbgm
    1233   00:86D8  3A 53 C9                   ld a,(charx)
    1234   00:86DB  3C                         inc a
    1235   00:86DC  32 53 C9                   ld (charx),a
    1236   00:86DF  AF                         xor a
    1237   00:86E0  32 54 C9                   ld (chary),a
    1238   00:86E3  3E 05                      ld a,5
    1239   00:86E5  CD 20 D7                   call dmsg
    1240   00:86E8  DD E5                      push ix
    1241   00:86EA  06 FA                      ld b,250
    1242   00:86EC  CD 6A CB                   call delay
    1243   00:86EF  DD E1                      pop ix
    1244   00:86F1  DD E5                      push ix
    1245   00:86F3  06 C8                      ld b,200
    1246   00:86F5  CD 6A CB                   call delay
    1247   00:86F8  DD E1                      pop ix
    1248   00:86FA  C9                         ret
    1249   00:86FB  (00:86FB)           evnt18 equ $
    1250   00:86FB  3A 39 C9                   ld a,(numlif)
    1251   00:86FE  32 60 C9                   ld (loopa),a
    1252   00:8701  21 64 00            s00013 ld hl,100
    1253   00:8704  CD C2 D2                   call addsc
    1254   00:8707  21 60 C9                   ld hl,loopa
    1255   00:870A  35                         dec (hl)
    1256   00:870B  C2 01 87                   jp nz,s00013
    1257   00:870E  3A 46 C9                   ld a,(varm)
    1258   00:8711  32 60 C9                   ld (loopa),a
    1259   00:8714  21 3C 00            s00045 ld hl,60
    1260   00:8717  CD C2 D2                   call addsc
    1261   00:871A  21 60 C9                   ld hl,loopa
    1262   00:871D  35                         dec (hl)
    1263   00:871E  C2 14 87                   jp nz,s00045
    1264   00:8721  3A 47 C9                   ld a,(varn)
    1265   00:8724  32 60 C9                   ld (loopa),a
    1266   00:8727  21 01 00            s00077 ld hl,1
    1267   00:872A  CD C2 D2                   call addsc
    1268   00:872D  21 60 C9                   ld hl,loopa
    1269   00:8730  35                         dec (hl)
    1270   00:8731  C2 27 87                   jp nz,s00077
    1271   00:8734  3E 0E                      ld a,14
    1272   00:8736  CD B6 D3                   call setfgm
    1273   00:8739  3E 08                      ld a,8
    1274   00:873B  CD B7 D3                   call setbgm
    1275   00:873E  CD 49 CC                   call cls
    1276   00:8741  3E 09                      ld a,9
    1277   00:8743  32 53 C9                   ld (charx),a
    1278   00:8746  3E 09                      ld a,9
    1279   00:8748  32 54 C9                   ld (chary),a
    1280   00:874B  3E 0F                      ld a,15
    1281   00:874D  CD B6 D3                   call setfgm
    1282   00:8750  3E 08                      ld a,8
    1283   00:8752  CD B7 D3                   call setbgm
    1284   00:8755  3E 01                      ld a,1
    1285   00:8757  32 5F D7                   ld (prtmod),a
    1286   00:875A  3E 06                      ld a,6
    1287   00:875C  CD 20 D7                   call dmsg
    1288   00:875F  AF                         xor a
    1289   00:8760  32 5F D7                   ld (prtmod),a
    1290   00:8763  DD E5                      push ix
    1291   00:8765  06 64                      ld b,100
    1292   00:8767  CD 6A CB                   call delay
    1293   00:876A  DD E1                      pop ix
    1294   00:876C  3E 0E                      ld a,14
    1295   00:876E  CD B6 D3                   call setfgm
    1296   00:8771  3E 08                      ld a,8
    1297   00:8773  CD B7 D3                   call setbgm
    1298   00:8776  3E 04                      ld a,4
    1299   00:8778  CD 20 D7                   call dmsg
    1300   00:877B  3E 0E                      ld a,14
    1301   00:877D  32 53 C9                   ld (charx),a
    1302   00:8780  3E 0A                      ld a,10
    1303   00:8782  32 54 C9                   ld (chary),a
    1304   00:8785  3A 46 C9                   ld a,(varm)
    1305   00:8788  CD C9 DA                   call disply
    1306   00:878B  21 86 9D                   ld hl,chgfx
    1307   00:878E  22 83 D2                   ld (grbase),hl
    1308   00:8791  2A 53 C9                   ld hl,(charx)
    1309   00:8794  22 5E C9                   ld (dispx),hl
    1310   00:8797  3E 4E                      ld a,78
    1311   00:8799  CD 90 D3                   call pattr
    1312   00:879C  2A 5E C9                   ld hl,(dispx)
    1313   00:879F  22 53 C9                   ld (charx),hl
    1314   00:87A2  3E 09                      ld a,9
    1315   00:87A4  21 47 C9                   ld hl,varn
    1316   00:87A7  BE                         cp (hl)
    1317   00:87A8  DA AF 87                   jp c,s00310
    1318   00:87AB  AF                         xor a
    1319   00:87AC  CD C9 DA                   call disply
    1320   00:87AF  3A 47 C9            s00310 ld a,(varn)
    1321   00:87B2  CD C9 DA                   call disply
    1322   00:87B5  3E 41                      ld a,65
    1323   00:87B7  32 3A C9                   ld (vara),a
    1324   00:87BA  3E FA                      ld a,250
    1325   00:87BC  32 60 C9                   ld (loopa),a
    1326   00:87BF  3E 05               s00337 ld a,5
    1327   00:87C1  CD B6 D3                   call setfgm
    1328   00:87C4  3E 07                      ld a,7
    1329   00:87C6  CD B7 D3                   call setbgm
    1330   00:87C9  3E 10                      ld a,16
    1331   00:87CB  32 53 C9                   ld (charx),a
    1332   00:87CE  3E 11                      ld a,17
    1333   00:87D0  32 54 C9                   ld (chary),a
    1334   00:87D3  21 71 D2                   ld hl,score
    1335   00:87D6  06 06                      ld b,6
    1336   00:87D8  CD 8B D2                   call dscor
    1337   00:87DB  DD E5                      push ix
    1338   00:87DD  06 02                      ld b,2
    1339   00:87DF  CD 6A CB                   call delay
    1340   00:87E2  DD E1                      pop ix
    1341   00:87E4  3E 47                      ld a,71
    1342   00:87E6  21 3A C9                   ld hl,vara
    1343   00:87E9  BE                         cp (hl)
    1344   00:87EA  C2 F2 87                   jp nz,s00425
    1345   00:87ED  3E 41                      ld a,65
    1346   00:87EF  32 3A C9                   ld (vara),a
    1347   00:87F2  3A 3A C9            s00425 ld a,(vara)
    1348   00:87F5  3C                         inc a
    1349   00:87F6  32 3A C9                   ld (vara),a
    1350   00:87F9  21 60 C9                   ld hl,loopa
    1351   00:87FC  35                         dec (hl)
    1352   00:87FD  C2 BF 87                   jp nz,s00337
    1353   00:8800  DD E5                      push ix
    1354   00:8802  06 32                      ld b,50
    1355   00:8804  CD 6A CB                   call delay
    1356   00:8807  DD E1                      pop ix
    1357   00:8809  C9                         ret
    1358   00:880A  (00:880A)           evnt19 equ $
    1359   00:880A  C9                         ret
    1360   00:880B  (00:880B)           evnt20 equ $
    1361   00:880B  C9                         ret
    1362   00:880C  C9                  ptcusr ret
    1363   00:880D  (00:880D)           msgdat equ $
    1364   00:880D                             defb 'ROBOT_1_IN...',141
    1364   00:880D  52 4F 42 4F 54 5F 31 5F 49 4E 2E 2E 2E 8D 
    1365   00:881B                             defb 'THE_SHIP_OF_DOOM;;',141
    1365   00:881B  54 48 45 5F 53 48 49 50 5F 4F 46 5F 44 4F 4F 4D 
    1365   00:882B  3B 3B 8D 
    1366   00:882E                             defb '_THE_CREW_LEFT_YOU_BEHIND....',13
    1366   00:882E  5F 54 48 45 5F 43 52 45 57 5F 4C 45 46 54 5F 59 
    1366   00:883E  4F 55 5F 42 45 48 49 4E 44 2E 2E 2E 2E 0D 
    1367   00:884C                             defb '_THE_SHIP_WILL_CRASH_INTO_THE',13
    1367   00:884C  5F 54 48 45 5F 53 48 49 50 5F 57 49 4C 4C 5F 43 
    1367   00:885C  52 41 53 48 5F 49 4E 54 4F 5F 54 48 45 0D 
    1368   00:886A                             defb '_SUN_IN_5_MINUTES.',13
    1368   00:886A  5F 53 55 4E 5F 49 4E 5F 35 5F 4D 49 4E 55 54 45 
    1368   00:887A  53 2E 0D 
    1369   00:887D                             defb '_TO_SAVE_YOURSELF,_COLLECT_ALL',13
    1369   00:887D  5F 54 4F 5F 53 41 56 45 5F 59 4F 55 52 53 45 4C 
    1369   00:888D  46 2C 5F 43 4F 4C 4C 45 43 54 5F 41 4C 4C 0D 
    1370   00:889C                             defb '_FOUR_KEYS_AND_GET_TO_THE',13
    1370   00:889C  5F 46 4F 55 52 5F 4B 45 59 53 5F 41 4E 44 5F 47 
    1370   00:88AC  45 54 5F 54 4F 5F 54 48 45 0D 
    1371   00:88B6                             defb '_TELEPORT_ROOM.',13
    1371   00:88B6  5F 54 45 4C 45 50 4F 52 54 5F 52 4F 4F 4D 2E 0D 
    1372   00:88C6                             defb '_COLLECT_DATA_KEYS_FOR_POINTS.',13
    1372   00:88C6  5F 43 4F 4C 4C 45 43 54 5F 44 41 54 41 5F 4B 45 
    1372   00:88D6  59 53 5F 46 4F 52 5F 50 4F 49 4E 54 53 2E 0D 
    1373   00:88E5                             defb '_RECHARGE_SOCKETS_ARE_LOCATED',13
    1373   00:88E5  5F 52 45 43 48 41 52 47 45 5F 53 4F 43 4B 45 54 
    1373   00:88F5  53 5F 41 52 45 5F 4C 4F 43 41 54 45 44 0D 
    1374   00:8903                             defb '_THROUGHOUT_THE_SHIP.',13
    1374   00:8903  5F 54 48 52 4F 55 47 48 4F 55 54 5F 54 48 45 5F 
    1374   00:8913  53 48 49 50 2E 0D 
    1375   00:8919  0D                         defb 13
    1376   00:891A                             defb '_RUN_OUT_OF_BATTERY._YOU_DIE.',13
    1376   00:891A  5F 52 55 4E 5F 4F 55 54 5F 4F 46 5F 42 41 54 54 
    1376   00:892A  45 52 59 2E 5F 59 4F 55 5F 44 49 45 2E 0D 
    1377   00:8938                             defb '__RUN_OUT_OF_TIME._YOU_DIE.',13
    1377   00:8938  5F 5F 52 55 4E 5F 4F 55 54 5F 4F 46 5F 54 49 4D 
    1377   00:8948  45 2E 5F 59 4F 55 5F 44 49 45 2E 0D 
    1378   00:8954                             defb '_________DON',39
    1378   00:8954  5F 5F 5F 5F 5F 5F 5F 5F 5F 44 4F 4E 27 
    1379   00:8961                             defb 'T_DIE;',141
    1379   00:8961  54 5F 44 49 45 3B 8D 
    1380   00:8968                             defb 'GAME_PAUSED',141
    1380   00:8968  47 41 4D 45 5F 50 41 55 53 45 44 8D 
    1381   00:8974  0D                         defb 13
    1382   00:8975                             defb '______ROBOT_1_ESCAPED_A',13
    1382   00:8975  5F 5F 5F 5F 5F 5F 52 4F 42 4F 54 5F 31 5F 45 53 
    1382   00:8985  43 41 50 45 44 5F 41 0D 
    1383   00:898D                             defb '____FIREY_DEATH_WITH_JUST',13
    1383   00:898D  5F 5F 5F 5F 46 49 52 45 59 5F 44 45 41 54 48 5F 
    1383   00:899D  57 49 54 48 5F 4A 55 53 54 0D 
    1384   00:89A7                             defb '__________XXXX_LEFT',13
    1384   00:89A7  5F 5F 5F 5F 5F 5F 5F 5F 5F 5F 58 58 58 58 5F 4C 
    1384   00:89B7  45 46 54 0D 
    1385   00:89BB  0D                         defb 13
    1386   00:89BC                             defb '_YOU_ALSO_SCORED_XXXXXX_POINTS;',141
    1386   00:89BC  5F 59 4F 55 5F 41 4C 53 4F 5F 53 43 4F 52 45 44 
    1386   00:89CC  5F 58 58 58 58 58 58 5F 50 4F 49 4E 54 53 3B 8D 
    1387   00:89DC                             defb '___________YOU__DIED',13
    1387   00:89DC  5F 5F 5F 5F 5F 5F 5F 5F 5F 5F 5F 59 4F 55 5F 5F 
    1387   00:89EC  44 49 45 44 0D 
    1388   00:89F1  0D                         defb 13
    1389   00:89F2                             defb '_EITHER_YOU_DIDNT_GET_OFF_THE_',13
    1389   00:89F2  5F 45 49 54 48 45 52 5F 59 4F 55 5F 44 49 44 4E 
    1389   00:8A02  54 5F 47 45 54 5F 4F 46 46 5F 54 48 45 5F 0D 
    1390   00:8A11                             defb '_SHIP_IN_TIME_OR_YOU_RAN_OUT_OF',13
    1390   00:8A11  5F 53 48 49 50 5F 49 4E 5F 54 49 4D 45 5F 4F 52 
    1390   00:8A21  5F 59 4F 55 5F 52 41 4E 5F 4F 55 54 5F 4F 46 0D 
    1391   00:8A31                             defb '_LIVES.',13
    1391   00:8A31  5F 4C 49 56 45 53 2E 0D 
    1392   00:8A39                             defb '_______EITHER_WAY,_YOU',39
    1392   00:8A39  5F 5F 5F 5F 5F 5F 5F 45 49 54 48 45 52 5F 57 41 
    1392   00:8A49  59 2C 5F 59 4F 55 27 
    1393   00:8A50                             defb 'RE_DEAD.',13
    1393   00:8A50  52 45 5F 44 45 41 44 2E 0D 
    1394   00:8A59  8D                         defb 141
    1395   00:8A5A                             defb 'WELL_DONE;',141
    1395   00:8A5A  57 45 4C 4C 5F 44 4F 4E 45 3B 8D 
    1396   00:8A65                             defb 'GAME_OVER',141
    1396   00:8A65  47 41 4D 45 5F 4F 56 45 52 8D 
    1397   00:8A6F                             defb '2017_Mat_Recardo',13
    1397   00:8A6F  7F 32 30 31 37 5F 4D 61 74 5F 52 65 63 61 72 64 
    1397   00:8A7F  6F 0D 
    1398   00:8A81                             defb '____Music_by_Sergey_Kosov',141
    1398   00:8A81  5F 5F 5F 5F 4D 75 73 69 63 5F 62 79 5F 53 65 72 
    1398   00:8A91  67 65 79 5F 4B 6F 73 6F 76 8D 
    1399   00:8A9B                             defb '1_FOR_KEYS_(ZXP)',13
    1399   00:8A9B  31 5F 46 4F 52 5F 4B 45 59 53 5F 28 5A 58 50 29 
    1399   00:8AAB  0D 
    1400   00:8AAC                             defb '_______2_FOR_KEMPSTON',13
    1400   00:8AAC  5F 5F 5F 5F 5F 5F 5F 32 5F 46 4F 52 5F 4B 45 4D 
    1400   00:8ABC  50 53 54 4F 4E 0D 
    1401   00:8AC2                             defb '_______3_FOR_SINCLAIR',141
    1401   00:8AC2  5F 5F 5F 5F 5F 5F 5F 33 5F 46 4F 52 5F 53 49 4E 
    1401   00:8AD2  43 4C 41 49 52 8D 
    1402   00:8AD8  0A                  nummsg defb 10
    1403   00:8AD9  (00:8AD9)           scdat  equ $
    1404   00:8AD9                             defw 186,215,282,205,209,226,221,179,222,293,222,213,274,189,156,208,211,251,148,152,266,208
    1404   00:8AD9  BA 00 D7 00 1A 01 CD 00 D1 00 E2 00 DD 00 B3 00 
    1404   00:8AE9  DE 00 25 01 DE 00 D5 00 12 01 BD 00 9C 00 D0 00 
    1404   00:8AF9  D3 00 FB 00 94 00 98 00 0A 01 D0 00 
    1405   00:8B05                             defb 255,0,38,25,24,25,24,25,24,25,24,25,24,25,24,255,0,18,24,255,0,10,25,255,0,16,37,0,25,255,0,10,24
    1405   00:8B05  FF 00 26 19 18 19 18 19 18 19 18 19 18 19 18 FF 
    1405   00:8B15  00 12 18 FF 00 0A 19 FF 00 10 25 00 19 FF 00 0A 
    1405   00:8B25  18 
    1406   00:8B26                             defb 255,0,16,59,0,24,255,0,6,55,56,56,57,25,255,0,16,60,0,25,255,0,7,12,12,0,24,255,0,15,25,24,25
    1406   00:8B26  FF 00 10 3B 00 18 FF 00 06 37 38 38 39 19 FF 00 
    1406   00:8B36  10 3C 00 19 FF 00 07 0C 0C 00 18 FF 00 0F 19 18 
    1406   00:8B46  19 
    1407   00:8B47                             defb 24,255,0,7,60,60,0,25,24,25,24,255,0,12,24,8,8,8,0,0,0,255,8,10,25,255,0,12,25,255,0,16,24
    1407   00:8B47  18 FF 00 07 3C 3C 00 19 18 19 18 FF 00 0C 18 08 
    1407   00:8B57  08 08 00 00 00 FF 08 0A 19 FF 00 0C 19 FF 00 10 
    1407   00:8B67  18 
    1408   00:8B68                             defb 255,0,12,24,255,0,16,25,255,0,12,25,255,0,16,24,255,0,12,24,255,0,16,25,255,0,12,25,255,8,10,0,0,0
    1408   00:8B68  FF 00 0C 18 FF 00 10 19 FF 00 0C 19 FF 00 10 18 
    1408   00:8B78  FF 00 0C 18 FF 00 10 19 FF 00 0C 19 FF 08 0A 00 
    1408   00:8B88  00 00 
    1409   00:8B8A                             defb 8,8,8,24,255,0,12,24,255,0,16,25,255,0,12,25,255,0,16,24,255,0,12,24,255,0,16,25,255,0,12,25,255,0,16
    1409   00:8B8A  08 08 08 18 FF 00 0C 18 FF 00 10 19 FF 00 0C 19 
    1409   00:8B9A  FF 00 10 18 FF 00 0C 18 FF 00 10 19 FF 00 0C 19 
    1409   00:8BAA  FF 00 10 
    1410   00:8BAD                             defb 24,255,0,12,24,8,8,8,0,0,0,255,8,10,25,255,0,7
    1410   00:8BAD  18 FF 00 0C 18 08 08 08 00 00 00 FF 08 0A 19 FF 
    1410   00:8BBD  00 07 
    1411   00:8BBF                             defb 255,0,16,29,255,10,13,255,0,10,37,255,0,4,29,10,255,25,13,255,0,10,59,0,0,0,29,10,255,0,13,25,255,0,10
    1411   00:8BBF  FF 00 10 1D FF 0A 0D FF 00 0A 25 FF 00 04 1D 0A 
    1411   00:8BCF  FF 19 0D FF 00 0A 3B 00 00 00 1D 0A FF 00 0D 19 
    1411   00:8BDF  FF 00 0A 
    1412   00:8BE2                             defb 60,0,0,29,10,255,0,14,25,255,0,9,29,255,10,4,255,0,15,25,255,0,6,29,10,10,10,255,0,8,27,28,255,8,9
    1412   00:8BE2  3C 00 00 1D 0A FF 00 0E 19 FF 00 09 1D FF 0A 04 
    1412   00:8BF2  FF 00 0F 19 FF 00 06 1D 0A 0A 0A FF 00 08 1B 1C 
    1412   00:8C02  FF 08 09 
    1413   00:8C05                             defb 25,255,0,4,29,10,10,255,0,14,36,255,0,7,25,0,0,0,29,10,255,0,13,27,28,0,36,255,0,7,25,0,0
    1413   00:8C05  19 FF 00 04 1D 0A 0A FF 00 0E 24 FF 00 07 19 00 
    1413   00:8C15  00 00 1D 0A FF 00 0D 1B 1C 00 24 FF 00 07 19 00 
    1413   00:8C25  00 
    1414   00:8C26                             defb 29,10,255,0,17,36,255,0,7,25,0,0,10,255,0,8,27,28,255,8,16,25,0,29,10,255,0,11,36,255,0,14,25
    1414   00:8C26  1D 0A FF 00 11 24 FF 00 07 19 00 00 0A FF 00 08 
    1414   00:8C36  1B 1C FF 08 10 19 00 1D 0A FF 00 0B 24 FF 00 0E 
    1414   00:8C46  19 
    1415   00:8C47                             defb 0,10,255,0,9,27,28,0,36,255,0,14,25,0,10,255,0,12,36,255,0,14,25,29,10,255,0,5,27,28,255,8,20
    1415   00:8C47  00 0A FF 00 09 1B 1C 00 24 FF 00 0E 19 00 0A FF 
    1415   00:8C57  00 0C 24 FF 00 0E 19 1D 0A FF 00 05 1B 1C FF 08 
    1415   00:8C67  14 
    1416   00:8C68                             defb 25,10,25,0,89,255,0,6,36,255,0,18,25,10,25,255,0,5,27,28,0,36,255,0,19,10,25,0,88,255,0,6,36
    1416   00:8C68  19 0A 19 00 59 FF 00 06 24 FF 00 12 19 0A 19 FF 
    1416   00:8C78  00 05 1B 1C 00 24 FF 00 13 0A 19 00 58 FF 00 06 
    1416   00:8C88  24 
    1417   00:8C89                             defb 255,0,19,10,25,255,8,22,255,0,4,8,8
    1417   00:8C89  FF 00 13 0A 19 FF 08 16 FF 00 04 08 08 
    1418   00:8C96                             defb 255,10,31,0,0,40,255,0,7,36,255,0,6,36,255,0,7,40,0,0,10,10,38,38,39,255,0,7,36,255,0,6,36
    1418   00:8C96  FF 0A 1F 00 00 28 FF 00 07 24 FF 00 06 24 FF 00 
    1418   00:8CA6  07 28 00 00 0A 0A 26 26 27 FF 00 07 24 FF 00 06 
    1418   00:8CB6  24 
    1419   00:8CB7                             defb 255,0,7,61,38,38,10,10,255,0,10,36,255,0,6,36,255,0,10,10,10,0,0,255,8,10,0,27,28,0,255,8,10
    1419   00:8CB7  FF 00 07 3D 26 26 0A 0A FF 00 0A 24 FF 00 06 24 
    1419   00:8CC7  FF 00 0A 0A 0A 00 00 FF 08 0A 00 1B 1C 00 FF 08 
    1419   00:8CD7  0A 
    1420   00:8CD8                             defb 0,0,10,10,255,0,4,36,255,0,8,27,28,255,0,8,36,255,0,4,10,10,255,0,4,36,255,0,8,27,28,255,0,8
    1420   00:8CD8  00 00 0A 0A FF 00 04 24 FF 00 08 1B 1C FF 00 08 
    1420   00:8CE8  24 FF 00 04 0A 0A FF 00 04 24 FF 00 08 1B 1C FF 
    1420   00:8CF8  00 08 
    1421   00:8CFA                             defb 36,255,0,4,10,10,255,0,4,36,255,0,8,27,28,255,0,8,36,255,0,4,10,10,255,8,6,0,0,0,8,8,8
    1421   00:8CFA  24 FF 00 04 0A 0A FF 00 04 24 FF 00 08 1B 1C FF 
    1421   00:8D0A  00 08 24 FF 00 04 0A 0A FF 08 06 00 00 00 08 08 
    1421   00:8D1A  08 
    1422   00:8D1B                             defb 0,27,28,0,8,8,8,0,0,0,255,8,6,10,10,255,0,10,36,0,0,27,28,255,0,8,36,255,0,4,10,10,255,0,10
    1422   00:8D1B  00 1B 1C 00 08 08 08 00 00 00 FF 08 06 0A 0A FF 
    1422   00:8D2B  00 0A 24 00 00 1B 1C FF 00 08 24 FF 00 04 0A 0A 
    1422   00:8D3B  FF 00 0A 
    1423   00:8D3E                             defb 36,0,0,27,28,255,0,8,36,255,0,4,10,10,255,0,10,36,0,0,27,28,255,0,8,36,255,0,4,10,10,0,0
    1423   00:8D3E  24 00 00 1B 1C FF 00 08 24 FF 00 04 0A 0A FF 00 
    1423   00:8D4E  0A 24 00 00 1B 1C FF 00 08 24 FF 00 04 0A 0A 00 
    1423   00:8D5E  00 
    1424   00:8D5F                             defb 255,8,10,0,27,28,0,255,8,10,0,0,10,10,255,0,4,34,255,0,4,34,0,0,0,27,28,0,0,0,34,255,0,4
    1424   00:8D5F  FF 08 0A 00 1B 1C 00 FF 08 0A 00 00 0A 0A FF 00 
    1424   00:8D6F  04 22 FF 00 04 22 00 00 00 1B 1C 00 00 00 22 FF 
    1424   00:8D7F  00 04 
    1425   00:8D81                             defb 34,255,0,4,10,10,255,0,4,32,255,33,4,31,0,0,0,27,28,0,0,0,32,255,33,4,31,255,0,4,10,255,0,14
    1425   00:8D81  22 FF 00 04 0A 0A FF 00 04 20 FF 21 04 1F 00 00 
    1425   00:8D91  00 1B 1C 00 00 00 20 FF 21 04 1F FF 00 04 0A FF 
    1425   00:8DA1  00 0E 
    1426   00:8DA3                             defb 27,28,255,0,28,27,28,255,0,14,255,8,30
    1426   00:8DA3  1B 1C FF 00 1C 1B 1C FF 00 0E FF 08 1E 
    1427   00:8DB0                             defb 255,10,9,0,0,0,255,10,19,255,0,28,10,10,255,0,28,10,10,255,0,28,10,10,255,8,17,255,0,8,8,8,8
    1427   00:8DB0  FF 0A 09 00 00 00 FF 0A 13 FF 00 1C 0A 0A FF 00 
    1427   00:8DC0  1C 0A 0A FF 00 1C 0A 0A FF 08 11 FF 00 08 08 08 
    1427   00:8DD0  08 
    1428   00:8DD1                             defb 10,10,255,0,15,36,255,0,12,10,10,255,0,15,36,255,0,12,10,10,255,0,15,36,0,0,27,28,8,8,27,28,255,0,4
    1428   00:8DD1  0A 0A FF 00 0F 24 FF 00 0C 0A 0A FF 00 0F 24 FF 
    1428   00:8DE1  00 0C 0A 0A FF 00 0F 24 00 00 1B 1C 08 08 1B 1C 
    1428   00:8DF1  FF 00 04 
    1429   00:8DF4                             defb 10,10,255,0,15,36,0,0,27,28,0,0,27,28,255,0,5,10,255,0,15,36,255,0,13,10,255,8,17,255,0,8,8,8,8
    1429   00:8DF4  0A 0A FF 00 0F 24 00 00 1B 1C 00 00 1B 1C FF 00 
    1429   00:8E04  05 0A FF 00 0F 24 FF 00 0D 0A FF 08 11 FF 00 08 
    1429   00:8E14  08 08 08 
    1430   00:8E17                             defb 10,10,0,0,34,0,40,255,0,7,40,0,34,255,0,5,27,28,255,0,6,10,10,0,0,35,0,61,255,38,7,39,0
    1430   00:8E17  0A 0A 00 00 22 00 28 FF 00 07 28 00 22 FF 00 05 
    1430   00:8E27  1B 1C FF 00 06 0A 0A 00 00 23 00 3D FF 26 07 27 
    1430   00:8E37  00 
    1431   00:8E38                             defb 35,255,0,5,27,28,255,0,6,10,10,0,0,34,255,0,11,34,255,0,5,27,28,255,0,6,10,10,0,0,32,255,33,11
    1431   00:8E38  23 FF 00 05 1B 1C FF 00 06 0A 0A 00 00 22 FF 00 
    1431   00:8E48  0B 22 FF 00 05 1B 1C FF 00 06 0A 0A 00 00 20 FF 
    1431   00:8E58  21 0B 
    1432   00:8E5A                             defb 31,255,0,5,27,28,255,0,4,89,0,10,255,0,21,27,28,255,0,6,10,255,0,21,27,28,255,0,4,88,0,10,255,8,30
    1432   00:8E5A  1F FF 00 05 1B 1C FF 00 04 59 00 0A FF 00 15 1B 
    1432   00:8E6A  1C FF 00 06 0A FF 00 15 1B 1C FF 00 04 58 00 0A 
    1432   00:8E7A  FF 08 1E 
    1433   00:8E7D                             defb 255,10,31,255,0,11,40,0,0,40,40,0,0,40,0,0,34,0,34,0,34,0,0,10,10,0,41,42,42,43,0,41,42,42
    1433   00:8E7D  FF 0A 1F FF 00 0B 28 00 00 28 28 00 00 28 00 00 
    1433   00:8E8D  22 00 22 00 22 00 00 0A 0A 00 29 2A 2A 2B 00 29 
    1433   00:8E9D  2A 2A 
    1434   00:8E9F                             defb 43,0,40,0,0,40,40,0,0,40,0,0,35,0,35,0,35,0,0,10,10,0,48,0,0,44,0,48,0,0,44,0,61
    1434   00:8E9F  2B 00 28 00 00 28 28 00 00 28 00 00 23 00 23 00 
    1434   00:8EAF  23 00 00 0A 0A 00 30 00 00 2C 00 30 00 00 2C 00 
    1434   00:8EBF  3D 
    1435   00:8EC0                             defb 38,38,39,61,38,38,39,0,0,34,0,34,0,34,0,0,10,10,0,48,0,0,44,0,48,0,0,44,255,0,11,32,33
    1435   00:8EC0  26 26 27 3D 26 26 27 00 00 22 00 22 00 22 00 00 
    1435   00:8ED0  0A 0A 00 30 00 00 2C 00 30 00 00 2C FF 00 0B 20 
    1435   00:8EE0  21 
    1436   00:8EE1                             defb 37,33,37,33,33,10,10,0,47,46,46,45,0,47,46,46,45,255,0,18,10,10,255,0,28,10,10,255,0,28,10,255,0,29
    1436   00:8EE1  25 21 25 21 21 0A 0A 00 2F 2E 2E 2D 00 2F 2E 2E 
    1436   00:8EF1  2D FF 00 12 0A 0A FF 00 1C 0A 0A FF 00 1C 0A FF 
    1436   00:8F01  00 1D 
    1437   00:8F03                             defb 10,255,0,29,10,255,8,7,255,0,22,10,10,255,0,4,36,255,0,23,10,10,255,0,4,36,0,8,8,255,0,20,10,10
    1437   00:8F03  0A FF 00 1D 0A FF 08 07 FF 00 16 0A 0A FF 00 04 
    1437   00:8F13  24 FF 00 17 0A 0A FF 00 04 24 00 08 08 FF 00 14 
    1437   00:8F23  0A 0A 
    1438   00:8F25                             defb 255,0,4,36,255,0,23,10,10,255,0,4,36,0,0,0,8,8,255,0,18,10,10,255,0,4,36,255,0,24,10,255,0,4
    1438   00:8F25  FF 00 04 24 FF 00 17 0A 0A FF 00 04 24 00 00 00 
    1438   00:8F35  08 08 FF 00 12 0A 0A FF 00 04 24 FF 00 18 0A FF 
    1438   00:8F45  00 04 
    1439   00:8F47                             defb 36,255,0,24,255,8,30
    1439   00:8F47  24 FF 00 18 FF 08 1E 
    1440   00:8F4E                             defb 255,10,5,30,255,0,24,10,0,0,0,14,10,30,255,0,6,37,255,0,16,10,255,0,4,14,10,30,255,0,5,59,255,0,16
    1440   00:8F4E  FF 0A 05 1E FF 00 18 0A 00 00 00 0E 0A 1E FF 00 
    1440   00:8F5E  06 25 FF 00 10 0A FF 00 04 0E 0A 1E FF 00 05 3B 
    1440   00:8F6E  FF 00 10 
    1441   00:8F71                             defb 10,255,0,5,14,10,30,255,0,4,60,255,0,16,10,255,0,6,14,255,10,12,30,255,0,9,10,255,0,18,14,10,10,10
    1441   00:8F71  0A FF 00 05 0E 0A 1E FF 00 04 3C FF 00 10 0A FF 
    1441   00:8F81  00 06 0E FF 0A 0C 1E FF 00 09 0A FF 00 12 0E 0A 
    1441   00:8F91  0A 0A 
    1442   00:8F93                             defb 30,255,0,6,10,255,0,21,14,10,10,30,255,0,4,10,255,0,22,36,14,10,30,0,0,0,10,255,0,22,36,0,14
    1442   00:8F93  1E FF 00 06 0A FF 00 15 0E 0A 0A 1E FF 00 04 0A 
    1442   00:8FA3  FF 00 16 24 0E 0A 1E 00 00 00 0A FF 00 16 24 00 
    1442   00:8FB3  0E 
    1443   00:8FB4                             defb 10,30,0,0,10,255,4,5,27,28,255,0,15,36,0,0,14,10,0,0,10,0,89,0,0,0,27,28,255,0,15,36,0,0,0
    1443   00:8FB4  0A 1E 00 00 0A FF 04 05 1B 1C FF 00 0F 24 00 00 
    1443   00:8FC4  0E 0A 00 00 0A 00 59 00 00 00 1B 1C FF 00 0F 24 
    1443   00:8FD4  00 00 00 
    1444   00:8FD7                             defb 10,30,0,10,255,0,5,27,28,255,0,15,36,0,0,0,14,10,0,10,0,88,0,0,0,27,28,255,0,15,36,255,0,4
    1444   00:8FD7  0A 1E 00 0A FF 00 05 1B 1C FF 00 0F 24 00 00 00 
    1444   00:8FE7  0E 0A 00 0A 00 58 00 00 00 1B 1C FF 00 0F 24 FF 
    1444   00:8FF7  00 04 
    1445   00:8FF9                             defb 10,0,10,255,4,12,27,28,255,0,8,21,255,22,4,10,30,10,255,0,12,27,28,255,0,13,14,10,255,0,13,27,28
    1445   00:8FF9  0A 00 0A FF 04 0C 1B 1C FF 00 08 15 FF 16 04 0A 
    1445   00:9009  1E 0A FF 00 0C 1B 1C FF 00 0D 0E 0A FF 00 0D 1B 
    1445   00:9019  1C 
    1446   00:901A                             defb 255,0,14,10,255,0,13,27,28,255,0,14,10,255,8,23,255,0,4,8,8,10
    1446   00:901A  FF 00 0E 0A FF 00 0D 1B 1C FF 00 0E 0A FF 08 17 
    1446   00:902A  FF 00 04 08 08 0A 
    1447   00:9030                             defb 255,10,31,255,0,28,1,10,255,0,10,41,42,42,43,255,0,14,1,10,255,0,10,48,0,0,44,255,0,14,1,10,255,0,10
    1447   00:9030  FF 0A 1F FF 00 1C 01 0A FF 00 0A 29 2A 2A 2B FF 
    1447   00:9040  00 0E 01 0A FF 00 0A 30 00 00 2C FF 00 0E 01 0A 
    1447   00:9050  FF 00 0A 
    1448   00:9053                             defb 48,0,0,44,255,0,9,27,28,6,6,6,1,10,255,0,10,47,46,46,45,255,0,9,27,28,0,0,0,1,10,255,0,23
    1448   00:9053  30 00 00 2C FF 00 09 1B 1C 06 06 06 01 0A FF 00 
    1448   00:9063  0A 2F 2E 2E 2D FF 00 09 1B 1C 00 00 00 01 0A FF 
    1448   00:9073  00 17 
    1449   00:9075                             defb 27,28,0,0,0,1,10,0,0,255,9,18,0,0,0,27,28,6,6,6,1,10,255,0,23,27,28,0,0,0,1,10,255,0,23
    1449   00:9075  1B 1C 00 00 00 01 0A 00 00 FF 09 12 00 00 00 1B 
    1449   00:9085  1C 06 06 06 01 0A FF 00 17 1B 1C 00 00 00 01 0A 
    1449   00:9095  FF 00 17 
    1450   00:9098                             defb 27,28,0,0,0,1,10,255,0,23,27,28,0,0,0,1,10,0,0,255,9,18,0,0,0,27,28,6,6,6,1,10,255,0,23
    1450   00:9098  1B 1C 00 00 00 01 0A FF 00 17 1B 1C 00 00 00 01 
    1450   00:90A8  0A 00 00 FF 09 12 00 00 00 1B 1C 06 06 06 01 0A 
    1450   00:90B8  FF 00 17 
    1451   00:90BB                             defb 27,28,0,0,0,1,10,255,0,6,29,255,33,8,30,255,0,7,27,28,0,0,0,1,10,5,5,255,0,4,34,255,0,8
    1451   00:90BB  1B 1C 00 00 00 01 0A FF 00 06 1D FF 21 08 1E FF 
    1451   00:90CB  00 07 1B 1C 00 00 00 01 0A 05 05 FF 00 04 22 FF 
    1451   00:90DB  00 08 
    1452   00:90DD                             defb 34,255,0,7,27,28,0,0,0,1,10,255,0,6,35,255,0,8,35,255,0,7,27,28,255,0,4,10,255,0,6,34,255,0,8
    1452   00:90DD  22 FF 00 07 1B 1C 00 00 00 01 0A FF 00 06 23 FF 
    1452   00:90ED  00 08 23 FF 00 07 1B 1C FF 00 04 0A FF 00 06 22 
    1452   00:90FD  FF 00 08 
    1453   00:9100                             defb 34,255,0,13,255,3,23,255,0,4,3,3,3
    1453   00:9100  22 FF 00 0D FF 03 17 FF 00 04 03 03 03 
    1454   00:910D                             defb 255,10,24,255,0,4,10,10,2,255,0,8,34,255,0,10,34,255,0,8,1,2,255,0,8,35,255,0,10,35,255,0,8
    1454   00:910D  FF 0A 18 FF 00 04 0A 0A 02 FF 00 08 22 FF 00 0A 
    1454   00:911D  22 FF 00 08 01 02 FF 00 08 23 FF 00 0A 23 FF 00 
    1454   00:912D  08 
    1455   00:912E                             defb 1,2,255,0,8,32,255,33,10,31,255,0,8,1,2,6,6,255,0,23,6,6,6,1,2,255,0,28,1,2,255,0,4
    1455   00:912E  01 02 FF 00 08 20 FF 21 0A 1F FF 00 08 01 02 06 
    1455   00:913E  06 FF 00 17 06 06 06 01 02 FF 00 1C 01 02 FF 00 
    1455   00:914E  04 
    1456   00:914F                             defb 255,11,5,0,0,0,255,11,4,0,0,0,255,11,4,255,0,5,1,2,255,0,28,1,2,6,6,255,0,24,6,6,1
    1456   00:914F  FF 0B 05 00 00 00 FF 0B 04 00 00 00 FF 0B 04 FF 
    1456   00:915F  00 05 01 02 FF 00 1C 01 02 06 06 FF 00 18 06 06 
    1456   00:916F  01 
    1457   00:9170                             defb 2,255,0,26,89,0,1,2,255,0,4,255,11,5,0,0,0,255,11,4,0,0,0,255,11,5,255,0,4,1,2,255,0,26
    1457   00:9170  02 FF 00 1A 59 00 01 02 FF 00 04 FF 0B 05 00 00 
    1457   00:9180  00 FF 0B 04 00 00 00 FF 0B 05 FF 00 04 01 02 FF 
    1457   00:9190  00 1A 
    1458   00:9192                             defb 88,0,1,2,6,6,255,0,24,6,6,1,2,255,0,28,1,2,255,0,4,255,11,5,0,0,0,255,11,4,0,0,0
    1458   00:9192  58 00 01 02 06 06 FF 00 18 06 06 01 02 FF 00 1C 
    1458   00:91A2  01 02 FF 00 04 FF 0B 05 00 00 00 FF 0B 04 00 00 
    1458   00:91B2  00 
    1459   00:91B3                             defb 255,11,5,255,0,4,1,255,0,60,255,3,30
    1459   00:91B3  FF 0B 05 FF 00 04 01 FF 00 3C FF 03 1E 
    1460   00:91C0                             defb 255,10,30,2,255,0,5,40,255,0,14,40,0,34,255,0,5,1,2,255,0,5,40,255,0,14,40,0,35,255,0,5,1
    1460   00:91C0  FF 0A 1E 02 FF 00 05 28 FF 00 0E 28 00 22 FF 00 
    1460   00:91D0  05 01 02 FF 00 05 28 FF 00 0E 28 00 23 FF 00 05 
    1460   00:91E0  01 
    1461   00:91E1                             defb 2,255,38,5,39,255,0,14,61,38,34,255,38,5,1,2,255,0,22,35,255,0,5,1,2,255,0,22,32,255,33,5,1
    1461   00:91E1  02 FF 26 05 27 FF 00 0E 3D 26 22 FF 26 05 01 02 
    1461   00:91F1  FF 00 16 23 FF 00 05 01 02 FF 00 16 20 FF 21 05 
    1461   00:9201  01 
    1462   00:9202                             defb 2,255,0,28,1,2,255,0,28,1,2,255,11,9,255,0,4,11,11,11,255,0,4,255,11,8,1,2,255,0,28,1,2
    1462   00:9202  02 FF 00 1C 01 02 FF 00 1C 01 02 FF 0B 09 FF 00 
    1462   00:9212  04 0B 0B 0B FF 00 04 FF 0B 08 01 02 FF 00 1C 01 
    1462   00:9222  02 
    1463   00:9223                             defb 255,0,9,27,28,255,0,7,27,28,255,0,8,1,2,255,0,9,27,28,255,0,7,27,28,255,0,8,1,2,255,0,28
    1463   00:9223  FF 00 09 1B 1C FF 00 07 1B 1C FF 00 08 01 02 FF 
    1463   00:9233  00 09 1B 1C FF 00 07 1B 1C FF 00 08 01 02 FF 00 
    1463   00:9243  1C 
    1464   00:9244                             defb 1,2,0,0,0,49,50,255,9,6,0,0,0,9,0,0,0,255,9,5,49,50,0,0,0,1,2,9,0,0,49,50,27
    1464   00:9244  01 02 00 00 00 31 32 FF 09 06 00 00 00 09 00 00 
    1464   00:9254  00 FF 09 05 31 32 00 00 00 01 02 09 00 00 31 32 
    1464   00:9264  1B 
    1465   00:9265                             defb 28,255,0,14,27,28,49,50,0,0,9,1,255,0,4,49,50,27,28,255,0,14,27,28,49,50,255,0,8,49,50,27,28
    1465   00:9265  1C FF 00 0E 1B 1C 31 32 00 00 09 01 FF 00 04 31 
    1465   00:9275  32 1B 1C FF 00 0E 1B 1C 31 32 FF 00 08 31 32 1B 
    1465   00:9285  1C 
    1466   00:9286                             defb 0,0,26,26,0,0,0,26,0,0,0,26,26,0,27,28,49,50,255,0,4,255,6,30
    1466   00:9286  00 00 1A 1A 00 00 00 1A 00 00 00 1A 1A 00 1B 1C 
    1466   00:9296  31 32 FF 00 04 FF 06 1E 
    1467   00:929E                             defb 255,10,30,2,255,0,28,1,2,255,0,23,41,42,42,43,0,1,2,255,0,23,48,0,0,44,0,1,2,255,0,23,48
    1467   00:929E  FF 0A 1E 02 FF 00 1C 01 02 FF 00 17 29 2A 2A 2B 
    1467   00:92AE  00 01 02 FF 00 17 30 00 00 2C 00 01 02 FF 00 17 
    1467   00:92BE  30 
    1468   00:92BF                             defb 0,0,44,0,1,2,0,0,0,255,3,4,2,3,3,255,0,13,47,46,46,45,0,1,2,255,0,7,2,255,0,20,1
    1468   00:92BF  00 00 2C 00 01 02 00 00 00 FF 03 04 02 03 03 FF 
    1468   00:92CF  00 0D 2F 2E 2E 2D 00 01 02 FF 00 07 02 FF 00 14 
    1468   00:92DF  01 
    1469   00:92E0                             defb 2,255,0,7,2,0,0,0,3,3,2,3,3,3,255,0,11,1,2,3,3,255,0,5,2,255,0,5,2,255,0,14,1
    1469   00:92E0  02 FF 00 07 02 00 00 00 03 03 02 03 03 03 FF 00 
    1469   00:92F0  0B 01 02 03 03 FF 00 05 02 FF 00 05 02 FF 00 0E 
    1469   00:9300  01 
    1470   00:9301                             defb 2,255,0,7,2,0,29,37,30,0,2,255,0,5,3,3,2,255,0,6,1,2,255,0,7,2,0,35,35,35,0,2,255,33,5
    1470   00:9301  02 FF 00 07 02 00 1D 25 1E 00 02 FF 00 05 03 03 
    1470   00:9311  02 FF 00 06 01 02 FF 00 07 02 00 23 23 23 00 02 
    1470   00:9321  FF 21 05 
    1471   00:9324                             defb 30,0,2,255,0,6,1,2,0,0,0,3,3,0,0,2,0,34,34,34,0,2,33,33,33,30,0,34,0,2,0,0,0
    1471   00:9324  1E 00 02 FF 00 06 01 02 00 00 00 03 03 00 00 02 
    1471   00:9334  00 22 22 22 00 02 21 21 21 1E 00 22 00 02 00 00 
    1471   00:9344  00 
    1472   00:9345                             defb 3,3,3,1,2,255,0,7,2,29,37,34,37,30,2,33,30,0,34,0,34,0,2,255,0,6,1,2,255,0,7,2,34
    1472   00:9345  03 03 03 01 02 FF 00 07 02 1D 25 22 25 1E 02 21 
    1472   00:9355  1E 00 22 00 22 00 02 FF 00 06 01 02 FF 00 07 02 
    1472   00:9365  22 
    1473   00:9366                             defb 0,34,0,34,2,0,34,0,34,0,34,0,2,255,0,6,1,2,3,3,0,0,0,27,28,2,34,0,34,0,34,2,0
    1473   00:9366  00 22 00 22 02 00 22 00 22 00 22 00 02 FF 00 06 
    1473   00:9376  01 02 03 03 00 00 00 1B 1C 02 22 00 22 00 22 02 
    1473   00:9386  00 
    1474   00:9387                             defb 34,0,34,0,34,0,2,3,3,3,0,0,0,1,255,0,6,27,28,2,35,0,35,0,35,2,0,35,0,35,0,35,0
    1474   00:9387  22 00 22 00 22 00 02 03 03 03 00 00 00 01 FF 00 
    1474   00:9397  06 1B 1C 02 23 00 23 00 23 02 00 23 00 23 00 23 
    1474   00:93A7  00 
    1475   00:93A8                             defb 2,255,0,13,27,28,2,34,26,34,26,34,2,26,34,26,34,26,34,26,2,255,0,7,255,9,30
    1475   00:93A8  02 FF 00 0D 1B 1C 02 22 1A 22 1A 22 02 1A 22 1A 
    1475   00:93B8  22 1A 22 1A 02 FF 00 07 FF 09 1E 
    1476   00:93C3                             defb 255,10,30,2,255,0,5,34,0,0,0,40,255,0,8,40,0,0,0,34,255,0,5,1,2,255,38,5,35,38,38,38,39
    1476   00:93C3  FF 0A 1E 02 FF 00 05 22 00 00 00 28 FF 00 08 28 
    1476   00:93D3  00 00 00 22 FF 00 05 01 02 FF 26 05 23 26 26 26 
    1476   00:93E3  27 
    1477   00:93E4                             defb 255,0,8,61,38,38,38,35,255,38,5,1,2,255,0,5,34,255,0,16,34,255,0,5,1,2,255,33,5,31,255,0,16
    1477   00:93E4  FF 00 08 3D 26 26 26 23 FF 26 05 01 02 FF 00 05 
    1477   00:93F4  22 FF 00 10 22 FF 00 05 01 02 FF 21 05 1F FF 00 
    1477   00:9404  10 
    1478   00:9405                             defb 32,33,30,0,0,0,1,2,255,0,24,34,0,0,0,1,2,255,0,24,32,33,33,33,1,2,255,0,28,1,2,255,0,28
    1478   00:9405  20 21 1E 00 00 00 01 02 FF 00 18 22 00 00 00 01 
    1478   00:9415  02 FF 00 18 20 21 21 21 01 02 FF 00 1C 01 02 FF 
    1478   00:9425  00 1C 
    1479   00:9427                             defb 1,2,255,0,28,1,2,255,0,12,49,50,0,0,0,49,50,255,0,9,1,2,255,0,12,49,50,0,0,0,49,50,255,0,9
    1479   00:9427  01 02 FF 00 1C 01 02 FF 00 0C 31 32 00 00 00 31 
    1479   00:9437  32 FF 00 09 01 02 FF 00 0C 31 32 00 00 00 31 32 
    1479   00:9447  FF 00 09 
    1480   00:944A                             defb 1,2,255,0,8,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,255,0,5,1,2,255,0,8,54,60,0,60,0
    1480   00:944A  01 02 FF 00 08 3A 3B 3A 3B 3A 3B 3A 3B 3A 3B 3A 
    1480   00:945A  3B 3A 3B 3A FF 00 05 01 02 FF 00 08 36 3C 00 3C 
    1480   00:946A  00 
    1481   00:946B                             defb 60,0,60,0,60,0,60,0,60,54,255,0,5,1,2,0,0,0,6,6,27,28,255,6,17,1,0,0,0,1,255,0,6
    1481   00:946B  3C 00 3C 00 3C 00 3C 00 3C 36 FF 00 05 01 02 00 
    1481   00:947B  00 00 06 06 1B 1C FF 06 11 01 00 00 00 01 FF 00 
    1481   00:948B  06 
    1482   00:948C                             defb 27,28,255,0,17,1,255,0,10,27,28,255,0,17,1,255,0,4,255,9,30
    1482   00:948C  1B 1C FF 00 11 01 FF 00 0A 1B 1C FF 00 11 01 FF 
    1482   00:949C  00 04 FF 09 1E 
    1483   00:94A1                             defb 255,10,23,255,0,4,10,10,10,2,0,34,255,0,26,10,2,0,35,255,0,8,41,42,42,43,255,0,14,10,2,33,31
    1483   00:94A1  FF 0A 17 FF 00 04 0A 0A 0A 02 00 22 FF 00 1A 0A 
    1483   00:94B1  02 00 23 FF 00 08 29 2A 2A 2B FF 00 0E 0A 02 21 
    1483   00:94C1  1F 
    1484   00:94C2                             defb 255,0,8,48,0,0,44,255,0,14,10,2,255,0,10,48,0,0,44,255,0,9,27,28,9,9,9,10,2,255,0,10,47
    1484   00:94C2  FF 00 08 30 00 00 2C FF 00 0E 0A 02 FF 00 0A 30 
    1484   00:94D2  00 00 2C FF 00 09 1B 1C 09 09 09 0A 02 FF 00 0A 
    1484   00:94E2  2F 
    1485   00:94E3                             defb 46,46,45,255,0,9,27,28,0,0,0,10,2,255,0,23,27,28,0,0,0,10,2,0,0,0,255,9,17,0,0,0,27
    1485   00:94E3  2E 2E 2D FF 00 09 1B 1C 00 00 00 0A 02 FF 00 17 
    1485   00:94F3  1B 1C 00 00 00 0A 02 00 00 00 FF 09 11 00 00 00 
    1485   00:9503  1B 
    1486   00:9504                             defb 28,9,9,9,10,2,255,0,23,27,28,0,0,0,10,2,9,9,255,0,19,9,9,27,28,0,0,0,10,2,255,0,23
    1486   00:9504  1C 09 09 09 0A 02 FF 00 17 1B 1C 00 00 00 0A 02 
    1486   00:9514  09 09 FF 00 13 09 09 1B 1C 00 00 00 0A 02 FF 00 
    1486   00:9524  17 
    1487   00:9525                             defb 27,28,0,0,0,10,2,0,0,0,255,9,17,0,0,0,27,28,9,9,9,10,2,255,0,23,27,28,0,0,0,10,2
    1487   00:9525  1B 1C 00 00 00 0A 02 00 00 00 FF 09 11 00 00 00 
    1487   00:9535  1B 1C 09 09 09 0A 02 FF 00 17 1B 1C 00 00 00 0A 
    1487   00:9545  02 
    1488   00:9546                             defb 255,0,23,27,28,0,0,0,10,2,9,9,255,0,21,27,28,0,89,0,10,255,0,24,27,28,0,0,0,10,255,0,24
    1488   00:9546  FF 00 17 1B 1C 00 00 00 0A 02 09 09 FF 00 15 1B 
    1488   00:9556  1C 00 59 00 0A FF 00 18 1B 1C 00 00 00 0A FF 00 
    1488   00:9566  18 
    1489   00:9567                             defb 27,28,0,88,0,10,255,3,23,255,0,4,3,3,3
    1489   00:9567  1B 1C 00 58 00 0A FF 03 17 FF 00 04 03 03 03 
    1490   00:9576                             defb 255,10,5,34,10,34,10,10,10,40,255,10,11,255,0,4,10,10,18,10,255,38,4,35,38,35,38,38,38,39,255,0,17
    1490   00:9576  FF 0A 05 22 0A 22 0A 0A 0A 28 FF 0A 0B FF 00 04 
    1490   00:9586  0A 0A 12 0A FF 26 04 23 26 23 26 26 26 27 FF 00 
    1490   00:9596  11 
    1491   00:9597                             defb 18,10,255,0,4,35,0,35,255,0,21,18,10,255,0,4,34,0,34,0,41,42,42,43,255,0,16,18,255,10,7,35,0
    1491   00:9597  12 0A FF 00 04 23 00 23 FF 00 15 12 0A FF 00 04 
    1491   00:95A7  22 00 22 00 29 2A 2A 2B FF 00 10 12 FF 0A 07 23 
    1491   00:95B7  00 
    1492   00:95B8                             defb 48,0,0,44,255,0,7,55,255,56,6,27,28,18,30,255,33,5,10,35,0,48,0,0,44,255,0,14,27,28,18,31,255,33,5
    1492   00:95B8  30 00 00 2C FF 00 07 37 FF 38 06 1B 1C 12 1E FF 
    1492   00:95C8  21 05 0A 23 00 30 00 00 2C FF 00 0E 1B 1C 12 1F 
    1492   00:95D8  FF 21 05 
    1493   00:95DB                             defb 10,34,0,47,46,46,45,255,0,4,55,57,255,0,8,27,28,18,30,255,33,5,10,35,255,0,19,27,28,18,31,255,33,5
    1493   00:95DB  0A 22 00 2F 2E 2E 2D FF 00 04 37 39 FF 00 08 1B 
    1493   00:95EB  1C 12 1E FF 21 05 0A 23 FF 00 13 1B 1C 12 1F FF 
    1493   00:95FB  21 05 
    1494   00:95FD                             defb 10,35,255,0,19,27,28,18,30,255,33,5,10,34,255,0,11,55,57,255,0,6,27,28,18,31,255,33,5,10,35,255,0,21
    1494   00:95FD  0A 23 FF 00 13 1B 1C 12 1E FF 21 05 0A 22 FF 00 
    1494   00:960D  0B 37 39 FF 00 06 1B 1C 12 1F FF 21 05 0A 23 FF 
    1494   00:961D  00 15 
    1495   00:961F                             defb 18,30,255,33,5,10,35,255,0,21,18,31,255,33,5,10,31,255,0,12,55,255,56,4,57,0,0,0,18,255,10,7,255,0,5
    1495   00:961F  12 1E FF 21 05 0A 23 FF 00 15 12 1F FF 21 05 0A 
    1495   00:962F  1F FF 00 0C 37 FF 38 04 39 00 00 00 12 FF 0A 07 
    1495   00:963F  FF 00 05 
    1496   00:9642                             defb 51,52,255,0,15,18,10,255,0,11,53,54,0,89,0,0,21,23,255,0,8,55,18,10,0,49,50,0,49,50,0,49,50
    1496   00:9642  33 34 FF 00 0F 12 0A FF 00 0B 35 36 00 59 00 00 
    1496   00:9652  15 17 FF 00 08 37 12 0A 00 31 32 00 31 32 00 31 
    1496   00:9662  32 
    1497   00:9663                             defb 0,51,52,51,52,255,0,15,10,0,49,50,0,49,50,0,49,50,0,53,54,53,54,88,255,0,14,10,255,7,16,255,0,4
    1497   00:9663  00 33 34 33 34 FF 00 0F 0A 00 31 32 00 31 32 00 
    1497   00:9673  31 32 00 35 36 35 36 58 FF 00 0E 0A FF 07 10 FF 
    1497   00:9683  00 04 
    1498   00:9685  FF 07 09                   defb 255,7,9
    1499   00:9688                             defb 255,10,30,18,255,0,28,17,18,255,0,28,17,18,255,0,28,17,18,255,0,28,17,18,255,0,7,49,50,255,0,10,51
    1499   00:9688  FF 0A 1E 12 FF 00 1C 11 12 FF 00 1C 11 12 FF 00 
    1499   00:9698  1C 11 12 FF 00 1C 11 12 FF 00 07 31 32 FF 00 0A 
    1499   00:96A8  33 
    1500   00:96A9                             defb 52,255,0,7,17,18,255,0,7,49,50,255,0,10,53,54,255,0,7,17,18,255,0,6,49,50,49,50,255,0,8,51,52
    1500   00:96A9  34 FF 00 07 11 12 FF 00 07 31 32 FF 00 0A 35 36 
    1500   00:96B9  FF 00 07 11 12 FF 00 06 31 32 31 32 FF 00 08 33 
    1500   00:96C9  34 
    1501   00:96CA                             defb 51,52,255,0,6,17,18,255,0,6,49,50,49,50,255,0,8,53,54,53,54,255,0,6,17,18,27,28,14,255,15,8,16
    1501   00:96CA  33 34 FF 00 06 11 12 FF 00 06 31 32 31 32 FF 00 
    1501   00:96DA  08 35 36 35 36 FF 00 06 11 12 1B 1C 0E FF 0F 08 
    1501   00:96EA  10 
    1502   00:96EB                             defb 255,0,4,14,255,15,8,16,27,28,17,18,27,28,255,0,24,27,28,17,18,27,28,255,0,24,27,28,17,18,27,28,255,0,24
    1502   00:96EB  FF 00 04 0E FF 0F 08 10 1B 1C 11 12 1B 1C FF 00 
    1502   00:96FB  18 1B 1C 11 12 1B 1C FF 00 18 1B 1C 11 12 1B 1C 
    1502   00:970B  FF 00 18 
    1503   00:970E                             defb 27,28,17,18,27,28,255,0,24,27,28,17,18,14,255,15,4,16,27,28,0,0,0,14,255,15,4,16,0,0,0,27,28
    1503   00:970E  1B 1C 11 12 1B 1C FF 00 18 1B 1C 11 12 0E FF 0F 
    1503   00:971E  04 10 1B 1C 00 00 00 0E FF 0F 04 10 00 00 00 1B 
    1503   00:972E  1C 
    1504   00:972F                             defb 14,255,15,4,16,17,255,0,7,27,28,255,0,12,27,28,255,0,37,255,7,30
    1504   00:972F  0E FF 0F 04 10 11 FF 00 07 1B 1C FF 00 0C 1B 1C 
    1504   00:973F  FF 00 25 FF 07 1E 
    1505   00:9745                             defb 255,10,30,18,255,0,29,18,255,0,29,18,255,0,29,18,255,0,22,14,255,15,6,18,255,0,14,14,255,15,5,16,255,0,7
    1505   00:9745  FF 0A 1E 12 FF 00 1D 12 FF 00 1D 12 FF 00 1D 12 
    1505   00:9755  FF 00 16 0E FF 0F 06 12 FF 00 0E 0E FF 0F 05 10 
    1505   00:9765  FF 00 07 
    1506   00:9768                             defb 17,18,255,0,28,17,18,255,0,7,14,255,15,5,16,255,0,14,17,18,255,0,28,17,18,14,27,28,15,16,255,0,23
    1506   00:9768  11 12 FF 00 1C 11 12 FF 00 07 0E FF 0F 05 10 FF 
    1506   00:9778  00 0E 11 12 FF 00 1C 11 12 0E 1B 1C 0F 10 FF 00 
    1506   00:9788  17 
    1507   00:9789                             defb 17,18,0,27,28,255,0,24,14,17,18,0,27,28,255,0,25,17,18,255,0,8,21,255,22,16,23,0,0,17,18,14,15,15,15
    1507   00:9789  11 12 00 1B 1C FF 00 18 0E 11 12 00 1B 1C FF 00 
    1507   00:9799  19 11 12 FF 00 08 15 FF 16 10 17 00 00 11 12 0E 
    1507   00:97A9  0F 0F 0F 
    1508   00:97AC                             defb 16,255,0,8,61,38,38,39,255,0,9,27,28,17,18,255,0,14,21,23,255,0,7,89,0,0,27,28,17,255,0,27,27
    1508   00:97AC  10 FF 00 08 3D 26 26 27 FF 00 09 1B 1C 11 12 FF 
    1508   00:97BC  00 0E 15 17 FF 00 07 59 00 00 1B 1C 11 FF 00 1B 
    1508   00:97CC  1B 
    1509   00:97CD                             defb 28,17,255,0,24,88,0,0,27,28,17,255,7,14,255,0,4,255,7,12
    1509   00:97CD  1C 11 FF 00 18 58 00 00 1B 1C 11 FF 07 0E FF 00 
    1509   00:97DD  04 FF 07 0C 
    1510   00:97E1                             defb 255,10,30,255,0,29,17,255,0,29,17,255,0,29,17,255,22,23,23,255,0,5,17,18,255,0,28,17,18,255,0,25,55
    1510   00:97E1  FF 0A 1E FF 00 1D 11 FF 00 1D 11 FF 00 1D 11 FF 
    1510   00:97F1  16 17 17 FF 00 05 11 12 FF 00 1C 11 12 FF 00 19 
    1510   00:9801  37 
    1511   00:9802                             defb 56,56,17,18,255,0,5,49,50,255,0,5,41,42,42,43,255,0,12,17,18,255,0,5,49,50,255,0,5,48,0,0,44
    1511   00:9802  38 38 11 12 FF 00 05 31 32 FF 00 05 29 2A 2A 2B 
    1511   00:9812  FF 00 0C 11 12 FF 00 05 31 32 FF 00 05 30 00 00 
    1511   00:9822  2C 
    1512   00:9823                             defb 255,0,12,17,18,255,0,4,49,50,49,50,255,0,4,48,0,0,44,255,0,7,55,255,56,4,17,18,255,0,4,49,50
    1512   00:9823  FF 00 0C 11 12 FF 00 04 31 32 31 32 FF 00 04 30 
    1512   00:9833  00 00 2C FF 00 07 37 FF 38 04 11 12 FF 00 04 31 
    1512   00:9843  32 
    1513   00:9844                             defb 49,50,255,0,4,47,46,46,45,255,0,12,17,18,0,0,0,49,50,49,50,49,50,255,0,19,17,18,0,0,0,49,50
    1513   00:9844  31 32 FF 00 04 2F 2E 2E 2D FF 00 0C 11 12 00 00 
    1513   00:9854  00 31 32 31 32 31 32 FF 00 13 11 12 00 00 00 31 
    1513   00:9864  32 
    1514   00:9865                             defb 49,50,49,50,255,0,13,55,255,56,5,17,18,0,0,49,50,49,50,49,50,49,50,255,0,18,17,18,0,0,49,50,49
    1514   00:9865  31 32 31 32 FF 00 0D 37 FF 38 05 11 12 00 00 31 
    1514   00:9875  32 31 32 31 32 31 32 FF 00 12 11 12 00 00 31 32 
    1514   00:9885  31 
    1515   00:9886                             defb 50,49,50,49,50,255,0,6,55,56,56,57,255,0,8,17,18,0,58,59,255,58,6,59,58,255,0,18,18,0,26,60,255,0,6
    1515   00:9886  32 31 32 31 32 FF 00 06 37 38 38 39 FF 00 08 11 
    1515   00:9896  12 00 3A 3B FF 3A 06 3B 3A FF 00 12 12 00 1A 3C 
    1515   00:98A6  FF 00 06 
    1516   00:98A9                             defb 60,26,255,0,18,255,7,30
    1516   00:98A9  3C 1A FF 00 12 FF 07 1E 
    1517   00:98B1                             defb 255,10,30,18,255,0,4,255,37,4,255,0,12,255,37,4,255,0,4,17,18,255,0,4,255,35,4,255,0,12,255,35,4
    1517   00:98B1  FF 0A 1E 12 FF 00 04 FF 25 04 FF 00 0C FF 25 04 
    1517   00:98C1  FF 00 04 11 12 FF 00 04 FF 23 04 FF 00 0C FF 23 
    1517   00:98D1  04 
    1518   00:98D2                             defb 255,0,4,17,18,255,0,4,255,34,4,255,0,12,255,34,4,255,0,4,17,18,255,33,4,31,34,34,34,255,0,12,34,34,34
    1518   00:98D2  FF 00 04 11 12 FF 00 04 FF 22 04 FF 00 0C FF 22 
    1518   00:98E2  04 FF 00 04 11 12 FF 21 04 1F 22 22 22 FF 00 0C 
    1518   00:98F2  22 22 22 
    1519   00:98F5                             defb 32,255,33,4,17,18,255,0,5,34,34,34,255,0,12,34,34,34,255,0,5,17,18,255,33,5,31,35,35,255,0,12,35,35
    1519   00:98F5  20 FF 21 04 11 12 FF 00 05 22 22 22 FF 00 0C 22 
    1519   00:9905  22 22 FF 00 05 11 12 FF 21 05 1F 23 23 FF 00 0C 
    1519   00:9915  23 23 
    1520   00:9917                             defb 32,255,33,5,17,18,255,0,6,34,34,255,0,12,34,34,255,0,6,17,18,255,33,6,31,34,255,0,12,34,32,255,33,6
    1520   00:9917  20 FF 21 05 11 12 FF 00 06 22 22 FF 00 0C 22 22 
    1520   00:9927  FF 00 06 11 12 FF 21 06 1F 22 FF 00 0C 22 20 FF 
    1520   00:9937  21 06 
    1521   00:9939                             defb 17,18,255,0,7,34,255,0,12,34,255,0,7,17,18,255,33,7,31,255,0,12,32,255,33,7,17,18,255,0,28,17,18
    1521   00:9939  11 12 FF 00 07 22 FF 00 0C 22 FF 00 07 11 12 FF 
    1521   00:9949  21 07 1F FF 00 0C 20 FF 21 07 11 12 FF 00 1C 11 
    1521   00:9959  12 
    1522   00:995A                             defb 255,0,28,17,18,255,0,28,17,18,255,0,28,17,255,0,8,58,59,255,58,10,59,58,255,0,15,26,26,60,255,0,10
    1522   00:995A  FF 00 1C 11 12 FF 00 1C 11 12 FF 00 1C 11 FF 00 
    1522   00:996A  08 3A 3B FF 3A 0A 3B 3A FF 00 0F 1A 1A 3C FF 00 
    1522   00:997A  0A 
    1523   00:997B                             defb 60,26,26,255,0,7,255,7,30
    1523   00:997B  3C 1A 1A FF 00 07 FF 07 1E 
    1524   00:9984                             defb 255,10,23,255,0,4,10,10,10,18,255,0,28,17,18,255,0,27,89,17,18,255,0,28,17,18,255,0,27,88,17,18,255,0,23
    1524   00:9984  FF 0A 17 FF 00 04 0A 0A 0A 12 FF 00 1C 11 12 FF 
    1524   00:9994  00 1B 59 11 12 FF 00 1C 11 12 FF 00 1B 58 11 12 
    1524   00:99A4  FF 00 17 
    1525   00:99A7                             defb 14,255,15,4,17,18,255,0,5,27,28,21,255,22,10,23,27,28,255,0,7,17,18,255,0,5,27,28,0,36,255,0,8
    1525   00:99A7  0E FF 0F 04 11 12 FF 00 05 1B 1C 15 FF 16 0A 17 
    1525   00:99B7  1B 1C FF 00 07 11 12 FF 00 05 1B 1C 00 24 FF 00 
    1525   00:99C7  08 
    1526   00:99C8                             defb 36,0,27,28,255,0,7,17,18,255,0,5,27,28,0,36,255,0,8,36,0,27,28,255,0,7,17,18,255,0,5,27,28
    1526   00:99C8  24 00 1B 1C FF 00 07 11 12 FF 00 05 1B 1C 00 24 
    1526   00:99D8  FF 00 08 24 00 1B 1C FF 00 07 11 12 FF 00 05 1B 
    1526   00:99E8  1C 
    1527   00:99E9                             defb 0,36,255,0,8,36,0,27,28,255,0,7,17,18,255,0,5,27,28,0,36,255,0,8,36,0,27,28,255,0,7,17,18
    1527   00:99E9  00 24 FF 00 08 24 00 1B 1C FF 00 07 11 12 FF 00 
    1527   00:99F9  05 1B 1C 00 24 FF 00 08 24 00 1B 1C FF 00 07 11 
    1527   00:9A09  12 
    1528   00:9A0A                             defb 0,0,0,49,50,21,255,22,16,23,49,50,0,0,0,17,18,0,0,0,49,50,255,0,18,49,50,0,0,0,17,18,0,0,0
    1528   00:9A0A  00 00 00 31 32 15 FF 16 10 17 31 32 00 00 00 11 
    1528   00:9A1A  12 00 00 00 31 32 FF 00 12 31 32 00 00 00 11 12 
    1528   00:9A2A  00 00 00 
    1529   00:9A2D                             defb 49,50,255,0,18,49,50,0,0,0,17,18,16,0,0,49,50,255,0,18,49,50,0,0,14,17,255,0,4,51,52,0,0
    1529   00:9A2D  31 32 FF 00 12 31 32 00 00 00 11 12 10 00 00 31 
    1529   00:9A3D  32 FF 00 12 31 32 00 00 0E 11 FF 00 04 33 34 00 
    1529   00:9A4D  00 
    1530   00:9A4E                             defb 51,52,0,51,52,0,51,52,0,51,52,0,51,52,0,0,51,52,255,0,8,53,54,0,0,53,54,0,53,54,0,53,54
    1530   00:9A4E  33 34 00 33 34 00 33 34 00 33 34 00 33 34 00 00 
    1530   00:9A5E  33 34 FF 00 08 35 36 00 00 35 36 00 35 36 00 35 
    1530   00:9A6E  36 
    1531   00:9A6F                             defb 0,53,54,0,53,54,0,0,53,54,255,0,4,255,7,30
    1531   00:9A6F  00 35 36 00 35 36 00 00 35 36 FF 00 04 FF 07 1E 
    1532   00:9A7F                             defb 255,10,16,30,255,0,13,18,255,0,14,32,255,10,4,30,255,0,9,18,255,0,18,32,10,10,10,30,255,0,6,18,255,0,21
    1532   00:9A7F  FF 0A 10 1E FF 00 0D 12 FF 00 0E 20 FF 0A 04 1E 
    1532   00:9A8F  FF 00 09 12 FF 00 12 20 0A 0A 0A 1E FF 00 06 12 
    1532   00:9A9F  FF 00 15 
    1533   00:9AA2                             defb 32,10,10,30,255,0,4,18,255,0,21,255,10,4,30,0,0,0,18,255,0,21,10,62,63,64,65,0,0,0,18,255,0,21
    1533   00:9AA2  20 0A 0A 1E FF 00 04 12 FF 00 15 FF 0A 04 1E 00 
    1533   00:9AB2  00 00 12 FF 00 15 0A 3E 3F 40 41 00 00 00 12 FF 
    1533   00:9AC2  00 15 
    1534   00:9AC4                             defb 10,66,67,68,69,0,0,0,18,255,0,21,255,10,6,30,0,18,255,0,26,32,10,0,18,255,0,27,10,0,18,255,0,27
    1534   00:9AC4  0A 42 43 44 45 00 00 00 12 FF 00 15 FF 0A 06 1E 
    1534   00:9AD4  00 12 FF 00 1A 20 0A 00 12 FF 00 1B 0A 00 12 FF 
    1534   00:9AE4  00 1B 
    1535   00:9AE6                             defb 10,30,18,255,0,27,32,10,18,255,0,28,10,18,255,0,28,10,18,255,0,22,85,86,86,87,0,0,10,255,0,29,10
    1535   00:9AE6  0A 1E 12 FF 00 1B 20 0A 12 FF 00 1C 0A 12 FF 00 
    1535   00:9AF6  1C 0A 12 FF 00 16 55 56 56 57 00 00 0A FF 00 1D 
    1535   00:9B06  0A 
    1536   00:9B07                             defb 255,0,29,255,10,24,255,12,4,10,10,10
    1536   00:9B07  FF 00 1D FF 0A 18 FF 0C 04 0A 0A 0A 
    1537   00:9B13                             defb 255,10,17,255,0,4,255,10,10,255,0,28,17,10,255,0,28,17,10,255,0,28,17,10,255,0,28,17,10,255,0,15,14
    1537   00:9B13  FF 0A 11 FF 00 04 FF 0A 0A FF 00 1C 11 0A FF 00 
    1537   00:9B23  1C 11 0A FF 00 1C 11 0A FF 00 1C 11 0A FF 00 0F 
    1537   00:9B33  0E 
    1538   00:9B34                             defb 255,15,4,16,255,0,7,17,10,255,0,28,17,10,255,15,12,16,255,0,10,14,255,15,4,17,10,255,0,28,17,10,255,0,28
    1538   00:9B34  FF 0F 04 10 FF 00 07 11 0A FF 00 1C 11 0A FF 0F 
    1538   00:9B44  0C 10 FF 00 0A 0E FF 0F 04 11 0A FF 00 1C 11 0A 
    1538   00:9B54  FF 00 1C 
    1539   00:9B57                             defb 17,10,255,0,14,14,255,15,6,16,255,0,6,17,10,255,0,28,17,10,255,0,28,17,10,255,15,12,16,255,0,10,14
    1539   00:9B57  11 0A FF 00 0E 0E FF 0F 06 10 FF 00 06 11 0A FF 
    1539   00:9B67  00 1C 11 0A FF 00 1C 11 0A FF 0F 0C 10 FF 00 0A 
    1539   00:9B77  0E 
    1540   00:9B78                             defb 255,15,4,17,10,0,49,50,0,49,50,0,49,50,0,49,50,255,0,17,10,0,49,50,0,49,50,0,49,50,0,49,50
    1540   00:9B78  FF 0F 04 11 0A 00 31 32 00 31 32 00 31 32 00 31 
    1540   00:9B88  32 FF 00 11 0A 00 31 32 00 31 32 00 31 32 00 31 
    1540   00:9B98  32 
    1541   00:9B99                             defb 255,0,17,10,58,59,255,58,9,59,58,255,0,16,10,255,15,29
    1541   00:9B99  FF 00 11 0A 3A 3B FF 3A 09 3B 3A FF 00 10 0A FF 
    1541   00:9BA9  0F 1D 
    1542   00:9BAB                             defb 255,10,30,18,255,0,5,40,0,34,0,34,0,34,0,34,255,0,14,18,18,0,41,42,42,43,40,0,35,0,35,0,35
    1542   00:9BAB  FF 0A 1E 12 FF 00 05 28 00 22 00 22 00 22 00 22 
    1542   00:9BBB  FF 00 0E 12 12 00 29 2A 2A 2B 28 00 23 00 23 00 
    1542   00:9BCB  23 
    1543   00:9BCC                             defb 0,35,255,0,9,41,42,42,43,0,18,18,0,48,0,0,44,40,0,34,0,34,0,34,0,34,255,0,9,48,0,0,44
    1543   00:9BCC  00 23 FF 00 09 29 2A 2A 2B 00 12 12 00 30 00 00 
    1543   00:9BDC  2C 28 00 22 00 22 00 22 00 22 FF 00 09 30 00 00 
    1543   00:9BEC  2C 
    1544   00:9BED                             defb 0,18,18,0,48,0,0,44,40,0,35,0,35,0,35,0,35,255,0,9,48,0,0,44,0,18,18,0,47,46,46,45,40
    1544   00:9BED  00 12 12 00 30 00 00 2C 28 00 23 00 23 00 23 00 
    1544   00:9BFD  23 FF 00 09 30 00 00 2C 00 12 12 00 2F 2E 2E 2D 
    1544   00:9C0D  28 
    1545   00:9C0E                             defb 0,32,255,33,13,30,0,47,46,46,45,0,18,18,255,38,5,39,255,0,15,34,255,0,6,18,18,255,0,21,35,255,0,6
    1545   00:9C0E  00 20 FF 21 0D 1E 00 2F 2E 2E 2D 00 12 12 FF 26 
    1545   00:9C1E  05 27 FF 00 0F 22 FF 00 06 12 12 FF 00 15 23 FF 
    1545   00:9C2E  00 06 
    1546   00:9C30                             defb 18,18,255,0,21,34,255,0,6,18,18,255,0,5,49,50,255,0,14,32,33,33,37,33,33,33,18,18,255,0,5,49,50
    1546   00:9C30  12 12 FF 00 15 22 FF 00 06 12 12 FF 00 05 31 32 
    1546   00:9C40  FF 00 0E 20 21 21 25 21 21 21 12 12 FF 00 05 31 
    1546   00:9C50  32 
    1547   00:9C51                             defb 255,0,17,34,0,0,0,18,18,255,0,4,49,50,49,50,255,0,16,35,0,0,0,18,18,255,0,4,49,50,49,50,255,0,16
    1547   00:9C51  FF 00 11 22 00 00 00 12 12 FF 00 04 31 32 31 32 
    1547   00:9C61  FF 00 10 23 00 00 00 12 12 FF 00 04 31 32 31 32 
    1547   00:9C71  FF 00 10 
    1548   00:9C74                             defb 34,0,0,0,18,18,0,0,0,49,50,49,50,49,50,255,0,15,32,33,33,33,18,18,0,0,0,49,50,49,50,49,50
    1548   00:9C74  22 00 00 00 12 12 00 00 00 31 32 31 32 31 32 FF 
    1548   00:9C84  00 0F 20 21 21 21 12 12 00 00 00 31 32 31 32 31 
    1548   00:9C94  32 
    1549   00:9C95                             defb 255,0,19,18,0,0,0,49,50,49,50,49,50,49,50,255,0,22,49,50,49,50,49,50,49,50,255,0,19,255,15,30
    1549   00:9C95  FF 00 13 12 00 00 00 31 32 31 32 31 32 31 32 FF 
    1549   00:9CA5  00 16 31 32 31 32 31 32 31 32 FF 00 13 FF 0F 1E 
    1550   00:9CB5                             defb 255,22,13,23,255,0,4,21,255,22,11,18,0,0,34,255,0,25,18,18,33,33,31,255,0,25,18,18,255,0,28,18,17
    1550   00:9CB5  FF 16 0D 17 FF 00 04 15 FF 16 0B 12 00 00 22 FF 
    1550   00:9CC5  00 19 12 12 21 21 1F FF 00 19 12 12 FF 00 1C 12 
    1550   00:9CD5  11 
    1551   00:9CD6                             defb 0,0,0,21,255,22,20,23,0,27,28,18,18,255,0,6,34,255,0,15,34,0,0,0,27,28,18,18,255,0,6,34,255,0,15
    1551   00:9CD6  00 00 00 15 FF 16 14 17 00 1B 1C 12 12 FF 00 06 
    1551   00:9CE6  22 FF 00 0F 22 00 00 00 1B 1C 12 12 FF 00 06 22 
    1551   00:9CF6  FF 00 0F 
    1552   00:9CF9                             defb 34,0,0,0,27,28,18,18,16,255,0,5,35,255,0,15,35,0,0,0,27,28,18,18,255,0,6,34,255,0,15,34,0,0,0
    1552   00:9CF9  22 00 00 00 1B 1C 12 12 10 FF 00 05 23 FF 00 0F 
    1552   00:9D09  23 00 00 00 1B 1C 12 12 FF 00 06 22 FF 00 0F 22 
    1552   00:9D19  00 00 00 
    1553   00:9D1C                             defb 27,28,18,18,0,0,0,14,255,15,20,16,0,27,28,18,18,255,0,6,34,255,0,15,34,0,0,0,27,28,18,18,255,0,6
    1553   00:9D1C  1B 1C 12 12 00 00 00 0E FF 0F 14 10 00 1B 1C 12 
    1553   00:9D2C  12 FF 00 06 22 FF 00 0F 22 00 00 00 1B 1C 12 12 
    1553   00:9D3C  FF 00 06 
    1554   00:9D3F                             defb 35,255,0,15,35,0,0,0,27,28,18,18,16,255,0,5,34,255,0,15,34,0,0,0,27,28,18,18,255,0,6,34,255,0,15
    1554   00:9D3F  23 FF 00 0F 23 00 00 00 1B 1C 12 12 10 FF 00 05 
    1554   00:9D4F  22 FF 00 0F 22 00 00 00 1B 1C 12 12 FF 00 06 22 
    1554   00:9D5F  FF 00 0F 
    1555   00:9D62                             defb 34,0,0,0,27,28,18,18,0,0,0,14,255,15,20,16,0,27,28,18,255,0,27,27,28,18,255,0,27,27,28,18,255,15,30
    1555   00:9D62  22 00 00 00 1B 1C 12 12 00 00 00 0E FF 0F 14 10 
    1555   00:9D72  00 1B 1C 12 FF 00 1B 1B 1C 12 FF 00 1B 1B 1C 12 
    1555   00:9D82  FF 0F 1E 
    1556   00:9D85  16                  numsc  defb 22
    1557   00:9D86  (00:9D86)           chgfx  equ $
    1558   00:9D86                             defb 0,0,0,0,0,0,0,0
    1558   00:9D86  00 00 00 00 00 00 00 00 
    1559   00:9D8E                             defb 151,171,151,171,151,171,151,171
    1559   00:9D8E  97 AB 97 AB 97 AB 97 AB 
    1560   00:9D96                             defb 213,233,213,233,213,233,213,233
    1560   00:9D96  D5 E9 D5 E9 D5 E9 D5 E9 
    1561   00:9D9E                             defb 255,255,153,102,0,0,0,0
    1561   00:9D9E  FF FF 99 66 00 00 00 00 
    1562   00:9DA6                             defb 255,170,85,255,0,0,0,0
    1562   00:9DA6  FF AA 55 FF 00 00 00 00 
    1563   00:9DAE                             defb 255,153,255,0,0,0,0,0
    1563   00:9DAE  FF 99 FF 00 00 00 00 00 
    1564   00:9DB6                             defb 255,255,0,255,0,0,0,0
    1564   00:9DB6  FF FF 00 FF 00 00 00 00 
    1565   00:9DBE                             defb 255,255,85,170,85,170,0,0
    1565   00:9DBE  FF FF 55 AA 55 AA 00 00 
    1566   00:9DC6                             defb 255,255,0,255,0,255,0,0
    1566   00:9DC6  FF FF 00 FF 00 FF 00 00 
    1567   00:9DCE                             defb 255,68,34,255,0,0,0,0
    1567   00:9DCE  FF 44 22 FF 00 00 00 00 
    1568   00:9DD6                             defb 128,255,128,255,128,255,128,255
    1568   00:9DD6  80 FF 80 FF 80 FF 80 FF 
    1569   00:9DDE                             defb 255,189,165,165,165,66,0,0
    1569   00:9DDE  FF BD A5 A5 A5 42 00 00 
    1570   00:9DE6                             defb 255,85,255,0,90,90,24,0
    1570   00:9DE6  FF 55 FF 00 5A 5A 18 00 
    1571   00:9DEE                             defb 255,0,34,102,102,68,255,0
    1571   00:9DEE  FF 00 22 66 66 44 FF 00 
    1572   00:9DF6                             defb 255,0,35,19,11,5,2,1
    1572   00:9DF6  FF 00 23 13 0B 05 02 01 
    1573   00:9DFE                             defb 255,0,35,19,11,5,2,253
    1573   00:9DFE  FF 00 23 13 0B 05 02 FD 
    1574   00:9E06                             defb 252,130,68,40,16,32,64,128
    1574   00:9E06  FC 82 44 28 10 20 40 80 
    1575   00:9E0E                             defb 98,82,74,70,70,74,82,98
    1575   00:9E0E  62 52 4A 46 46 4A 52 62 
    1576   00:9E16                             defb 70,74,82,98,98,82,74,70
    1576   00:9E16  46 4A 52 62 62 52 4A 46 
    1577   00:9E1E                             defb 255,129,66,36,24,255,0,0
    1577   00:9E1E  FF 81 42 24 18 FF 00 00 
    1578   00:9E26                             defb 129,66,36,24,24,36,66,129
    1578   00:9E26  81 42 24 18 18 24 42 81 
    1579   00:9E2E                             defb 255,128,191,191,255,0,127,0
    1579   00:9E2E  FF 80 BF BF FF 00 7F 00 
    1580   00:9E36                             defb 255,0,255,255,255,0,255,0
    1580   00:9E36  FF 00 FF FF FF 00 FF 00 
    1581   00:9E3E                             defb 255,5,255,255,255,0,254,0
    1581   00:9E3E  FF 05 FF FF FF 00 FE 00 
    1582   00:9E46                             defb 128,130,132,130,148,170,128,255
    1582   00:9E46  80 82 84 82 94 AA 80 FF 
    1583   00:9E4E                             defb 128,129,130,133,138,149,170,255
    1583   00:9E4E  80 81 82 85 8A 95 AA FF 
    1584   00:9E56                             defb 0,0,0,0,68,68,238,255
    1584   00:9E56  00 00 00 00 44 44 EE FF 
    1585   00:9E5E                             defb 63,32,0,0,63,32,0,0
    1585   00:9E5E  3F 20 00 00 3F 20 00 00 
    1586   00:9E66                             defb 252,4,0,0,252,4,0,0
    1586   00:9E66  FC 04 00 00 FC 04 00 00 
    1587   00:9E6E                             defb 0,3,13,29,61,57,113,127
    1587   00:9E6E  00 03 0D 1D 3D 39 71 7F 
    1588   00:9E76                             defb 0,192,176,200,244,244,250,254
    1588   00:9E76  00 C0 B0 C8 F4 F4 FA FE 
    1589   00:9E7E                             defb 254,250,244,244,200,176,192,0
    1589   00:9E7E  FE FA F4 F4 C8 B0 C0 00 
    1590   00:9E86                             defb 127,113,61,61,29,15,3,0
    1590   00:9E86  7F 71 3D 3D 1D 0F 03 00 
    1591   00:9E8E                             defb 0,255,0,255,255,170,85,0
    1591   00:9E8E  00 FF 00 FF FF AA 55 00 
    1592   00:9E96                             defb 122,122,122,122,122,122,122,122
    1592   00:9E96  7A 7A 7A 7A 7A 7A 7A 7A 
    1593   00:9E9E                             defb 122,0,253,253,253,253,0,122
    1593   00:9E9E  7A 00 FD FD FD FD 00 7A 
    1594   00:9EA6                             defb 122,0,60,0,122,0,60,0
    1594   00:9EA6  7A 00 3C 00 7A 00 3C 00 
    1595   00:9EAE                             defb 52,122,122,122,122,122,0,52
    1595   00:9EAE  34 7A 7A 7A 7A 7A 00 34 
    1596   00:9EB6                             defb 0,254,0,254,0,254,0,254
    1596   00:9EB6  00 FE 00 FE 00 FE 00 FE 
    1597   00:9EBE                             defb 85,149,21,229,9,241,2,252
    1597   00:9EBE  55 95 15 E5 09 F1 02 FC 
    1598   00:9EC6                             defb 85,85,85,85,85,85,85,0
    1598   00:9EC6  55 55 55 55 55 55 55 00 
    1599   00:9ECE                             defb 0,0,0,0,3,5,10,13
    1599   00:9ECE  00 00 00 00 03 05 0A 0D 
    1600   00:9ED6                             defb 0,0,0,0,255,85,170,255
    1600   00:9ED6  00 00 00 00 FF 55 AA FF 
    1601   00:9EDE                             defb 0,0,0,0,128,96,176,208
    1601   00:9EDE  00 00 00 00 80 60 B0 D0 
    1602   00:9EE6                             defb 176,208,176,208,176,208,176,208
    1602   00:9EE6  B0 D0 B0 D0 B0 D0 B0 D0 
    1603   00:9EEE                             defb 176,80,160,192,0,0,0,0
    1603   00:9EEE  B0 50 A0 C0 00 00 00 00 
    1604   00:9EF6                             defb 255,85,170,255,0,0,0,0
    1604   00:9EF6  FF 55 AA FF 00 00 00 00 
    1605   00:9EFE                             defb 11,13,6,3,0,0,0,0
    1605   00:9EFE  0B 0D 06 03 00 00 00 00 
    1606   00:9F06                             defb 11,13,11,13,11,13,11,13
    1606   00:9F06  0B 0D 0B 0D 0B 0D 0B 0D 
    1607   00:9F0E                             defb 207,0,103,103,103,103,103,207
    1607   00:9F0E  CF 00 67 67 67 67 67 CF 
    1608   00:9F16                             defb 254,0,120,184,120,120,180,0
    1608   00:9F16  FE 00 78 B8 78 78 B4 00 
    1609   00:9F1E                             defb 0,96,119,59,28,110,119,3
    1609   00:9F1E  00 60 77 3B 1C 6E 77 03 
    1610   00:9F26                             defb 0,0,254,254,0,254,126,128
    1610   00:9F26  00 00 FE FE 00 FE 7E 80 
    1611   00:9F2E                             defb 125,126,0,127,127,0,127,0
    1611   00:9F2E  7D 7E 00 7F 7F 00 7F 00 
    1612   00:9F36                             defb 222,238,112,186,220,14,246,0
    1612   00:9F36  DE EE 70 BA DC 0E F6 00 
    1613   00:9F3E                             defb 255,164,255,0,31,31,15,3
    1613   00:9F3E  FF A4 FF 00 1F 1F 0F 03 
    1614   00:9F46                             defb 255,36,255,0,255,255,255,255
    1614   00:9F46  FF 24 FF 00 FF FF FF FF 
    1615   00:9F4E                             defb 255,37,255,0,248,248,240,192
    1615   00:9F4E  FF 25 FF 00 F8 F8 F0 C0 
    1616   00:9F56                             defb 255,0,85,255,0,0,0,0
    1616   00:9F56  FF 00 55 FF 00 00 00 00 
    1617   00:9F5E                             defb 255,0,89,173,44,44,44,44
    1617   00:9F5E  FF 00 59 AD 2C 2C 2C 2C 
    1618   00:9F66                             defb 44,44,44,44,44,0,44,94
    1618   00:9F66  2C 2C 2C 2C 2C 00 2C 5E 
    1619   00:9F6E                             defb 85,84,84,83,72,71,32,31
    1619   00:9F6E  55 54 54 53 48 47 20 1F 
    1620   00:9F76                             defb 255,63,0,31,16,31,31,31
    1620   00:9F76  FF 3F 00 1F 10 1F 1F 1F 
    1621   00:9F7E                             defb 128,224,24,252,7,249,254,255
    1621   00:9F7E  80 E0 18 FC 07 F9 FE FF 
    1622   00:9F86                             defb 0,0,0,0,252,255,248,240
    1622   00:9F86  00 00 00 00 FC FF F8 F0 
    1623   00:9F8E                             defb 0,0,0,0,0,128,64,112
    1623   00:9F8E  00 00 00 00 00 80 40 70 
    1624   00:9F96                             defb 0,252,3,0,253,253,253,254
    1624   00:9F96  00 FC 03 00 FD FD FD FE 
    1625   00:9F9E                             defb 224,63,63,127,127,112,191,0
    1625   00:9F9E  E0 3F 3F 7F 7F 70 BF 00 
    1626   00:9FA6                             defb 255,255,255,255,252,0,255,0
    1626   00:9FA6  FF FF FF FF FC 00 FF 00 
    1627   00:9FAE                             defb 252,254,255,255,3,2,252,0
    1627   00:9FAE  FC FE FF FF 03 02 FC 00 
    1628   00:9FB6                             defb 255,129,129,129,129,129,129,255
    1628   00:9FB6  FF 81 81 81 81 81 81 FF 
    1629   00:9FBE                             defb 60,66,129,129,129,129,66,60
    1629   00:9FBE  3C 42 81 81 81 81 42 3C 
    1630   00:9FC6                             defb 24,36,36,66,66,129,129,255
    1630   00:9FC6  18 24 24 42 42 81 81 FF 
    1631   00:9FCE                             defb 255,129,129,129,129,129,129,255
    1631   00:9FCE  FF 81 81 81 81 81 81 FF 
    1632   00:9FD6                             defb 60,66,129,129,129,129,66,60
    1632   00:9FD6  3C 42 81 81 81 81 42 3C 
    1633   00:9FDE                             defb 24,36,36,66,66,129,129,255
    1633   00:9FDE  18 24 24 42 42 81 81 FF 
    1634   00:9FE6                             defb 60,36,231,129,129,231,36,60
    1634   00:9FE6  3C 24 E7 81 81 E7 24 3C 
    1635   00:9FEE                             defb 60,36,231,129,129,231,36,60
    1635   00:9FEE  3C 24 E7 81 81 E7 24 3C 
    1636   00:9FF6                             defb 0,0,16,0,0,16,0,0
    1636   00:9FF6  00 00 10 00 00 10 00 00 
    1637   00:9FFE                             defb 0,0,0,0,0,0,0,0
    1637   00:9FFE  00 00 00 00 00 00 00 00 
    1638   00:A006                             defb 0,64,64,64,64,64,64,0
    1638   00:A006  00 40 40 40 40 40 40 00 
    1639   00:A00E                             defb 0,80,80,80,80,80,80,0
    1639   00:A00E  00 50 50 50 50 50 50 00 
    1640   00:A016                             defb 0,84,84,84,84,84,84,0
    1640   00:A016  00 54 54 54 54 54 54 00 
    1641   00:A01E                             defb 0,85,85,85,85,85,85,0
    1641   00:A01E  00 55 55 55 55 55 55 00 
    1642   00:A026                             defb 14,61,109,237,229,126,129,126
    1642   00:A026  0E 3D 6D ED E5 7E 81 7E 
    1643   00:A02E                             defb 7,24,32,64,85,255,128,255
    1643   00:A02E  07 18 20 40 55 FF 80 FF 
    1644   00:A036                             defb 255,0,0,0,85,255,0,255
    1644   00:A036  FF 00 00 00 55 FF 00 FF 
    1645   00:A03E                             defb 240,12,2,1,85,255,1,255
    1645   00:A03E  F0 0C 02 01 55 FF 01 FF 
    1646   00:A046                             defb 254,254,218,250,174,254,254,0
    1646   00:A046  FE FE DA FA AE FE FE 00 
    1647   00:A04E                             defb 8,16,32,126,4,8,16,0
    1647   00:A04E  08 10 20 7E 04 08 10 00 
    1648   00:A056  (00:A056)           bcol   equ $
    1649   00:A056  60                         defb 96
    1650   00:A057  60                         defb 96
    1651   00:A058  60                         defb 96
    1652   00:A059  60                         defb 96
    1653   00:A05A  60                         defb 96
    1654   00:A05B  60                         defb 96
    1655   00:A05C  60                         defb 96
    1656   00:A05D  60                         defb 96
    1657   00:A05E  60                         defb 96
    1658   00:A05F  60                         defb 96
    1659   00:A060  60                         defb 96
    1660   00:A061  60                         defb 96
    1661   00:A062  60                         defb 96
    1662   00:A063  60                         defb 96
    1663   00:A064  60                         defb 96
    1664   00:A065  60                         defb 96
    1665   00:A066  60                         defb 96
    1666   00:A067  60                         defb 96
    1667   00:A068  60                         defb 96
    1668   00:A069  60                         defb 96
    1669   00:A06A  60                         defb 96
    1670   00:A06B  60                         defb 96
    1671   00:A06C  60                         defb 96
    1672   00:A06D  60                         defb 96
    1673   00:A06E  60                         defb 96
    1674   00:A06F  60                         defb 96
    1675   00:A070  60                         defb 96
    1676   00:A071  60                         defb 96
    1677   00:A072  60                         defb 96
    1678   00:A073  60                         defb 96
    1679   00:A074  60                         defb 96
    1680   00:A075  60                         defb 96
    1681   00:A076  60                         defb 96
    1682   00:A077  60                         defb 96
    1683   00:A078  60                         defb 96
    1684   00:A079  60                         defb 96
    1685   00:A07A  60                         defb 96
    1686   00:A07B  60                         defb 96
    1687   00:A07C  60                         defb 96
    1688   00:A07D  60                         defb 96
    1689   00:A07E  60                         defb 96
    1690   00:A07F  60                         defb 96
    1691   00:A080  60                         defb 96
    1692   00:A081  60                         defb 96
    1693   00:A082  60                         defb 96
    1694   00:A083  60                         defb 96
    1695   00:A084  60                         defb 96
    1696   00:A085  60                         defb 96
    1697   00:A086  60                         defb 96
    1698   00:A087  60                         defb 96
    1699   00:A088  60                         defb 96
    1700   00:A089  60                         defb 96
    1701   00:A08A  60                         defb 96
    1702   00:A08B  60                         defb 96
    1703   00:A08C  60                         defb 96
    1704   00:A08D  60                         defb 96
    1705   00:A08E  60                         defb 96
    1706   00:A08F  60                         defb 96
    1707   00:A090  60                         defb 96
    1708   00:A091  60                         defb 96
    1709   00:A092  60                         defb 96
    1710   00:A093  60                         defb 96
    1711   00:A094  60                         defb 96
    1712   00:A095  60                         defb 96
    1713   00:A096  60                         defb 96
    1714   00:A097  60                         defb 96
    1715   00:A098  60                         defb 96
    1716   00:A099  60                         defb 96
    1717   00:A09A  60                         defb 96
    1718   00:A09B  60                         defb 96
    1719   00:A09C  60                         defb 96
    1720   00:A09D  60                         defb 96
    1721   00:A09E  60                         defb 96
    1722   00:A09F  60                         defb 96
    1723   00:A0A0  60                         defb 96
    1724   00:A0A1  60                         defb 96
    1725   00:A0A2  60                         defb 96
    1726   00:A0A3  60                         defb 96
    1727   00:A0A4  60                         defb 96
    1728   00:A0A5  60                         defb 96
    1729   00:A0A6  60                         defb 96
    1730   00:A0A7  60                         defb 96
    1731   00:A0A8  60                         defb 96
    1732   00:A0A9  60                         defb 96
    1733   00:A0AA  60                         defb 96
    1734   00:A0AB  60                         defb 96
    1735   00:A0AC  60                         defb 96
    1736   00:A0AD  60                         defb 96
    1737   00:A0AE  60                         defb 96
    1738   00:A0AF  60                         defb 96
    1739   00:A0B0  (00:A0B0)           bprop  equ $
    1740   00:A0B0  00                         defb 0
    1741   00:A0B1  02                         defb 2
    1742   00:A0B2  02                         defb 2
    1743   00:A0B3  01                         defb 1
    1744   00:A0B4  02                         defb 2
    1745   00:A0B5  01                         defb 1
    1746   00:A0B6  01                         defb 1
    1747   00:A0B7  01                         defb 1
    1748   00:A0B8  02                         defb 2
    1749   00:A0B9  01                         defb 1
    1750   00:A0BA  02                         defb 2
    1751   00:A0BB  01                         defb 1
    1752   00:A0BC  01                         defb 1
    1753   00:A0BD  01                         defb 1
    1754   00:A0BE  01                         defb 1
    1755   00:A0BF  01                         defb 1
    1756   00:A0C0  01                         defb 1
    1757   00:A0C1  02                         defb 2
    1758   00:A0C2  02                         defb 2
    1759   00:A0C3  01                         defb 1
    1760   00:A0C4  00                         defb 0
    1761   00:A0C5  02                         defb 2
    1762   00:A0C6  02                         defb 2
    1763   00:A0C7  02                         defb 2
    1764   00:A0C8  02                         defb 2
    1765   00:A0C9  02                         defb 2
    1766   00:A0CA  05                         defb 5
    1767   00:A0CB  01                         defb 1
    1768   00:A0CC  01                         defb 1
    1769   00:A0CD  00                         defb 0
    1770   00:A0CE  00                         defb 0
    1771   00:A0CF  00                         defb 0
    1772   00:A0D0  00                         defb 0
    1773   00:A0D1  00                         defb 0
    1774   00:A0D2  00                         defb 0
    1775   00:A0D3  00                         defb 0
    1776   00:A0D4  00                         defb 0
    1777   00:A0D5  00                         defb 0
    1778   00:A0D6  00                         defb 0
    1779   00:A0D7  00                         defb 0
    1780   00:A0D8  00                         defb 0
    1781   00:A0D9  00                         defb 0
    1782   00:A0DA  00                         defb 0
    1783   00:A0DB  00                         defb 0
    1784   00:A0DC  00                         defb 0
    1785   00:A0DD  00                         defb 0
    1786   00:A0DE  00                         defb 0
    1787   00:A0DF  00                         defb 0
    1788   00:A0E0  00                         defb 0
    1789   00:A0E1  02                         defb 2
    1790   00:A0E2  02                         defb 2
    1791   00:A0E3  02                         defb 2
    1792   00:A0E4  02                         defb 2
    1793   00:A0E5  02                         defb 2
    1794   00:A0E6  02                         defb 2
    1795   00:A0E7  01                         defb 1
    1796   00:A0E8  01                         defb 1
    1797   00:A0E9  01                         defb 1
    1798   00:A0EA  01                         defb 1
    1799   00:A0EB  01                         defb 1
    1800   00:A0EC  00                         defb 0
    1801   00:A0ED  02                         defb 2
    1802   00:A0EE  02                         defb 2
    1803   00:A0EF  02                         defb 2
    1804   00:A0F0  02                         defb 2
    1805   00:A0F1  02                         defb 2
    1806   00:A0F2  02                         defb 2
    1807   00:A0F3  02                         defb 2
    1808   00:A0F4  02                         defb 2
    1809   00:A0F5  02                         defb 2
    1810   00:A0F6  00                         defb 0
    1811   00:A0F7  02                         defb 2
    1812   00:A0F8  00                         defb 0
    1813   00:A0F9  00                         defb 0
    1814   00:A0FA  00                         defb 0
    1815   00:A0FB  00                         defb 0
    1816   00:A0FC  00                         defb 0
    1817   00:A0FD  00                         defb 0
    1818   00:A0FE  00                         defb 0
    1819   00:A0FF  00                         defb 0
    1820   00:A100  00                         defb 0
    1821   00:A101  00                         defb 0
    1822   00:A102  00                         defb 0
    1823   00:A103  00                         defb 0
    1824   00:A104  00                         defb 0
    1825   00:A105  02                         defb 2
    1826   00:A106  02                         defb 2
    1827   00:A107  02                         defb 2
    1828   00:A108  06                         defb 6
    1829   00:A109  06                         defb 6
    1830   00:A10A  (00:A10A)           sprgfx equ $
    1831   00:A10A                             defb 0,0,64,0,67,239,76,57,80,249,35,251,38,139,78,239,78,14,255,255,128,1,91,108,144,9,43,213,144,8,109,182
    1831   00:A10A  00 00 40 00 43 EF 4C 39 50 F9 23 FB 26 8B 4E EF 
    1831   00:A11A  4E 0E FF FF 80 01 5B 6C 90 09 2B D5 90 08 6D B6 
    1832   00:A12A                             defb 0,0,16,0,208,251,83,14,84,62,200,254,201,162,211,187,147,131,255,255,96,0,22,219,100,2,74,245,36,2,155,109
    1832   00:A12A  00 00 10 00 D0 FB 53 0E 54 3E C8 FE C9 A2 D3 BB 
    1832   00:A13A  93 83 FF FF 60 00 16 DB 64 02 4A F5 24 02 9B 6D 
    1833   00:A14A                             defb 0,0,4,0,244,62,148,195,149,15,178,63,178,104,244,238,228,224,255,255,24,0,197,182,153,0,82,189,137,0,102,219
    1833   00:A14A  00 00 04 00 F4 3E 94 C3 95 0F B2 3F B2 68 F4 EE 
    1833   00:A15A  E4 E0 FF FF 18 00 C5 B6 99 00 52 BD 89 00 66 DB 
    1834   00:A16A                             defb 0,0,1,0,189,15,229,48,229,67,236,143,44,154,189,59,57,56,255,255,6,0,177,109,38,64,84,175,34,64,217,182
    1834   00:A16A  00 00 01 00 BD 0F E5 30 E5 43 EC 8F 2C 9A BD 3B 
    1834   00:A17A  39 38 FF FF 06 00 B1 6D 26 40 54 AF 22 40 D9 B6 
    1835   00:A18A                             defb 0,0,64,0,67,239,76,57,80,249,35,251,38,139,78,239,78,14,255,255,128,1,109,182,16,8,171,213,144,9,91,108
    1835   00:A18A  00 00 40 00 43 EF 4C 39 50 F9 23 FB 26 8B 4E EF 
    1835   00:A19A  4E 0E FF FF 80 01 6D B6 10 08 AB D5 90 09 5B 6C 
    1836   00:A1AA                             defb 0,0,16,0,208,251,83,14,84,62,200,254,201,162,211,187,147,131,255,255,96,0,155,109,4,2,106,245,100,2,22,219
    1836   00:A1AA  00 00 10 00 D0 FB 53 0E 54 3E C8 FE C9 A2 D3 BB 
    1836   00:A1BA  93 83 FF FF 60 00 9B 6D 04 02 6A F5 64 02 16 DB 
    1837   00:A1CA                             defb 0,0,4,0,244,62,148,195,149,15,178,63,178,104,244,238,228,224,255,255,24,0,102,219,129,0,90,189,153,0,197,182
    1837   00:A1CA  00 00 04 00 F4 3E 94 C3 95 0F B2 3F B2 68 F4 EE 
    1837   00:A1DA  E4 E0 FF FF 18 00 66 DB 81 00 5A BD 99 00 C5 B6 
    1838   00:A1EA                             defb 0,0,1,0,189,15,229,48,229,67,236,143,44,154,189,59,57,56,255,255,6,0,217,182,32,64,86,175,38,64,177,109
    1838   00:A1EA  00 00 01 00 BD 0F E5 30 E5 43 EC 8F 2C 9A BD 3B 
    1838   00:A1FA  39 38 FF FF 06 00 D9 B6 20 40 56 AF 26 40 B1 6D 
    1839   00:A20A                             defb 128,0,131,239,76,57,80,249,35,251,38,139,78,239,78,14,255,255,128,1,0,0,54,218,144,9,171,212,16,9,54,218
    1839   00:A20A  80 00 83 EF 4C 39 50 F9 23 FB 26 8B 4E EF 4E 0E 
    1839   00:A21A  FF FF 80 01 00 00 36 DA 90 09 AB D4 10 09 36 DA 
    1840   00:A22A                             defb 32,0,224,251,83,14,84,62,200,254,201,162,211,187,147,131,255,255,96,0,0,0,141,182,100,2,42,245,68,2,141,182
    1840   00:A22A  20 00 E0 FB 53 0E 54 3E C8 FE C9 A2 D3 BB 93 83 
    1840   00:A23A  FF FF 60 00 00 00 8D B6 64 02 2A F5 44 02 8D B6 
    1841   00:A24A                             defb 8,0,248,62,148,195,149,15,178,63,178,104,244,238,228,224,255,255,24,0,0,0,163,109,153,0,74,189,145,0,163,109
    1841   00:A24A  08 00 F8 3E 94 C3 95 0F B2 3F B2 68 F4 EE E4 E0 
    1841   00:A25A  FF FF 18 00 00 00 A3 6D 99 00 4A BD 91 00 A3 6D 
    1842   00:A26A                             defb 2,0,190,15,229,48,229,67,236,143,44,154,189,59,57,56,255,255,6,0,0,0,104,219,38,64,82,175,36,64,104,219
    1842   00:A26A  02 00 BE 0F E5 30 E5 43 EC 8F 2C 9A BD 3B 39 38 
    1842   00:A27A  FF FF 06 00 00 00 68 DB 26 40 52 AF 24 40 68 DB 
    1843   00:A28A                             defb 0,0,0,2,247,194,156,50,159,10,223,196,209,100,247,114,112,114,255,255,128,1,54,218,144,9,171,212,16,9,109,182
    1843   00:A28A  00 00 00 02 F7 C2 9C 32 9F 0A DF C4 D1 64 F7 72 
    1843   00:A29A  70 72 FF FF 80 01 36 DA 90 09 AB D4 10 09 6D B6 
    1844   00:A2AA                             defb 0,0,128,0,189,240,167,12,167,194,55,241,52,89,189,220,156,28,255,255,96,0,141,182,100,2,42,245,68,2,155,109
    1844   00:A2AA  00 00 80 00 BD F0 A7 0C A7 C2 37 F1 34 59 BD DC 
    1844   00:A2BA  9C 1C FF FF 60 00 8D B6 64 02 2A F5 44 02 9B 6D 
    1845   00:A2CA                             defb 0,0,32,0,47,124,41,195,169,240,77,252,77,22,47,119,39,7,255,255,24,0,163,109,153,0,74,189,145,0,102,219
    1845   00:A2CA  00 00 20 00 2F 7C 29 C3 A9 F0 4D FC 4D 16 2F 77 
    1845   00:A2DA  27 07 FF FF 18 00 A3 6D 99 00 4A BD 91 00 66 DB 
    1846   00:A2EA                             defb 0,0,8,0,11,223,202,112,42,124,19,127,147,69,203,221,201,193,255,255,6,0,104,219,38,64,82,175,36,64,217,182
    1846   00:A2EA  00 00 08 00 0B DF CA 70 2A 7C 13 7F 93 45 CB DD 
    1846   00:A2FA  C9 C1 FF FF 06 00 68 DB 26 40 52 AF 24 40 D9 B6 
    1847   00:A30A                             defb 0,0,0,2,247,194,156,50,159,10,223,196,209,100,247,114,112,114,255,255,128,1,109,182,16,8,171,213,144,9,54,218
    1847   00:A30A  00 00 00 02 F7 C2 9C 32 9F 0A DF C4 D1 64 F7 72 
    1847   00:A31A  70 72 FF FF 80 01 6D B6 10 08 AB D5 90 09 36 DA 
    1848   00:A32A                             defb 0,0,128,0,189,240,167,12,167,194,55,241,52,89,189,220,156,28,255,255,96,0,155,109,4,2,106,245,100,2,141,182
    1848   00:A32A  00 00 80 00 BD F0 A7 0C A7 C2 37 F1 34 59 BD DC 
    1848   00:A33A  9C 1C FF FF 60 00 9B 6D 04 02 6A F5 64 02 8D B6 
    1849   00:A34A                             defb 0,0,32,0,47,124,41,195,169,240,77,252,77,22,47,119,39,7,255,255,24,0,102,219,129,0,90,189,153,0,163,109
    1849   00:A34A  00 00 20 00 2F 7C 29 C3 A9 F0 4D FC 4D 16 2F 77 
    1849   00:A35A  27 07 FF FF 18 00 66 DB 81 00 5A BD 99 00 A3 6D 
    1850   00:A36A                             defb 0,0,8,0,11,223,202,112,42,124,19,127,147,69,203,221,201,193,255,255,6,0,217,182,32,64,86,175,38,64,104,219
    1850   00:A36A  00 00 08 00 0B DF CA 70 2A 7C 13 7F 93 45 CB DD 
    1850   00:A37A  C9 C1 FF FF 06 00 D9 B6 20 40 56 AF 26 40 68 DB 
    1851   00:A38A                             defb 0,1,247,193,156,50,159,10,223,196,209,100,247,114,112,114,255,255,128,1,0,0,91,108,144,9,43,213,144,8,91,108
    1851   00:A38A  00 01 F7 C1 9C 32 9F 0A DF C4 D1 64 F7 72 70 72 
    1851   00:A39A  FF FF 80 01 00 00 5B 6C 90 09 2B D5 90 08 5B 6C 
    1852   00:A3AA                             defb 64,0,125,240,167,12,167,194,55,241,52,89,189,220,156,28,255,255,96,0,0,0,22,219,100,2,74,245,36,2,22,219
    1852   00:A3AA  40 00 7D F0 A7 0C A7 C2 37 F1 34 59 BD DC 9C 1C 
    1852   00:A3BA  FF FF 60 00 00 00 16 DB 64 02 4A F5 24 02 16 DB 
    1853   00:A3CA                             defb 16,0,31,124,41,195,169,240,77,252,77,22,47,119,39,7,255,255,24,0,0,0,197,182,153,0,82,189,137,0,197,182
    1853   00:A3CA  10 00 1F 7C 29 C3 A9 F0 4D FC 4D 16 2F 77 27 07 
    1853   00:A3DA  FF FF 18 00 00 00 C5 B6 99 00 52 BD 89 00 C5 B6 
    1854   00:A3EA                             defb 4,0,7,223,202,112,42,124,19,127,147,69,203,221,201,193,255,255,6,0,0,0,177,109,38,64,84,175,34,64,177,109
    1854   00:A3EA  04 00 07 DF CA 70 2A 7C 13 7F 93 45 CB DD C9 C1 
    1854   00:A3FA  FF FF 06 00 00 00 B1 6D 26 40 54 AF 22 40 B1 6D 
    1855   00:A40A                             defb 1,128,6,96,8,16,16,136,32,68,32,36,64,18,64,18,64,2,64,2,32,4,32,4,16,8,8,16,6,96,1,128
    1855   00:A40A  01 80 06 60 08 10 10 88 20 44 20 24 40 12 40 12 
    1855   00:A41A  40 02 40 02 20 04 20 04 10 08 08 10 06 60 01 80 
    1856   00:A42A                             defb 0,96,1,152,2,4,4,34,8,17,8,9,144,4,144,4,144,0,144,0,8,1,8,1,4,2,2,4,1,152,0,96
    1856   00:A42A  00 60 01 98 02 04 04 22 08 11 08 09 90 04 90 04 
    1856   00:A43A  90 00 90 00 08 01 08 01 04 02 02 04 01 98 00 60 
    1857   00:A44A                             defb 0,24,0,102,0,129,129,8,66,4,66,2,36,1,36,1,36,0,36,0,66,0,66,0,129,0,0,129,0,102,0,24
    1857   00:A44A  00 18 00 66 00 81 81 08 42 04 42 02 24 01 24 01 
    1857   00:A45A  24 00 24 00 42 00 42 00 81 00 00 81 00 66 00 18 
    1858   00:A46A                             defb 0,6,128,25,64,32,32,66,16,129,144,128,73,0,73,0,9,0,9,0,16,128,16,128,32,64,64,32,128,25,0,6
    1858   00:A46A  00 06 80 19 40 20 20 42 10 81 90 80 49 00 49 00 
    1858   00:A47A  09 00 09 00 10 80 10 80 20 40 40 20 80 19 00 06 
    1859   00:A48A                             defb 0,0,3,192,12,48,16,8,32,196,32,36,64,18,64,18,64,2,64,2,32,4,32,4,16,8,12,48,3,192,0,0
    1859   00:A48A  00 00 03 C0 0C 30 10 08 20 C4 20 24 40 12 40 12 
    1859   00:A49A  40 02 40 02 20 04 20 04 10 08 0C 30 03 C0 00 00 
    1860   00:A4AA                             defb 0,0,0,240,3,12,4,2,8,49,8,9,144,4,144,4,144,0,144,0,8,1,8,1,4,2,3,12,0,240,0,0
    1860   00:A4AA  00 00 00 F0 03 0C 04 02 08 31 08 09 90 04 90 04 
    1860   00:A4BA  90 00 90 00 08 01 08 01 04 02 03 0C 00 F0 00 00 
    1861   00:A4CA                             defb 0,0,0,60,0,195,129,0,66,12,66,2,36,1,36,1,36,0,36,0,66,0,66,0,129,0,0,195,0,60,0,0
    1861   00:A4CA  00 00 00 3C 00 C3 81 00 42 0C 42 02 24 01 24 01 
    1861   00:A4DA  24 00 24 00 42 00 42 00 81 00 00 C3 00 3C 00 00 
    1862   00:A4EA                             defb 0,0,0,15,192,48,32,64,16,131,144,128,73,0,73,0,9,0,9,0,16,128,16,128,32,64,192,48,0,15,0,0
    1862   00:A4EA  00 00 00 0F C0 30 20 40 10 83 90 80 49 00 49 00 
    1862   00:A4FA  09 00 09 00 10 80 10 80 20 40 C0 30 00 0F 00 00 
    1863   00:A50A                             defb 0,0,3,192,12,48,16,8,32,196,64,34,64,18,128,9,128,9,64,2,64,2,32,4,16,8,12,48,3,192,0,0
    1863   00:A50A  00 00 03 C0 0C 30 10 08 20 C4 40 22 40 12 80 09 
    1863   00:A51A  80 09 40 02 40 02 20 04 10 08 0C 30 03 C0 00 00 
    1864   00:A52A                             defb 0,0,0,240,3,12,4,2,8,49,144,8,144,4,96,2,96,2,144,0,144,0,8,1,4,2,3,12,0,240,0,0
    1864   00:A52A  00 00 00 F0 03 0C 04 02 08 31 90 08 90 04 60 02 
    1864   00:A53A  60 02 90 00 90 00 08 01 04 02 03 0C 00 F0 00 00 
    1865   00:A54A                             defb 0,0,0,60,0,195,129,0,66,12,36,2,36,1,152,0,152,0,36,0,36,0,66,0,129,0,0,195,0,60,0,0
    1865   00:A54A  00 00 00 3C 00 C3 81 00 42 0C 24 02 24 01 98 00 
    1865   00:A55A  98 00 24 00 24 00 42 00 81 00 00 C3 00 3C 00 00 
    1866   00:A56A                             defb 0,0,0,15,192,48,32,64,16,131,137,0,73,0,38,0,38,0,9,0,9,0,16,128,32,64,192,48,0,15,0,0
    1866   00:A56A  00 00 00 0F C0 30 20 40 10 83 89 00 49 00 26 00 
    1866   00:A57A  26 00 09 00 09 00 10 80 20 40 C0 30 00 0F 00 00 
    1867   00:A58A                             defb 3,192,12,48,16,8,32,196,64,34,64,18,128,9,128,9,128,1,128,1,64,2,64,2,32,4,16,8,12,48,3,192
    1867   00:A58A  03 C0 0C 30 10 08 20 C4 40 22 40 12 80 09 80 09 
    1867   00:A59A  80 01 80 01 40 02 40 02 20 04 10 08 0C 30 03 C0 
    1868   00:A5AA                             defb 0,240,3,12,4,2,8,49,144,8,144,4,96,2,96,2,96,0,96,0,144,0,144,0,8,1,4,2,3,12,0,240
    1868   00:A5AA  00 F0 03 0C 04 02 08 31 90 08 90 04 60 02 60 02 
    1868   00:A5BA  60 00 60 00 90 00 90 00 08 01 04 02 03 0C 00 F0 
    1869   00:A5CA                             defb 0,60,0,195,129,0,66,12,36,2,36,1,152,0,152,0,24,0,24,0,36,0,36,0,66,0,129,0,0,195,0,60
    1869   00:A5CA  00 3C 00 C3 81 00 42 0C 24 02 24 01 98 00 98 00 
    1869   00:A5DA  18 00 18 00 24 00 24 00 42 00 81 00 00 C3 00 3C 
    1870   00:A5EA                             defb 0,15,192,48,32,64,16,131,137,0,73,0,38,0,38,0,6,0,6,0,9,0,9,0,16,128,32,64,192,48,0,15
    1870   00:A5EA  00 0F C0 30 20 40 10 83 89 00 49 00 26 00 26 00 
    1870   00:A5FA  06 00 06 00 09 00 09 00 10 80 20 40 C0 30 00 0F 
    1871   00:A60A                             defb 0,0,0,0,0,0,63,252,32,4,63,252,6,96,1,128,255,255,135,225,51,204,73,146,181,173,165,169,72,18,48,12
    1871   00:A60A  00 00 00 00 00 00 3F FC 20 04 3F FC 06 60 01 80 
    1871   00:A61A  FF FF 87 E1 33 CC 49 92 B5 AD A5 A9 48 12 30 0C 
    1872   00:A62A                             defb 0,0,0,0,0,0,15,255,8,1,15,255,1,152,0,96,255,255,97,248,12,243,146,100,109,107,105,106,146,4,12,3
    1872   00:A62A  00 00 00 00 00 00 0F FF 08 01 0F FF 01 98 00 60 
    1872   00:A63A  FF FF 61 F8 0C F3 92 64 6D 6B 69 6A 92 04 0C 03 
    1873   00:A64A                             defb 0,0,0,0,0,0,195,255,66,0,195,255,0,102,0,24,255,255,24,126,195,60,36,153,219,90,154,90,36,129,195,0
    1873   00:A64A  00 00 00 00 00 00 C3 FF 42 00 C3 FF 00 66 00 18 
    1873   00:A65A  FF FF 18 7E C3 3C 24 99 DB 5A 9A 5A 24 81 C3 00 
    1874   00:A66A                             defb 0,0,0,0,0,0,240,255,16,128,240,255,128,25,0,6,255,255,134,31,48,207,73,38,182,214,166,150,73,32,48,192
    1874   00:A66A  00 00 00 00 00 00 F0 FF 10 80 F0 FF 80 19 00 06 
    1874   00:A67A  FF FF 86 1F 30 CF 49 26 B6 D6 A6 96 49 20 30 C0 
    1875   00:A68A                             defb 0,0,0,0,0,0,0,0,63,252,32,4,63,252,6,96,255,255,135,225,51,204,73,146,181,173,149,165,72,18,48,12
    1875   00:A68A  00 00 00 00 00 00 00 00 3F FC 20 04 3F FC 06 60 
    1875   00:A69A  FF FF 87 E1 33 CC 49 92 B5 AD 95 A5 48 12 30 0C 
    1876   00:A6AA                             defb 0,0,0,0,0,0,0,0,15,255,8,1,15,255,1,152,255,255,97,248,12,243,146,100,109,107,101,105,146,4,12,3
    1876   00:A6AA  00 00 00 00 00 00 00 00 0F FF 08 01 0F FF 01 98 
    1876   00:A6BA  FF FF 61 F8 0C F3 92 64 6D 6B 65 69 92 04 0C 03 
    1877   00:A6CA                             defb 0,0,0,0,0,0,0,0,195,255,66,0,195,255,0,102,255,255,24,126,195,60,36,153,219,90,89,90,36,129,195,0
    1877   00:A6CA  00 00 00 00 00 00 00 00 C3 FF 42 00 C3 FF 00 66 
    1877   00:A6DA  FF FF 18 7E C3 3C 24 99 DB 5A 59 5A 24 81 C3 00 
    1878   00:A6EA                             defb 0,0,0,0,0,0,0,0,240,255,16,128,240,255,128,25,255,255,134,31,48,207,73,38,182,214,150,86,73,32,48,192
    1878   00:A6EA  00 00 00 00 00 00 00 00 F0 FF 10 80 F0 FF 80 19 
    1878   00:A6FA  FF FF 86 1F 30 CF 49 26 B6 D6 96 56 49 20 30 C0 
    1879   00:A70A                             defb 0,0,0,0,0,0,63,252,32,4,63,252,6,96,1,128,255,255,135,225,51,204,73,146,149,165,181,173,72,18,48,12
    1879   00:A70A  00 00 00 00 00 00 3F FC 20 04 3F FC 06 60 01 80 
    1879   00:A71A  FF FF 87 E1 33 CC 49 92 95 A5 B5 AD 48 12 30 0C 
    1880   00:A72A                             defb 0,0,0,0,0,0,15,255,8,1,15,255,1,152,0,96,255,255,97,248,12,243,146,100,101,105,109,107,146,4,12,3
    1880   00:A72A  00 00 00 00 00 00 0F FF 08 01 0F FF 01 98 00 60 
    1880   00:A73A  FF FF 61 F8 0C F3 92 64 65 69 6D 6B 92 04 0C 03 
    1881   00:A74A                             defb 0,0,0,0,0,0,195,255,66,0,195,255,0,102,0,24,255,255,24,126,195,60,36,153,89,90,219,90,36,129,195,0
    1881   00:A74A  00 00 00 00 00 00 C3 FF 42 00 C3 FF 00 66 00 18 
    1881   00:A75A  FF FF 18 7E C3 3C 24 99 59 5A DB 5A 24 81 C3 00 
    1882   00:A76A                             defb 0,0,0,0,0,0,240,255,16,128,240,255,128,25,0,6,255,255,134,31,48,207,73,38,150,86,182,214,73,32,48,192
    1882   00:A76A  00 00 00 00 00 00 F0 FF 10 80 F0 FF 80 19 00 06 
    1882   00:A77A  FF FF 86 1F 30 CF 49 26 96 56 B6 D6 49 20 30 C0 
    1883   00:A78A                             defb 0,0,0,0,63,252,32,4,63,252,6,96,1,128,6,96,255,255,135,225,51,204,73,146,165,169,181,173,72,18,48,12
    1883   00:A78A  00 00 00 00 3F FC 20 04 3F FC 06 60 01 80 06 60 
    1883   00:A79A  FF FF 87 E1 33 CC 49 92 A5 A9 B5 AD 48 12 30 0C 
    1884   00:A7AA                             defb 0,0,0,0,15,255,8,1,15,255,1,152,0,96,1,152,255,255,97,248,12,243,146,100,105,106,109,107,146,4,12,3
    1884   00:A7AA  00 00 00 00 0F FF 08 01 0F FF 01 98 00 60 01 98 
    1884   00:A7BA  FF FF 61 F8 0C F3 92 64 69 6A 6D 6B 92 04 0C 03 
    1885   00:A7CA                             defb 0,0,0,0,195,255,66,0,195,255,0,102,0,24,0,102,255,255,24,126,195,60,36,153,154,90,219,90,36,129,195,0
    1885   00:A7CA  00 00 00 00 C3 FF 42 00 C3 FF 00 66 00 18 00 66 
    1885   00:A7DA  FF FF 18 7E C3 3C 24 99 9A 5A DB 5A 24 81 C3 00 
    1886   00:A7EA                             defb 0,0,0,0,240,255,16,128,240,255,128,25,0,6,128,25,255,255,134,31,48,207,73,38,166,150,182,214,73,32,48,192
    1886   00:A7EA  00 00 00 00 F0 FF 10 80 F0 FF 80 19 00 06 80 19 
    1886   00:A7FA  FF FF 86 1F 30 CF 49 26 A6 96 B6 D6 49 20 30 C0 
    1887   00:A80A                             defb 1,128,191,253,1,128,15,240,16,8,32,20,32,20,32,20,32,4,63,252,20,8,24,8,15,240,4,32,4,32,14,112
    1887   00:A80A  01 80 BF FD 01 80 0F F0 10 08 20 14 20 14 20 14 
    1887   00:A81A  20 04 3F FC 14 08 18 08 0F F0 04 20 04 20 0E 70 
    1888   00:A82A                             defb 0,96,111,255,0,96,3,252,4,2,8,5,8,5,8,5,8,1,15,255,5,2,6,2,3,252,1,8,1,8,3,156
    1888   00:A82A  00 60 6F FF 00 60 03 FC 04 02 08 05 08 05 08 05 
    1888   00:A83A  08 01 0F FF 05 02 06 02 03 FC 01 08 01 08 03 9C 
    1889   00:A84A                             defb 0,24,219,255,0,24,0,255,129,0,66,1,66,1,66,1,66,0,195,255,129,64,129,128,0,255,0,66,0,66,0,231
    1889   00:A84A  00 18 DB FF 00 18 00 FF 81 00 42 01 42 01 42 01 
    1889   00:A85A  42 00 C3 FF 81 40 81 80 00 FF 00 42 00 42 00 E7 
    1890   00:A86A                             defb 0,6,246,255,0,6,192,63,32,64,80,128,80,128,80,128,16,128,240,255,32,80,32,96,192,63,128,16,128,16,192,57
    1890   00:A86A  00 06 F6 FF 00 06 C0 3F 20 40 50 80 50 80 50 80 
    1890   00:A87A  10 80 F0 FF 20 50 20 60 C0 3F 80 10 80 10 C0 39 
    1891   00:A88A                             defb 1,128,15,240,1,128,15,240,16,8,32,68,32,68,32,68,32,4,63,252,17,8,18,8,15,240,4,32,4,112,14,0
    1891   00:A88A  01 80 0F F0 01 80 0F F0 10 08 20 44 20 44 20 44 
    1891   00:A89A  20 04 3F FC 11 08 12 08 0F F0 04 20 04 70 0E 00 
    1892   00:A8AA                             defb 0,96,3,252,0,96,3,252,4,2,8,17,8,17,8,17,8,1,15,255,4,66,4,130,3,252,1,8,1,28,3,128
    1892   00:A8AA  00 60 03 FC 00 60 03 FC 04 02 08 11 08 11 08 11 
    1892   00:A8BA  08 01 0F FF 04 42 04 82 03 FC 01 08 01 1C 03 80 
    1893   00:A8CA                             defb 0,24,0,255,0,24,0,255,129,0,66,4,66,4,66,4,66,0,195,255,129,16,129,32,0,255,0,66,0,71,0,224
    1893   00:A8CA  00 18 00 FF 00 18 00 FF 81 00 42 04 42 04 42 04 
    1893   00:A8DA  42 00 C3 FF 81 10 81 20 00 FF 00 42 00 47 00 E0 
    1894   00:A8EA                             defb 0,6,192,63,0,6,192,63,32,64,16,129,16,129,16,129,16,128,240,255,32,68,32,72,192,63,128,16,192,17,0,56
    1894   00:A8EA  00 06 C0 3F 00 06 C0 3F 20 40 10 81 10 81 10 81 
    1894   00:A8FA  10 80 F0 FF 20 44 20 48 C0 3F 80 10 C0 11 00 38 
    1895   00:A90A                             defb 1,128,3,192,1,128,15,240,16,8,34,4,34,4,34,4,32,4,63,252,16,72,16,136,15,240,4,32,14,112,0,0
    1895   00:A90A  01 80 03 C0 01 80 0F F0 10 08 22 04 22 04 22 04 
    1895   00:A91A  20 04 3F FC 10 48 10 88 0F F0 04 20 0E 70 00 00 
    1896   00:A92A                             defb 0,96,0,240,0,96,3,252,4,2,8,129,8,129,8,129,8,1,15,255,4,18,4,34,3,252,1,8,3,156,0,0
    1896   00:A92A  00 60 00 F0 00 60 03 FC 04 02 08 81 08 81 08 81 
    1896   00:A93A  08 01 0F FF 04 12 04 22 03 FC 01 08 03 9C 00 00 
    1897   00:A94A                             defb 0,24,0,60,0,24,0,255,129,0,66,32,66,32,66,32,66,0,195,255,129,4,129,8,0,255,0,66,0,231,0,0
    1897   00:A94A  00 18 00 3C 00 18 00 FF 81 00 42 20 42 20 42 20 
    1897   00:A95A  42 00 C3 FF 81 04 81 08 00 FF 00 42 00 E7 00 00 
    1898   00:A96A                             defb 0,6,0,15,0,6,192,63,32,64,16,136,16,136,16,136,16,128,240,255,32,65,32,66,192,63,128,16,192,57,0,0
    1898   00:A96A  00 06 00 0F 00 06 C0 3F 20 40 10 88 10 88 10 88 
    1898   00:A97A  10 80 F0 FF 20 41 20 42 C0 3F 80 10 C0 39 00 00 
    1899   00:A98A                             defb 1,128,15,240,1,128,15,240,16,8,40,4,40,4,40,4,32,4,63,252,16,24,16,40,15,240,4,32,14,32,0,112
    1899   00:A98A  01 80 0F F0 01 80 0F F0 10 08 28 04 28 04 28 04 
    1899   00:A99A  20 04 3F FC 10 18 10 28 0F F0 04 20 0E 20 00 70 
    1900   00:A9AA                             defb 0,96,3,252,0,96,3,252,4,2,10,1,10,1,10,1,8,1,15,255,4,6,4,10,3,252,1,8,3,136,0,28
    1900   00:A9AA  00 60 03 FC 00 60 03 FC 04 02 0A 01 0A 01 0A 01 
    1900   00:A9BA  08 01 0F FF 04 06 04 0A 03 FC 01 08 03 88 00 1C 
    1901   00:A9CA                             defb 0,24,0,255,0,24,0,255,129,0,66,128,66,128,66,128,66,0,195,255,129,1,129,2,0,255,0,66,0,226,0,7
    1901   00:A9CA  00 18 00 FF 00 18 00 FF 81 00 42 80 42 80 42 80 
    1901   00:A9DA  42 00 C3 FF 81 01 81 02 00 FF 00 42 00 E2 00 07 
    1902   00:A9EA                             defb 0,6,192,63,0,6,192,63,32,64,16,160,16,160,16,160,16,128,240,255,96,64,160,64,192,63,128,16,128,56,192,1
    1902   00:A9EA  00 06 C0 3F 00 06 C0 3F 20 40 10 A0 10 A0 10 A0 
    1902   00:A9FA  10 80 F0 FF 60 40 A0 40 C0 3F 80 10 80 38 C0 01 
    1903   00:AA0A                             defb 3,192,12,48,16,8,38,100,41,148,72,18,74,82,127,254,32,4,63,252,8,16,16,8,31,248,0,0,0,0,0,0
    1903   00:AA0A  03 C0 0C 30 10 08 26 64 29 94 48 12 4A 52 7F FE 
    1903   00:AA1A  20 04 3F FC 08 10 10 08 1F F8 00 00 00 00 00 00 
    1904   00:AA2A                             defb 0,240,3,12,4,2,9,153,10,101,146,4,146,148,159,255,8,1,15,255,2,4,4,2,7,254,0,0,0,0,0,0
    1904   00:AA2A  00 F0 03 0C 04 02 09 99 0A 65 92 04 92 94 9F FF 
    1904   00:AA3A  08 01 0F FF 02 04 04 02 07 FE 00 00 00 00 00 00 
    1905   00:AA4A                             defb 0,60,0,195,129,0,66,102,66,153,36,129,36,165,231,255,66,0,195,255,0,129,129,0,129,255,0,0,0,0,0,0
    1905   00:AA4A  00 3C 00 C3 81 00 42 66 42 99 24 81 24 A5 E7 FF 
    1905   00:AA5A  42 00 C3 FF 00 81 81 00 81 FF 00 00 00 00 00 00 
    1906   00:AA6A                             defb 0,15,192,48,32,64,144,153,80,166,73,32,73,41,249,255,16,128,240,255,64,32,32,64,224,127,0,0,0,0,0,0
    1906   00:AA6A  00 0F C0 30 20 40 90 99 50 A6 49 20 49 29 F9 FF 
    1906   00:AA7A  10 80 F0 FF 40 20 20 40 E0 7F 00 00 00 00 00 00 
    1907   00:AA8A                             defb 3,192,12,48,16,8,32,4,32,4,70,98,73,146,127,254,32,4,63,252,8,16,16,8,31,248,2,64,1,128,0,0
    1907   00:AA8A  03 C0 0C 30 10 08 20 04 20 04 46 62 49 92 7F FE 
    1907   00:AA9A  20 04 3F FC 08 10 10 08 1F F8 02 40 01 80 00 00 
    1908   00:AAAA                             defb 0,240,3,12,4,2,8,1,8,1,145,152,146,100,159,255,8,1,15,255,2,4,4,2,7,254,0,144,0,96,0,0
    1908   00:AAAA  00 F0 03 0C 04 02 08 01 08 01 91 98 92 64 9F FF 
    1908   00:AABA  08 01 0F FF 02 04 04 02 07 FE 00 90 00 60 00 00 
    1909   00:AACA                             defb 0,60,0,195,129,0,66,0,66,0,36,102,36,153,231,255,66,0,195,255,0,129,129,0,129,255,0,36,0,24,0,0
    1909   00:AACA  00 3C 00 C3 81 00 42 00 42 00 24 66 24 99 E7 FF 
    1909   00:AADA  42 00 C3 FF 00 81 81 00 81 FF 00 24 00 18 00 00 
    1910   00:AAEA                             defb 0,15,192,48,32,64,16,128,16,128,137,25,73,38,249,255,16,128,240,255,64,32,32,64,224,127,0,9,0,6,0,0
    1910   00:AAEA  00 0F C0 30 20 40 10 80 10 80 89 19 49 26 F9 FF 
    1910   00:AAFA  10 80 F0 FF 40 20 20 40 E0 7F 00 09 00 06 00 00 
    1911   00:AB0A                             defb 3,192,12,48,16,8,38,100,41,148,72,18,74,82,127,254,32,4,63,252,8,16,16,8,31,248,4,32,2,64,1,128
    1911   00:AB0A  03 C0 0C 30 10 08 26 64 29 94 48 12 4A 52 7F FE 
    1911   00:AB1A  20 04 3F FC 08 10 10 08 1F F8 04 20 02 40 01 80 
    1912   00:AB2A                             defb 0,240,3,12,4,2,9,153,10,101,146,4,146,148,159,255,8,1,15,255,2,4,4,2,7,254,1,8,0,144,0,96
    1912   00:AB2A  00 F0 03 0C 04 02 09 99 0A 65 92 04 92 94 9F FF 
    1912   00:AB3A  08 01 0F FF 02 04 04 02 07 FE 01 08 00 90 00 60 
    1913   00:AB4A                             defb 0,60,0,195,129,0,66,102,66,153,36,129,36,165,231,255,66,0,195,255,0,129,129,0,129,255,0,66,0,36,0,24
    1913   00:AB4A  00 3C 00 C3 81 00 42 66 42 99 24 81 24 A5 E7 FF 
    1913   00:AB5A  42 00 C3 FF 00 81 81 00 81 FF 00 42 00 24 00 18 
    1914   00:AB6A                             defb 0,15,192,48,32,64,144,153,80,166,73,32,73,41,249,255,16,128,240,255,64,32,32,64,224,127,128,16,0,9,0,6
    1914   00:AB6A  00 0F C0 30 20 40 90 99 50 A6 49 20 49 29 F9 FF 
    1914   00:AB7A  10 80 F0 FF 40 20 20 40 E0 7F 80 10 00 09 00 06 
    1915   00:AB8A                             defb 3,192,12,48,16,8,38,100,41,148,74,82,72,18,127,254,32,4,63,252,8,16,16,8,31,248,16,8,8,16,7,224
    1915   00:AB8A  03 C0 0C 30 10 08 26 64 29 94 4A 52 48 12 7F FE 
    1915   00:AB9A  20 04 3F FC 08 10 10 08 1F F8 10 08 08 10 07 E0 
    1916   00:ABAA                             defb 0,240,3,12,4,2,9,153,10,101,146,148,146,4,159,255,8,1,15,255,2,4,4,2,7,254,4,2,2,4,1,248
    1916   00:ABAA  00 F0 03 0C 04 02 09 99 0A 65 92 94 92 04 9F FF 
    1916   00:ABBA  08 01 0F FF 02 04 04 02 07 FE 04 02 02 04 01 F8 
    1917   00:ABCA                             defb 0,60,0,195,129,0,66,102,66,153,36,165,36,129,231,255,66,0,195,255,0,129,129,0,129,255,129,0,0,129,0,126
    1917   00:ABCA  00 3C 00 C3 81 00 42 66 42 99 24 A5 24 81 E7 FF 
    1917   00:ABDA  42 00 C3 FF 00 81 81 00 81 FF 81 00 00 81 00 7E 
    1918   00:ABEA                             defb 0,15,192,48,32,64,144,153,80,166,73,41,73,32,249,255,16,128,240,255,64,32,32,64,224,127,32,64,64,32,128,31
    1918   00:ABEA  00 0F C0 30 20 40 90 99 50 A6 49 29 49 20 F9 FF 
    1918   00:ABFA  10 80 F0 FF 40 20 20 40 E0 7F 20 40 40 20 80 1F 
    1919   00:AC0A                             defb 1,128,3,64,2,64,1,128,1,0,97,134,223,253,149,169,97,6,1,128,1,0,1,128,1,128,3,64,2,64,1,128
    1919   00:AC0A  01 80 03 40 02 40 01 80 01 00 61 86 DF FD 95 A9 
    1919   00:AC1A  61 06 01 80 01 00 01 80 01 80 03 40 02 40 01 80 
    1920   00:AC2A                             defb 0,96,0,208,0,144,0,96,0,64,152,97,119,255,101,106,152,65,0,96,0,64,0,96,0,96,0,208,0,144,0,96
    1920   00:AC2A  00 60 00 D0 00 90 00 60 00 40 98 61 77 FF 65 6A 
    1920   00:AC3A  98 41 00 60 00 40 00 60 00 60 00 D0 00 90 00 60 
    1921   00:AC4A                             defb 0,24,0,52,0,36,0,24,0,16,102,24,221,255,153,90,102,16,0,24,0,16,0,24,0,24,0,52,0,36,0,24
    1921   00:AC4A  00 18 00 34 00 24 00 18 00 10 66 18 DD FF 99 5A 
    1921   00:AC5A  66 10 00 18 00 10 00 18 00 18 00 34 00 24 00 18 
    1922   00:AC6A                             defb 0,6,0,13,0,9,0,6,0,4,25,134,247,127,166,86,25,132,0,6,0,4,0,6,0,6,0,13,0,9,0,6
    1922   00:AC6A  00 06 00 0D 00 09 00 06 00 04 19 86 F7 7F A6 56 
    1922   00:AC7A  19 84 00 06 00 04 00 06 00 06 00 0D 00 09 00 06 
    1923   00:AC8A                             defb 6,96,13,208,9,144,7,224,1,0,25,152,55,244,37,164,25,24,1,128,1,0,1,128,7,224,13,208,9,144,6,96
    1923   00:AC8A  06 60 0D D0 09 90 07 E0 01 00 19 98 37 F4 25 A4 
    1923   00:AC9A  19 18 01 80 01 00 01 80 07 E0 0D D0 09 90 06 60 
    1924   00:ACAA                             defb 1,152,3,116,2,100,1,248,0,64,6,102,13,253,9,105,6,70,0,96,0,64,0,96,1,248,3,116,2,100,1,152
    1924   00:ACAA  01 98 03 74 02 64 01 F8 00 40 06 66 0D FD 09 69 
    1924   00:ACBA  06 46 00 60 00 40 00 60 01 F8 03 74 02 64 01 98 
    1925   00:ACCA                             defb 0,102,0,221,0,153,0,126,0,16,129,153,67,127,66,90,129,145,0,24,0,16,0,24,0,126,0,221,0,153,0,102
    1925   00:ACCA  00 66 00 DD 00 99 00 7E 00 10 81 99 43 7F 42 5A 
    1925   00:ACDA  81 91 00 18 00 10 00 18 00 7E 00 DD 00 99 00 66 
    1926   00:ACEA                             defb 128,25,64,55,64,38,128,31,0,4,96,102,208,223,144,150,96,100,0,6,0,4,0,6,128,31,64,55,64,38,128,25
    1926   00:ACEA  80 19 40 37 40 26 80 1F 00 04 60 66 D0 DF 90 96 
    1926   00:ACFA  60 64 00 06 00 04 00 06 80 1F 40 37 40 26 80 19 
    1927   00:AD0A                             defb 25,152,55,244,37,36,25,152,1,0,1,128,3,64,2,64,1,128,1,128,1,0,1,128,25,152,55,244,37,100,24,24
    1927   00:AD0A  19 98 37 F4 25 24 19 98 01 00 01 80 03 40 02 40 
    1927   00:AD1A  01 80 01 80 01 00 01 80 19 98 37 F4 25 64 18 18 
    1928   00:AD2A                             defb 6,102,13,253,9,73,6,102,0,64,0,96,0,208,0,144,0,96,0,96,0,64,0,96,6,102,13,253,9,89,6,6
    1928   00:AD2A  06 66 0D FD 09 49 06 66 00 40 00 60 00 D0 00 90 
    1928   00:AD3A  00 60 00 60 00 40 00 60 06 66 0D FD 09 59 06 06 
    1929   00:AD4A                             defb 129,153,67,127,66,82,129,153,0,16,0,24,0,52,0,36,0,24,0,24,0,16,0,24,129,153,67,127,66,86,129,129
    1929   00:AD4A  81 99 43 7F 42 52 81 99 00 10 00 18 00 34 00 24 
    1929   00:AD5A  00 18 00 18 00 10 00 18 81 99 43 7F 42 56 81 81 
    1930   00:AD6A                             defb 96,102,208,223,144,148,96,102,0,4,0,6,0,13,0,9,0,6,0,6,0,4,0,6,96,102,208,223,144,149,96,96
    1930   00:AD6A  60 66 D0 DF 90 94 60 66 00 04 00 06 00 0D 00 09 
    1930   00:AD7A  00 06 00 06 00 04 00 06 60 66 D0 DF 90 95 60 60 
    1931   00:AD8A                             defb 6,96,13,208,9,144,7,224,1,0,25,152,55,244,37,164,25,24,1,128,1,0,1,128,7,224,13,208,9,144,6,96
    1931   00:AD8A  06 60 0D D0 09 90 07 E0 01 00 19 98 37 F4 25 A4 
    1931   00:AD9A  19 18 01 80 01 00 01 80 07 E0 0D D0 09 90 06 60 
    1932   00:ADAA                             defb 1,152,3,116,2,100,1,248,0,64,6,102,13,253,9,105,6,70,0,96,0,64,0,96,1,248,3,116,2,100,1,152
    1932   00:ADAA  01 98 03 74 02 64 01 F8 00 40 06 66 0D FD 09 69 
    1932   00:ADBA  06 46 00 60 00 40 00 60 01 F8 03 74 02 64 01 98 
    1933   00:ADCA                             defb 0,102,0,221,0,153,0,126,0,16,129,153,67,127,66,90,129,145,0,24,0,16,0,24,0,126,0,221,0,153,0,102
    1933   00:ADCA  00 66 00 DD 00 99 00 7E 00 10 81 99 43 7F 42 5A 
    1933   00:ADDA  81 91 00 18 00 10 00 18 00 7E 00 DD 00 99 00 66 
    1934   00:ADEA                             defb 128,25,64,55,64,38,128,31,0,4,96,102,208,223,144,150,96,100,0,6,0,4,0,6,128,31,64,55,64,38,128,25
    1934   00:ADEA  80 19 40 37 40 26 80 1F 00 04 60 66 D0 DF 90 96 
    1934   00:ADFA  60 64 00 06 00 04 00 06 80 1F 40 37 40 26 80 19 
    1935   00:AE0A                             defb 15,224,23,240,19,248,0,0,126,120,1,144,62,96,0,12,15,176,58,192,68,252,130,194,146,152,162,164,68,52,56,24
    1935   00:AE0A  0F E0 17 F0 13 F8 00 00 7E 78 01 90 3E 60 00 0C 
    1935   00:AE1A  0F B0 3A C0 44 FC 82 C2 92 98 A2 A4 44 34 38 18 
    1936   00:AE2A                             defb 3,248,5,252,4,254,0,0,31,158,0,100,15,152,0,3,3,236,14,176,17,63,160,176,36,166,40,169,17,13,14,6
    1936   00:AE2A  03 F8 05 FC 04 FE 00 00 1F 9E 00 64 0F 98 00 03 
    1936   00:AE3A  03 EC 0E B0 11 3F A0 B0 24 A6 28 A9 11 0D 0E 06 
    1937   00:AE4A                             defb 0,254,1,127,129,63,0,0,135,231,0,25,3,230,192,0,0,251,3,172,196,79,40,44,137,41,74,42,68,67,131,129
    1937   00:AE4A  00 FE 01 7F 81 3F 00 00 87 E7 00 19 03 E6 C0 00 
    1937   00:AE5A  00 FB 03 AC C4 4F 28 2C 89 29 4A 2A 44 43 83 81 
    1938   00:AE6A                             defb 128,63,192,95,224,79,0,0,225,249,64,6,128,249,48,0,192,62,0,235,241,19,10,11,98,74,146,138,209,16,96,224
    1938   00:AE6A  80 3F C0 5F E0 4F 00 00 E1 F9 40 06 80 F9 30 00 
    1938   00:AE7A  C0 3E 00 EB F1 13 0A 0B 62 4A 92 8A D1 10 60 E0 
    1939   00:AE8A                             defb 15,224,23,240,19,248,0,0,126,120,1,144,62,96,0,12,15,176,58,192,68,252,162,194,146,152,130,180,68,36,56,24
    1939   00:AE8A  0F E0 17 F0 13 F8 00 00 7E 78 01 90 3E 60 00 0C 
    1939   00:AE9A  0F B0 3A C0 44 FC A2 C2 92 98 82 B4 44 24 38 18 
    1940   00:AEAA                             defb 3,248,5,252,4,254,0,0,31,158,0,100,15,152,0,3,3,236,14,176,17,63,168,176,36,166,32,173,17,9,14,6
    1940   00:AEAA  03 F8 05 FC 04 FE 00 00 1F 9E 00 64 0F 98 00 03 
    1940   00:AEBA  03 EC 0E B0 11 3F A8 B0 24 A6 20 AD 11 09 0E 06 
    1941   00:AECA                             defb 0,254,1,127,129,63,0,0,135,231,0,25,3,230,192,0,0,251,3,172,196,79,42,44,137,41,72,43,68,66,131,129
    1941   00:AECA  00 FE 01 7F 81 3F 00 00 87 E7 00 19 03 E6 C0 00 
    1941   00:AEDA  00 FB 03 AC C4 4F 2A 2C 89 29 48 2B 44 42 83 81 
    1942   00:AEEA                             defb 128,63,192,95,224,79,0,0,225,249,64,6,128,249,48,0,192,62,0,235,241,19,10,139,98,74,210,10,145,16,96,224
    1942   00:AEEA  80 3F C0 5F E0 4F 00 00 E1 F9 40 06 80 F9 30 00 
    1942   00:AEFA  C0 3E 00 EB F1 13 0A 8B 62 4A D2 0A 91 10 60 E0 
    1943   00:AF0A                             defb 15,224,23,240,19,248,0,0,126,120,1,144,62,96,0,12,15,176,58,192,68,252,138,194,146,152,130,172,68,36,56,24
    1943   00:AF0A  0F E0 17 F0 13 F8 00 00 7E 78 01 90 3E 60 00 0C 
    1943   00:AF1A  0F B0 3A C0 44 FC 8A C2 92 98 82 AC 44 24 38 18 
    1944   00:AF2A                             defb 3,248,5,252,4,254,0,0,31,158,0,100,15,152,0,3,3,236,14,176,17,63,162,176,36,166,32,171,17,9,14,6
    1944   00:AF2A  03 F8 05 FC 04 FE 00 00 1F 9E 00 64 0F 98 00 03 
    1944   00:AF3A  03 EC 0E B0 11 3F A2 B0 24 A6 20 AB 11 09 0E 06 
    1945   00:AF4A                             defb 0,254,1,127,129,63,0,0,135,231,0,25,3,230,192,0,0,251,3,172,196,79,40,172,137,41,200,42,68,66,131,129
    1945   00:AF4A  00 FE 01 7F 81 3F 00 00 87 E7 00 19 03 E6 C0 00 
    1945   00:AF5A  00 FB 03 AC C4 4F 28 AC 89 29 C8 2A 44 42 83 81 
    1946   00:AF6A                             defb 128,63,192,95,224,79,0,0,225,249,64,6,128,249,48,0,192,62,0,235,241,19,10,43,98,74,178,10,145,16,96,224
    1946   00:AF6A  80 3F C0 5F E0 4F 00 00 E1 F9 40 06 80 F9 30 00 
    1946   00:AF7A  C0 3E 00 EB F1 13 0A 2B 62 4A B2 0A 91 10 60 E0 
    1947   00:AF8A                             defb 15,224,23,240,19,248,0,0,126,120,1,144,62,96,0,12,15,176,58,192,68,252,130,194,146,152,138,164,68,44,56,24
    1947   00:AF8A  0F E0 17 F0 13 F8 00 00 7E 78 01 90 3E 60 00 0C 
    1947   00:AF9A  0F B0 3A C0 44 FC 82 C2 92 98 8A A4 44 2C 38 18 
    1948   00:AFAA                             defb 3,248,5,252,4,254,0,0,31,158,0,100,15,152,0,3,3,236,14,176,17,63,160,176,36,166,34,169,17,11,14,6
    1948   00:AFAA  03 F8 05 FC 04 FE 00 00 1F 9E 00 64 0F 98 00 03 
    1948   00:AFBA  03 EC 0E B0 11 3F A0 B0 24 A6 22 A9 11 0B 0E 06 
    1949   00:AFCA                             defb 0,254,1,127,129,63,0,0,135,231,0,25,3,230,192,0,0,251,3,172,196,79,40,44,137,41,72,170,196,66,131,129
    1949   00:AFCA  00 FE 01 7F 81 3F 00 00 87 E7 00 19 03 E6 C0 00 
    1949   00:AFDA  00 FB 03 AC C4 4F 28 2C 89 29 48 AA C4 42 83 81 
    1950   00:AFEA                             defb 128,63,192,95,224,79,0,0,225,249,64,6,128,249,48,0,192,62,0,235,241,19,10,11,98,74,146,42,177,16,96,224
    1950   00:AFEA  80 3F C0 5F E0 4F 00 00 E1 F9 40 06 80 F9 30 00 
    1950   00:AFFA  C0 3E 00 EB F1 13 0A 0B 62 4A 92 2A B1 10 60 E0 
    1951   00:B00A                             defb 0,0,32,32,47,160,31,192,54,224,50,96,127,240,112,112,63,224,16,64,32,32,64,16,128,8,192,24,192,24,192,24
    1951   00:B00A  00 00 20 20 2F A0 1F C0 36 E0 32 60 7F F0 70 70 
    1951   00:B01A  3F E0 10 40 20 20 40 10 80 08 C0 18 C0 18 C0 18 
    1952   00:B02A                             defb 0,0,8,8,11,232,7,240,13,184,12,152,31,252,28,28,15,248,4,16,8,8,16,4,32,2,48,6,48,6,48,6
    1952   00:B02A  00 00 08 08 0B E8 07 F0 0D B8 0C 98 1F FC 1C 1C 
    1952   00:B03A  0F F8 04 10 08 08 10 04 20 02 30 06 30 06 30 06 
    1953   00:B04A                             defb 0,0,2,2,2,250,1,252,3,110,3,38,7,255,7,7,3,254,1,4,2,2,4,1,136,0,140,1,140,1,140,1
    1953   00:B04A  00 00 02 02 02 FA 01 FC 03 6E 03 26 07 FF 07 07 
    1953   00:B05A  03 FE 01 04 02 02 04 01 88 00 8C 01 8C 01 8C 01 
    1954   00:B06A                             defb 0,0,128,128,128,190,0,127,128,219,128,201,193,255,193,193,128,255,0,65,128,128,65,0,34,0,99,0,99,0,99,0
    1954   00:B06A  00 00 80 80 80 BE 00 7F 80 DB 80 C9 C1 FF C1 C1 
    1954   00:B07A  80 FF 00 41 80 80 41 00 22 00 63 00 63 00 63 00 
    1955   00:B08A                             defb 16,16,23,208,15,224,27,112,25,48,63,248,56,56,31,240,8,32,16,16,32,8,64,4,128,12,192,12,192,12,192,0
    1955   00:B08A  10 10 17 D0 0F E0 1B 70 19 30 3F F8 38 38 1F F0 
    1955   00:B09A  08 20 10 10 20 08 40 04 80 0C C0 0C C0 0C C0 00 
    1956   00:B0AA                             defb 4,4,5,244,3,248,6,220,6,76,15,254,14,14,7,252,2,8,4,4,8,2,16,1,32,3,48,3,48,3,48,0
    1956   00:B0AA  04 04 05 F4 03 F8 06 DC 06 4C 0F FE 0E 0E 07 FC 
    1956   00:B0BA  02 08 04 04 08 02 10 01 20 03 30 03 30 03 30 00 
    1957   00:B0CA                             defb 1,1,1,125,0,254,1,183,1,147,131,255,131,131,1,255,0,130,1,1,130,0,68,0,200,0,204,0,204,0,12,0
    1957   00:B0CA  01 01 01 7D 00 FE 01 B7 01 93 83 FF 83 83 01 FF 
    1957   00:B0DA  00 82 01 01 82 00 44 00 C8 00 CC 00 CC 00 0C 00 
    1958   00:B0EA                             defb 64,64,64,95,128,63,192,109,192,100,224,255,224,224,192,127,128,32,64,64,32,128,17,0,50,0,51,0,51,0,3,0
    1958   00:B0EA  40 40 40 5F 80 3F C0 6D C0 64 E0 FF E0 E0 C0 7F 
    1958   00:B0FA  80 20 40 40 20 80 11 00 32 00 33 00 33 00 03 00 
    1959   00:B10A                             defb 8,8,11,232,7,240,13,184,12,152,31,252,28,28,15,248,4,16,8,8,16,4,32,2,48,1,48,3,48,3,0,3
    1959   00:B10A  08 08 0B E8 07 F0 0D B8 0C 98 1F FC 1C 1C 0F F8 
    1959   00:B11A  04 10 08 08 10 04 20 02 30 01 30 03 30 03 00 03 
    1960   00:B12A                             defb 2,2,2,250,1,252,3,110,3,38,7,255,7,7,3,254,1,4,2,2,4,1,136,0,76,0,204,0,204,0,192,0
    1960   00:B12A  02 02 02 FA 01 FC 03 6E 03 26 07 FF 07 07 03 FE 
    1960   00:B13A  01 04 02 02 04 01 88 00 4C 00 CC 00 CC 00 C0 00 
    1961   00:B14A                             defb 128,128,128,190,0,127,128,219,128,201,193,255,193,193,128,255,0,65,128,128,65,0,34,0,19,0,51,0,51,0,48,0
    1961   00:B14A  80 80 80 BE 00 7F 80 DB 80 C9 C1 FF C1 C1 80 FF 
    1961   00:B15A  00 41 80 80 41 00 22 00 13 00 33 00 33 00 30 00 
    1962   00:B16A                             defb 32,32,160,47,192,31,224,54,96,50,240,127,112,112,224,63,64,16,32,32,16,64,8,128,4,192,12,192,12,192,12,0
    1962   00:B16A  20 20 A0 2F C0 1F E0 36 60 32 F0 7F 70 70 E0 3F 
    1962   00:B17A  40 10 20 20 10 40 08 80 04 C0 0C C0 0C C0 0C 00 
    1963   00:B18A                             defb 8,8,11,232,7,240,13,184,12,152,31,252,28,28,15,248,4,16,4,8,4,4,4,2,4,1,6,3,6,3,6,3
    1963   00:B18A  08 08 0B E8 07 F0 0D B8 0C 98 1F FC 1C 1C 0F F8 
    1963   00:B19A  04 10 04 08 04 04 04 02 04 01 06 03 06 03 06 03 
    1964   00:B1AA                             defb 2,2,2,250,1,252,3,110,3,38,7,255,7,7,3,254,1,4,1,2,1,1,129,0,65,0,193,128,193,128,193,128
    1964   00:B1AA  02 02 02 FA 01 FC 03 6E 03 26 07 FF 07 07 03 FE 
    1964   00:B1BA  01 04 01 02 01 01 81 00 41 00 C1 80 C1 80 C1 80 
    1965   00:B1CA                             defb 128,128,128,190,0,127,128,219,128,201,193,255,193,193,128,255,0,65,128,64,64,64,32,64,16,64,48,96,48,96,48,96
    1965   00:B1CA  80 80 80 BE 00 7F 80 DB 80 C9 C1 FF C1 C1 80 FF 
    1965   00:B1DA  00 41 80 40 40 40 20 40 10 40 30 60 30 60 30 60 
    1966   00:B1EA                             defb 32,32,160,47,192,31,224,54,96,50,240,127,112,112,224,63,64,16,32,16,16,16,8,16,4,16,12,24,12,24,12,24
    1966   00:B1EA  20 20 A0 2F C0 1F E0 36 60 32 F0 7F 70 70 E0 3F 
    1966   00:B1FA  40 10 20 10 10 10 08 10 04 10 0C 18 0C 18 0C 18 
    1967   00:B20A                             defb 0,0,4,4,5,244,3,248,6,220,6,76,15,254,14,14,7,252,2,8,4,4,8,2,16,1,24,3,24,3,24,3
    1967   00:B20A  00 00 04 04 05 F4 03 F8 06 DC 06 4C 0F FE 0E 0E 
    1967   00:B21A  07 FC 02 08 04 04 08 02 10 01 18 03 18 03 18 03 
    1968   00:B22A                             defb 0,0,1,1,1,125,0,254,1,183,1,147,131,255,131,131,1,255,0,130,1,1,130,0,68,0,198,0,198,0,198,0
    1968   00:B22A  00 00 01 01 01 7D 00 FE 01 B7 01 93 83 FF 83 83 
    1968   00:B23A  01 FF 00 82 01 01 82 00 44 00 C6 00 C6 00 C6 00 
    1969   00:B24A                             defb 0,0,64,64,64,95,128,63,192,109,192,100,224,255,224,224,192,127,128,32,64,64,32,128,17,0,49,128,49,128,49,128
    1969   00:B24A  00 00 40 40 40 5F 80 3F C0 6D C0 64 E0 FF E0 E0 
    1969   00:B25A  C0 7F 80 20 40 40 20 80 11 00 31 80 31 80 31 80 
    1970   00:B26A                             defb 0,0,16,16,208,23,224,15,112,27,48,25,248,63,56,56,240,31,32,8,16,16,8,32,4,64,12,96,12,96,12,96
    1970   00:B26A  00 00 10 10 D0 17 E0 0F 70 1B 30 19 F8 3F 38 38 
    1970   00:B27A  F0 1F 20 08 10 10 08 20 04 40 0C 60 0C 60 0C 60 
    1971   00:B28A                             defb 0,0,4,4,5,244,3,248,6,220,6,76,15,254,14,14,7,252,6,8,24,8,32,8,64,8,96,24,96,24,96,24
    1971   00:B28A  00 00 04 04 05 F4 03 F8 06 DC 06 4C 0F FE 0E 0E 
    1971   00:B29A  07 FC 06 08 18 08 20 08 40 08 60 18 60 18 60 18 
    1972   00:B2AA                             defb 0,0,1,1,1,125,0,254,1,183,1,147,131,255,131,131,1,255,1,130,6,2,8,2,16,2,24,6,24,6,24,6
    1972   00:B2AA  00 00 01 01 01 7D 00 FE 01 B7 01 93 83 FF 83 83 
    1972   00:B2BA  01 FF 01 82 06 02 08 02 10 02 18 06 18 06 18 06 
    1973   00:B2CA                             defb 0,0,64,64,64,95,128,63,192,109,192,100,224,255,224,224,192,127,128,96,129,128,130,0,132,0,134,1,134,1,134,1
    1973   00:B2CA  00 00 40 40 40 5F 80 3F C0 6D C0 64 E0 FF E0 E0 
    1973   00:B2DA  C0 7F 80 60 81 80 82 00 84 00 86 01 86 01 86 01 
    1974   00:B2EA                             defb 0,0,16,16,208,23,224,15,112,27,48,25,248,63,56,56,240,31,32,24,32,96,32,128,33,0,97,128,97,128,97,128
    1974   00:B2EA  00 00 10 10 D0 17 E0 0F 70 1B 30 19 F8 3F 38 38 
    1974   00:B2FA  F0 1F 20 18 20 60 20 80 21 00 61 80 61 80 61 80 
    1975   00:B30A                             defb 7,224,24,120,32,52,64,18,64,14,128,7,128,5,255,255,176,195,67,14,44,60,16,216,11,16,4,32,2,192,1,128
    1975   00:B30A  07 E0 18 78 20 34 40 12 40 0E 80 07 80 05 FF FF 
    1975   00:B31A  B0 C3 43 0E 2C 3C 10 D8 0B 10 04 20 02 C0 01 80 
    1976   00:B32A                             defb 1,248,6,30,8,13,144,4,144,3,224,1,96,1,255,255,236,48,144,195,11,15,4,54,2,196,1,8,0,176,0,96
    1976   00:B32A  01 F8 06 1E 08 0D 90 04 90 03 E0 01 60 01 FF FF 
    1976   00:B33A  EC 30 90 C3 0B 0F 04 36 02 C4 01 08 00 B0 00 60 
    1977   00:B34A                             defb 0,126,129,135,66,3,36,1,228,0,120,0,88,0,255,255,59,12,228,48,194,195,129,13,0,177,0,66,0,44,0,24
    1977   00:B34A  00 7E 81 87 42 03 24 01 E4 00 78 00 58 00 FF FF 
    1977   00:B35A  3B 0C E4 30 C2 C3 81 0D 00 B1 00 42 00 2C 00 18 
    1978   00:B36A                             defb 128,31,224,97,208,128,73,0,57,0,30,0,22,0,255,255,14,195,57,12,240,176,96,67,64,44,128,16,0,11,0,6
    1978   00:B36A  80 1F E0 61 D0 80 49 00 39 00 1E 00 16 00 FF FF 
    1978   00:B37A  0E C3 39 0C F0 B0 60 43 40 2C 80 10 00 0B 00 06 
    1979   00:B38A                             defb 7,224,24,152,32,68,64,34,64,34,128,17,128,17,255,255,152,97,97,134,38,28,24,120,9,176,6,32,2,64,1,128
    1979   00:B38A  07 E0 18 98 20 44 40 22 40 22 80 11 80 11 FF FF 
    1979   00:B39A  98 61 61 86 26 1C 18 78 09 B0 06 20 02 40 01 80 
    1980   00:B3AA                             defb 1,248,6,38,8,17,144,8,144,8,96,4,96,4,255,255,102,24,152,97,9,135,6,30,2,108,1,136,0,144,0,96
    1980   00:B3AA  01 F8 06 26 08 11 90 08 90 08 60 04 60 04 FF FF 
    1980   00:B3BA  66 18 98 61 09 87 06 1E 02 6C 01 88 00 90 00 60 
    1981   00:B3CA                             defb 0,126,129,137,66,4,36,2,36,2,24,1,24,1,255,255,25,134,102,24,194,97,129,135,0,155,0,98,0,36,0,24
    1981   00:B3CA  00 7E 81 89 42 04 24 02 24 02 18 01 18 01 FF FF 
    1981   00:B3DA  19 86 66 18 C2 61 81 87 00 9B 00 62 00 24 00 18 
    1982   00:B3EA                             defb 128,31,96,98,16,129,137,0,137,0,70,0,70,0,255,255,134,97,25,134,112,152,224,97,192,38,128,24,0,9,0,6
    1982   00:B3EA  80 1F 60 62 10 81 89 00 89 00 46 00 46 00 FF FF 
    1982   00:B3FA  86 61 19 86 70 98 E0 61 C0 26 80 18 00 09 00 06 
    1983   00:B40A                             defb 7,224,24,152,32,132,64,130,64,66,128,65,128,65,255,255,140,49,112,194,35,12,28,56,8,240,7,96,2,64,1,128
    1983   00:B40A  07 E0 18 98 20 84 40 82 40 42 80 41 80 41 FF FF 
    1983   00:B41A  8C 31 70 C2 23 0C 1C 38 08 F0 07 60 02 40 01 80 
    1984   00:B42A                             defb 1,248,6,38,8,33,144,32,144,16,96,16,96,16,255,255,99,12,156,48,8,195,7,14,2,60,1,216,0,144,0,96
    1984   00:B42A  01 F8 06 26 08 21 90 20 90 10 60 10 60 10 FF FF 
    1984   00:B43A  63 0C 9C 30 08 C3 07 0E 02 3C 01 D8 00 90 00 60 
    1985   00:B44A                             defb 0,126,129,137,66,8,36,8,36,4,24,4,24,4,255,255,24,195,39,12,194,48,129,195,0,143,0,118,0,36,0,24
    1985   00:B44A  00 7E 81 89 42 08 24 08 24 04 18 04 18 04 FF FF 
    1985   00:B45A  18 C3 27 0C C2 30 81 C3 00 8F 00 76 00 24 00 18 
    1986   00:B46A                             defb 128,31,96,98,16,130,9,2,9,1,6,1,6,1,255,255,198,48,9,195,48,140,224,112,192,35,128,29,0,9,0,6
    1986   00:B46A  80 1F 60 62 10 82 09 02 09 01 06 01 06 01 FF FF 
    1986   00:B47A  C6 30 09 C3 30 8C E0 70 C0 23 80 1D 00 09 00 06 
    1987   00:B48A                             defb 7,224,25,24,33,4,65,2,66,2,130,1,130,1,255,255,134,25,88,98,33,132,22,24,8,112,5,224,2,192,1,128
    1987   00:B48A  07 E0 19 18 21 04 41 02 42 02 82 01 82 01 FF FF 
    1987   00:B49A  86 19 58 62 21 84 16 18 08 70 05 E0 02 C0 01 80 
    1988   00:B4AA                             defb 1,248,6,70,8,65,144,64,144,128,96,128,96,128,255,255,97,134,150,24,8,97,5,134,2,28,1,120,0,176,0,96
    1988   00:B4AA  01 F8 06 46 08 41 90 40 90 80 60 80 60 80 FF FF 
    1988   00:B4BA  61 86 96 18 08 61 05 86 02 1C 01 78 00 B0 00 60 
    1989   00:B4CA                             defb 0,126,129,145,66,16,36,16,36,32,24,32,24,32,255,255,152,97,37,134,66,24,129,97,0,135,0,94,0,44,0,24
    1989   00:B4CA  00 7E 81 91 42 10 24 10 24 20 18 20 18 20 FF FF 
    1989   00:B4DA  98 61 25 86 42 18 81 61 00 87 00 5E 00 2C 00 18 
    1990   00:B4EA                             defb 128,31,96,100,16,132,9,4,9,8,6,8,6,8,255,255,102,24,137,97,16,134,96,88,192,33,128,23,0,11,0,6
    1990   00:B4EA  80 1F 60 64 10 84 09 04 09 08 06 08 06 08 FF FF 
    1990   00:B4FA  66 18 89 61 10 86 60 58 C0 21 80 17 00 0B 00 06 
    1991   00:B50A                             defb 7,224,25,24,34,4,68,2,68,2,136,1,136,1,255,255,131,13,76,50,48,196,19,8,12,48,4,224,3,64,1,128
    1991   00:B50A  07 E0 19 18 22 04 44 02 44 02 88 01 88 01 FF FF 
    1991   00:B51A  83 0D 4C 32 30 C4 13 08 0C 30 04 E0 03 40 01 80 
    1992   00:B52A                             defb 1,248,6,70,8,129,145,0,145,0,98,0,98,0,255,255,96,195,147,12,12,49,4,194,3,12,1,56,0,208,0,96
    1992   00:B52A  01 F8 06 46 08 81 91 00 91 00 62 00 62 00 FF FF 
    1992   00:B53A  60 C3 93 0C 0C 31 04 C2 03 0C 01 38 00 D0 00 60 
    1993   00:B54A                             defb 0,126,129,145,66,32,36,64,36,64,24,128,24,128,255,255,216,48,36,195,67,12,129,48,0,195,0,78,0,52,0,24
    1993   00:B54A  00 7E 81 91 42 20 24 40 24 40 18 80 18 80 FF FF 
    1993   00:B55A  D8 30 24 C3 43 0C 81 30 00 C3 00 4E 00 34 00 18 
    1994   00:B56A                             defb 128,31,96,100,16,136,9,16,9,16,6,32,6,32,255,255,54,12,201,48,16,195,32,76,192,48,128,19,0,13,0,6
    1994   00:B56A  80 1F 60 64 10 88 09 10 09 10 06 20 06 20 FF FF 
    1994   00:B57A  36 0C C9 30 10 C3 20 4C C0 30 80 13 00 0D 00 06 
    1995   00:B58A                             defb 7,224,30,24,40,4,72,2,112,2,224,1,160,1,255,255,129,135,70,30,56,108,17,136,14,16,4,96,3,192,1,128
    1995   00:B58A  07 E0 1E 18 28 04 48 02 70 02 E0 01 A0 01 FF FF 
    1995   00:B59A  81 87 46 1E 38 6C 11 88 0E 10 04 60 03 C0 01 80 
    1996   00:B5AA                             defb 1,248,7,134,10,1,146,0,156,0,120,0,104,0,255,255,224,97,145,135,14,27,4,98,3,132,1,24,0,240,0,96
    1996   00:B5AA  01 F8 07 86 0A 01 92 00 9C 00 78 00 68 00 FF FF 
    1996   00:B5BA  E0 61 91 87 0E 1B 04 62 03 84 01 18 00 F0 00 60 
    1997   00:B5CA                             defb 0,126,129,225,66,128,36,128,39,0,30,0,26,0,255,255,120,24,228,97,195,134,129,24,0,225,0,70,0,60,0,24
    1997   00:B5CA  00 7E 81 E1 42 80 24 80 27 00 1E 00 1A 00 FF FF 
    1997   00:B5DA  78 18 E4 61 C3 86 81 18 00 E1 00 46 00 3C 00 18 
    1998   00:B5EA                             defb 128,31,96,120,16,160,9,32,9,192,7,128,6,128,255,255,30,6,121,24,176,225,32,70,64,56,128,17,0,15,0,6
    1998   00:B5EA  80 1F 60 78 10 A0 09 20 09 C0 07 80 06 80 FF FF 
    1998   00:B5FA  1E 06 79 18 B0 E1 20 46 40 38 80 11 00 0F 00 06 
    1999   00:B60A                             defb 0,0,1,128,2,64,3,60,0,102,0,114,31,122,32,126,80,60,64,64,80,72,88,92,77,72,32,128,31,0,0,0
    1999   00:B60A  00 00 01 80 02 40 03 3C 00 66 00 72 1F 7A 20 7E 
    1999   00:B61A  50 3C 40 40 50 48 58 5C 4D 48 20 80 1F 00 00 00 
    2000   00:B62A                             defb 0,0,0,96,0,144,0,207,128,25,128,28,135,222,136,31,20,15,16,16,20,18,22,23,19,82,8,32,7,192,0,0
    2000   00:B62A  00 00 00 60 00 90 00 CF 80 19 80 1C 87 DE 88 1F 
    2000   00:B63A  14 0F 10 10 14 12 16 17 13 52 08 20 07 C0 00 00 
    2001   00:B64A                             defb 0,0,0,24,0,36,192,51,96,6,32,7,161,247,226,7,197,3,4,4,133,4,197,133,132,212,2,8,1,240,0,0
    2001   00:B64A  00 00 00 18 00 24 C0 33 60 06 20 07 A1 F7 E2 07 
    2001   00:B65A  C5 03 04 04 85 04 C5 85 84 D4 02 08 01 F0 00 00 
    2002   00:B66A                             defb 0,0,0,6,0,9,240,12,152,1,200,1,232,125,248,129,241,64,1,1,33,65,113,97,33,53,0,130,0,124,0,0
    2002   00:B66A  00 00 00 06 00 09 F0 0C 98 01 C8 01 E8 7D F8 81 
    2002   00:B67A  F1 40 01 01 21 41 71 61 21 35 00 82 00 7C 00 00 
    2003   00:B68A                             defb 1,224,3,48,3,144,3,192,3,192,1,152,0,36,7,52,8,152,16,68,20,82,18,90,8,140,7,0,0,0,0,0
    2003   00:B68A  01 E0 03 30 03 90 03 C0 03 C0 01 98 00 24 07 34 
    2003   00:B69A  08 98 10 44 14 52 12 5A 08 8C 07 00 00 00 00 00 
    2004   00:B6AA                             defb 0,120,0,204,0,228,0,240,0,240,0,102,0,9,1,205,2,38,4,17,133,20,132,150,2,35,1,192,0,0,0,0
    2004   00:B6AA  00 78 00 CC 00 E4 00 F0 00 F0 00 66 00 09 01 CD 
    2004   00:B6BA  02 26 04 11 85 14 84 96 02 23 01 C0 00 00 00 00 
    2005   00:B6CA                             defb 0,30,0,51,0,57,0,60,0,60,128,25,64,2,64,115,128,137,65,4,33,69,161,37,192,136,0,112,0,0,0,0
    2005   00:B6CA  00 1E 00 33 00 39 00 3C 00 3C 80 19 40 02 40 73 
    2005   00:B6DA  80 89 41 04 21 45 A1 25 C0 88 00 70 00 00 00 00 
    2006   00:B6EA                             defb 128,7,192,12,64,14,0,15,0,15,96,6,144,0,208,28,96,34,16,65,72,81,104,73,48,34,0,28,0,0,0,0
    2006   00:B6EA  80 07 C0 0C 40 0E 00 0F 00 0F 60 06 90 00 D0 1C 
    2006   00:B6FA  60 22 10 41 48 51 68 49 30 22 00 1C 00 00 00 00 
    2007   00:B70A                             defb 0,192,1,32,1,160,0,208,0,56,0,16,0,14,6,51,9,57,16,189,16,191,9,30,6,0,0,0,0,0,0,0
    2007   00:B70A  00 C0 01 20 01 A0 00 D0 00 38 00 10 00 0E 06 33 
    2007   00:B71A  09 39 10 BD 10 BF 09 1E 06 00 00 00 00 00 00 00 
    2008   00:B72A                             defb 0,48,0,72,0,104,0,52,0,14,0,4,128,3,193,140,66,78,68,47,196,47,130,71,1,128,0,0,0,0,0,0
    2008   00:B72A  00 30 00 48 00 68 00 34 00 0E 00 04 80 03 C1 8C 
    2008   00:B73A  42 4E 44 2F C4 2F 82 47 01 80 00 00 00 00 00 00 
    2009   00:B74A                             defb 0,12,0,18,0,26,0,13,128,3,0,1,224,0,48,99,144,147,209,11,241,11,224,145,0,96,0,0,0,0,0,0
    2009   00:B74A  00 0C 00 12 00 1A 00 0D 80 03 00 01 E0 00 30 63 
    2009   00:B75A  90 93 D1 0B F1 0B E0 91 00 60 00 00 00 00 00 00 
    2010   00:B76A                             defb 0,3,128,4,128,6,64,3,224,0,64,0,56,0,204,24,228,36,244,66,252,66,120,36,0,24,0,0,0,0,0,0
    2010   00:B76A  00 03 80 04 80 06 40 03 E0 00 40 00 38 00 CC 18 
    2010   00:B77A  E4 24 F4 42 FC 42 78 24 00 18 00 00 00 00 00 00 
    2011   00:B78A                             defb 0,0,0,128,1,192,0,160,0,112,0,32,0,30,0,51,6,57,9,61,9,63,6,30,0,0,0,0,0,0,0,0
    2011   00:B78A  00 00 00 80 01 C0 00 A0 00 70 00 20 00 1E 00 33 
    2011   00:B79A  06 39 09 3D 09 3F 06 1E 00 00 00 00 00 00 00 00 
    2012   00:B7AA                             defb 0,0,0,32,0,112,0,40,0,28,0,8,128,7,192,12,65,142,66,79,194,79,129,135,0,0,0,0,0,0,0,0
    2012   00:B7AA  00 00 00 20 00 70 00 28 00 1C 00 08 80 07 C0 0C 
    2012   00:B7BA  41 8E 42 4F C2 4F 81 87 00 00 00 00 00 00 00 00 
    2013   00:B7CA                             defb 0,0,0,8,0,28,0,10,0,7,0,2,224,1,48,3,144,99,208,147,240,147,224,97,0,0,0,0,0,0,0,0
    2013   00:B7CA  00 00 00 08 00 1C 00 0A 00 07 00 02 E0 01 30 03 
    2013   00:B7DA  90 63 D0 93 F0 93 E0 61 00 00 00 00 00 00 00 00 
    2014   00:B7EA                             defb 0,0,0,2,0,7,128,2,192,1,128,0,120,0,204,0,228,24,244,36,252,36,120,24,0,0,0,0,0,0,0,0
    2014   00:B7EA  00 00 00 02 00 07 80 02 C0 01 80 00 78 00 CC 00 
    2014   00:B7FA  E4 18 F4 24 FC 24 78 18 00 00 00 00 00 00 00 00 
    2015   00:B80A                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,151,255
    2015   00:B80A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2015   00:B81A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 97 FF 
    2016   00:B82A                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,229,255
    2016   00:B82A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2016   00:B83A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 E5 FF 
    2017   00:B84A                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,249,127
    2017   00:B84A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2017   00:B85A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 F9 7F 
    2018   00:B86A                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,254,95
    2018   00:B86A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2018   00:B87A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 FE 5F 
    2019   00:B88A                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,151,255,0,0,75,254,0,0
    2019   00:B88A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2019   00:B89A  00 00 00 00 00 00 00 00 97 FF 00 00 4B FE 00 00 
    2020   00:B8AA                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,229,255,0,0,146,255,0,0
    2020   00:B8AA  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2020   00:B8BA  00 00 00 00 00 00 00 00 E5 FF 00 00 92 FF 00 00 
    2021   00:B8CA                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,249,127,0,0,228,191,0,0
    2021   00:B8CA  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2021   00:B8DA  00 00 00 00 00 00 00 00 F9 7F 00 00 E4 BF 00 00 
    2022   00:B8EA                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,254,95,0,0,249,47,0,0
    2022   00:B8EA  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2022   00:B8FA  00 00 00 00 00 00 00 00 FE 5F 00 00 F9 2F 00 00 
    2023   00:B90A                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,151,255,0,0,75,254,0,0,175,255,151,254,175,253,151,254
    2023   00:B90A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2023   00:B91A  97 FF 00 00 4B FE 00 00 AF FF 97 FE AF FD 97 FE 
    2024   00:B92A                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,229,255,0,0,146,255,0,0,235,255,165,255,107,255,165,255
    2024   00:B92A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2024   00:B93A  E5 FF 00 00 92 FF 00 00 EB FF A5 FF 6B FF A5 FF 
    2025   00:B94A                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,249,127,0,0,228,191,0,0,250,255,233,127,218,255,233,127
    2025   00:B94A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2025   00:B95A  F9 7F 00 00 E4 BF 00 00 FA FF E9 7F DA FF E9 7F 
    2026   00:B96A                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,254,95,0,0,249,47,0,0,254,191,250,95,246,191,250,95
    2026   00:B96A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2026   00:B97A  FE 5F 00 00 F9 2F 00 00 FE BF FA 5F F6 BF FA 5F 
    2027   00:B98A                             defb 0,0,0,0,0,0,0,0,0,0,151,255,0,0,75,254,0,0,175,255,151,254,175,253,151,254,175,253,151,254,175,253
    2027   00:B98A  00 00 00 00 00 00 00 00 00 00 97 FF 00 00 4B FE 
    2027   00:B99A  00 00 AF FF 97 FE AF FD 97 FE AF FD 97 FE AF FD 
    2028   00:B9AA                             defb 0,0,0,0,0,0,0,0,0,0,229,255,0,0,146,255,0,0,235,255,165,255,107,255,165,255,107,255,165,255,107,255
    2028   00:B9AA  00 00 00 00 00 00 00 00 00 00 E5 FF 00 00 92 FF 
    2028   00:B9BA  00 00 EB FF A5 FF 6B FF A5 FF 6B FF A5 FF 6B FF 
    2029   00:B9CA                             defb 0,0,0,0,0,0,0,0,0,0,249,127,0,0,228,191,0,0,250,255,233,127,218,255,233,127,218,255,233,127,218,255
    2029   00:B9CA  00 00 00 00 00 00 00 00 00 00 F9 7F 00 00 E4 BF 
    2029   00:B9DA  00 00 FA FF E9 7F DA FF E9 7F DA FF E9 7F DA FF 
    2030   00:B9EA                             defb 0,0,0,0,0,0,0,0,0,0,254,95,0,0,249,47,0,0,254,191,250,95,246,191,250,95,246,191,250,95,246,191
    2030   00:B9EA  00 00 00 00 00 00 00 00 00 00 FE 5F 00 00 F9 2F 
    2030   00:B9FA  00 00 FE BF FA 5F F6 BF FA 5F F6 BF FA 5F F6 BF 
    2031   00:BA0A                             defb 151,255,0,0,75,254,0,0,175,255,151,254,175,253,151,254,175,253,151,254,175,253,151,254,175,253,151,254,175,253,151,254
    2031   00:BA0A  97 FF 00 00 4B FE 00 00 AF FF 97 FE AF FD 97 FE 
    2031   00:BA1A  AF FD 97 FE AF FD 97 FE AF FD 97 FE AF FD 97 FE 
    2032   00:BA2A                             defb 229,255,0,0,146,255,0,0,235,255,165,255,107,255,165,255,107,255,165,255,107,255,165,255,107,255,165,255,107,255,165,255
    2032   00:BA2A  E5 FF 00 00 92 FF 00 00 EB FF A5 FF 6B FF A5 FF 
    2032   00:BA3A  6B FF A5 FF 6B FF A5 FF 6B FF A5 FF 6B FF A5 FF 
    2033   00:BA4A                             defb 249,127,0,0,228,191,0,0,250,255,233,127,218,255,233,127,218,255,233,127,218,255,233,127,218,255,233,127,218,255,233,127
    2033   00:BA4A  F9 7F 00 00 E4 BF 00 00 FA FF E9 7F DA FF E9 7F 
    2033   00:BA5A  DA FF E9 7F DA FF E9 7F DA FF E9 7F DA FF E9 7F 
    2034   00:BA6A                             defb 254,95,0,0,249,47,0,0,254,191,250,95,246,191,250,95,246,191,250,95,246,191,250,95,246,191,250,95,246,191,250,95
    2034   00:BA6A  FE 5F 00 00 F9 2F 00 00 FE BF FA 5F F6 BF FA 5F 
    2034   00:BA7A  F6 BF FA 5F F6 BF FA 5F F6 BF FA 5F F6 BF FA 5F 
    2035   00:BA8A                             defb 0,0,0,0,32,4,0,0,4,32,128,1,128,1,0,0,32,4,32,4,4,32,128,1,129,1,0,0,160,5,255,255
    2035   00:BA8A  00 00 00 00 20 04 00 00 04 20 80 01 80 01 00 00 
    2035   00:BA9A  20 04 20 04 04 20 80 01 81 01 00 00 A0 05 FF FF 
    2036   00:BAAA                             defb 0,0,0,0,8,1,0,0,1,8,96,0,96,0,0,0,8,1,8,1,1,8,96,0,96,64,0,0,104,1,255,255
    2036   00:BAAA  00 00 00 00 08 01 00 00 01 08 60 00 60 00 00 00 
    2036   00:BABA  08 01 08 01 01 08 60 00 60 40 00 00 68 01 FF FF 
    2037   00:BACA                             defb 0,0,0,0,66,0,0,0,0,66,24,0,24,0,0,0,66,0,66,0,0,66,24,0,24,16,0,0,90,0,255,255
    2037   00:BACA  00 00 00 00 42 00 00 00 00 42 18 00 18 00 00 00 
    2037   00:BADA  42 00 42 00 00 42 18 00 18 10 00 00 5A 00 FF FF 
    2038   00:BAEA                             defb 0,0,0,0,16,128,0,0,128,16,6,0,6,0,0,0,16,128,16,128,128,16,6,0,6,4,0,0,22,128,255,255
    2038   00:BAEA  00 00 00 00 10 80 00 00 80 10 06 00 06 00 00 00 
    2038   00:BAFA  10 80 10 80 80 10 06 00 06 04 00 00 16 80 FF FF 
    2039   00:BB0A                             defb 0,0,0,0,4,32,0,0,128,1,0,0,32,4,32,4,4,32,129,1,128,1,0,0,32,4,32,4,132,33,255,255
    2039   00:BB0A  00 00 00 00 04 20 00 00 80 01 00 00 20 04 20 04 
    2039   00:BB1A  04 20 81 01 80 01 00 00 20 04 20 04 84 21 FF FF 
    2040   00:BB2A                             defb 0,0,0,0,1,8,0,0,96,0,0,0,8,1,8,1,1,8,96,64,96,0,0,0,8,1,8,1,97,8,255,255
    2040   00:BB2A  00 00 00 00 01 08 00 00 60 00 00 00 08 01 08 01 
    2040   00:BB3A  01 08 60 40 60 00 00 00 08 01 08 01 61 08 FF FF 
    2041   00:BB4A                             defb 0,0,0,0,0,66,0,0,24,0,0,0,66,0,66,0,0,66,24,16,24,0,0,0,66,0,66,0,24,66,255,255
    2041   00:BB4A  00 00 00 00 00 42 00 00 18 00 00 00 42 00 42 00 
    2041   00:BB5A  00 42 18 10 18 00 00 00 42 00 42 00 18 42 FF FF 
    2042   00:BB6A                             defb 0,0,0,0,128,16,0,0,6,0,0,0,16,128,16,128,128,16,6,4,6,0,0,0,16,128,16,128,134,16,255,255
    2042   00:BB6A  00 00 00 00 80 10 00 00 06 00 00 00 10 80 10 80 
    2042   00:BB7A  80 10 06 04 06 00 00 00 10 80 10 80 86 10 FF FF 
    2043   00:BB8A                             defb 0,0,0,0,0,0,0,0,33,4,32,4,4,32,128,1,128,1,0,0,32,4,32,4,4,32,128,1,128,1,255,255
    2043   00:BB8A  00 00 00 00 00 00 00 00 21 04 20 04 04 20 80 01 
    2043   00:BB9A  80 01 00 00 20 04 20 04 04 20 80 01 80 01 FF FF 
    2044   00:BBAA                             defb 0,0,0,0,0,0,0,0,8,65,8,1,1,8,96,0,96,0,0,0,8,1,8,1,1,8,96,0,96,0,255,255
    2044   00:BBAA  00 00 00 00 00 00 00 00 08 41 08 01 01 08 60 00 
    2044   00:BBBA  60 00 00 00 08 01 08 01 01 08 60 00 60 00 FF FF 
    2045   00:BBCA                             defb 0,0,0,0,0,0,0,0,66,16,66,0,0,66,24,0,24,0,0,0,66,0,66,0,0,66,24,0,24,0,255,255
    2045   00:BBCA  00 00 00 00 00 00 00 00 42 10 42 00 00 42 18 00 
    2045   00:BBDA  18 00 00 00 42 00 42 00 00 42 18 00 18 00 FF FF 
    2046   00:BBEA                             defb 0,0,0,0,0,0,0,0,16,132,16,128,128,16,6,0,6,0,0,0,16,128,16,128,128,16,6,0,6,0,255,255
    2046   00:BBEA  00 00 00 00 00 00 00 00 10 84 10 80 80 10 06 00 
    2046   00:BBFA  06 00 00 00 10 80 10 80 80 10 06 00 06 00 FF FF 
    2047   00:BC0A                             defb 0,0,128,0,0,0,2,0,0,1,0,0,0,0,16,0,0,64,0,0,0,0,0,4,0,0,32,0,0,0,0,0
    2047   00:BC0A  00 00 80 00 00 00 02 00 00 01 00 00 00 00 10 00 
    2047   00:BC1A  00 40 00 00 00 00 00 04 00 00 20 00 00 00 00 00 
    2048   00:BC2A                             defb 0,0,32,0,0,0,0,128,64,0,0,0,0,0,4,0,0,16,0,0,0,0,0,1,0,0,8,0,0,0,0,0
    2048   00:BC2A  00 00 20 00 00 00 00 80 40 00 00 00 00 00 04 00 
    2048   00:BC3A  00 10 00 00 00 00 00 01 00 00 08 00 00 00 00 00 
    2049   00:BC4A                             defb 0,0,8,0,0,0,0,32,16,0,0,0,0,0,1,0,0,4,0,0,0,0,64,0,0,0,2,0,0,0,0,0
    2049   00:BC4A  00 00 08 00 00 00 00 20 10 00 00 00 00 00 01 00 
    2049   00:BC5A  00 04 00 00 00 00 40 00 00 00 02 00 00 00 00 00 
    2050   00:BC6A                             defb 0,0,2,0,0,0,0,8,4,0,0,0,0,0,0,64,0,1,0,0,0,0,16,0,0,0,0,128,0,0,0,0
    2050   00:BC6A  00 00 02 00 00 00 00 08 04 00 00 00 00 00 00 40 
    2050   00:BC7A  00 01 00 00 00 00 10 00 00 00 00 80 00 00 00 00 
    2051   00:BC8A                             defb 0,0,0,2,0,0,8,0,0,4,0,0,0,0,64,0,1,0,0,0,0,0,0,16,0,0,128,0,0,0,0,0
    2051   00:BC8A  00 00 00 02 00 00 08 00 00 04 00 00 00 00 40 00 
    2051   00:BC9A  01 00 00 00 00 00 00 10 00 00 80 00 00 00 00 00 
    2052   00:BCAA                             defb 0,0,128,0,0,0,2,0,0,1,0,0,0,0,16,0,0,64,0,0,0,0,0,4,0,0,32,0,0,0,0,0
    2052   00:BCAA  00 00 80 00 00 00 02 00 00 01 00 00 00 00 10 00 
    2052   00:BCBA  00 40 00 00 00 00 00 04 00 00 20 00 00 00 00 00 
    2053   00:BCCA                             defb 0,0,32,0,0,0,0,128,64,0,0,0,0,0,4,0,0,16,0,0,0,0,0,1,0,0,8,0,0,0,0,0
    2053   00:BCCA  00 00 20 00 00 00 00 80 40 00 00 00 00 00 04 00 
    2053   00:BCDA  00 10 00 00 00 00 00 01 00 00 08 00 00 00 00 00 
    2054   00:BCEA                             defb 0,0,8,0,0,0,0,32,16,0,0,0,0,0,1,0,0,4,0,0,0,0,64,0,0,0,2,0,0,0,0,0
    2054   00:BCEA  00 00 08 00 00 00 00 20 10 00 00 00 00 00 01 00 
    2054   00:BCFA  00 04 00 00 00 00 40 00 00 00 02 00 00 00 00 00 
    2055   00:BD0A                             defb 0,0,0,8,0,0,32,0,0,16,0,0,0,0,0,1,4,0,0,0,0,0,0,64,0,0,0,2,0,0,0,0
    2055   00:BD0A  00 00 00 08 00 00 20 00 00 10 00 00 00 00 00 01 
    2055   00:BD1A  04 00 00 00 00 00 00 40 00 00 00 02 00 00 00 00 
    2056   00:BD2A                             defb 0,0,0,2,0,0,8,0,0,4,0,0,0,0,64,0,1,0,0,0,0,0,0,16,0,0,128,0,0,0,0,0
    2056   00:BD2A  00 00 00 02 00 00 08 00 00 04 00 00 00 00 40 00 
    2056   00:BD3A  01 00 00 00 00 00 00 10 00 00 80 00 00 00 00 00 
    2057   00:BD4A                             defb 0,0,128,0,0,0,2,0,0,1,0,0,0,0,16,0,0,64,0,0,0,0,0,4,0,0,32,0,0,0,0,0
    2057   00:BD4A  00 00 80 00 00 00 02 00 00 01 00 00 00 00 10 00 
    2057   00:BD5A  00 40 00 00 00 00 00 04 00 00 20 00 00 00 00 00 
    2058   00:BD6A                             defb 0,0,32,0,0,0,0,128,64,0,0,0,0,0,4,0,0,16,0,0,0,0,0,1,0,0,8,0,0,0,0,0
    2058   00:BD6A  00 00 20 00 00 00 00 80 40 00 00 00 00 00 04 00 
    2058   00:BD7A  00 10 00 00 00 00 00 01 00 00 08 00 00 00 00 00 
    2059   00:BD8A                             defb 0,0,0,32,0,0,128,0,0,64,0,0,0,0,0,4,16,0,0,0,0,0,1,0,0,0,0,8,0,0,0,0
    2059   00:BD8A  00 00 00 20 00 00 80 00 00 40 00 00 00 00 00 04 
    2059   00:BD9A  10 00 00 00 00 00 01 00 00 00 00 08 00 00 00 00 
    2060   00:BDAA                             defb 0,0,0,8,0,0,32,0,0,16,0,0,0,0,0,1,4,0,0,0,0,0,0,64,0,0,0,2,0,0,0,0
    2060   00:BDAA  00 00 00 08 00 00 20 00 00 10 00 00 00 00 00 01 
    2060   00:BDBA  04 00 00 00 00 00 00 40 00 00 00 02 00 00 00 00 
    2061   00:BDCA                             defb 0,0,0,2,0,0,8,0,0,4,0,0,0,0,64,0,1,0,0,0,0,0,0,16,0,0,128,0,0,0,0,0
    2061   00:BDCA  00 00 00 02 00 00 08 00 00 04 00 00 00 00 40 00 
    2061   00:BDDA  01 00 00 00 00 00 00 10 00 00 80 00 00 00 00 00 
    2062   00:BDEA                             defb 0,0,128,0,0,0,2,0,0,1,0,0,0,0,16,0,0,64,0,0,0,0,0,4,0,0,32,0,0,0,0,0
    2062   00:BDEA  00 00 80 00 00 00 02 00 00 01 00 00 00 00 10 00 
    2062   00:BDFA  00 40 00 00 00 00 00 04 00 00 20 00 00 00 00 00 
    2063   00:BE0A                             defb 0,0,0,128,0,0,0,2,1,0,0,0,0,0,0,16,64,0,0,0,0,0,4,0,0,0,0,32,0,0,0,0
    2063   00:BE0A  00 00 00 80 00 00 00 02 01 00 00 00 00 00 00 10 
    2063   00:BE1A  40 00 00 00 00 00 04 00 00 00 00 20 00 00 00 00 
    2064   00:BE2A                             defb 0,0,0,32,0,0,128,0,0,64,0,0,0,0,0,4,16,0,0,0,0,0,1,0,0,0,0,8,0,0,0,0
    2064   00:BE2A  00 00 00 20 00 00 80 00 00 40 00 00 00 00 00 04 
    2064   00:BE3A  10 00 00 00 00 00 01 00 00 00 00 08 00 00 00 00 
    2065   00:BE4A                             defb 0,0,0,8,0,0,32,0,0,16,0,0,0,0,0,1,4,0,0,0,0,0,0,64,0,0,0,2,0,0,0,0
    2065   00:BE4A  00 00 00 08 00 00 20 00 00 10 00 00 00 00 00 01 
    2065   00:BE5A  04 00 00 00 00 00 00 40 00 00 00 02 00 00 00 00 
    2066   00:BE6A                             defb 0,0,0,2,0,0,8,0,0,4,0,0,0,0,64,0,1,0,0,0,0,0,0,16,0,0,128,0,0,0,0,0
    2066   00:BE6A  00 00 00 02 00 00 08 00 00 04 00 00 00 00 40 00 
    2066   00:BE7A  01 00 00 00 00 00 00 10 00 00 80 00 00 00 00 00 
    2067   00:BE8A                             defb 0,0,2,0,0,0,0,8,4,0,0,0,0,0,0,64,0,1,0,0,0,0,16,0,0,0,0,128,0,0,0,0
    2067   00:BE8A  00 00 02 00 00 00 00 08 04 00 00 00 00 00 00 40 
    2067   00:BE9A  00 01 00 00 00 00 10 00 00 00 00 80 00 00 00 00 
    2068   00:BEAA                             defb 0,0,0,128,0,0,0,2,1,0,0,0,0,0,0,16,64,0,0,0,0,0,4,0,0,0,0,32,0,0,0,0
    2068   00:BEAA  00 00 00 80 00 00 00 02 01 00 00 00 00 00 00 10 
    2068   00:BEBA  40 00 00 00 00 00 04 00 00 00 00 20 00 00 00 00 
    2069   00:BECA                             defb 0,0,0,32,0,0,128,0,0,64,0,0,0,0,0,4,16,0,0,0,0,0,1,0,0,0,0,8,0,0,0,0
    2069   00:BECA  00 00 00 20 00 00 80 00 00 40 00 00 00 00 00 04 
    2069   00:BEDA  10 00 00 00 00 00 01 00 00 00 00 08 00 00 00 00 
    2070   00:BEEA                             defb 0,0,0,8,0,0,32,0,0,16,0,0,0,0,0,1,4,0,0,0,0,0,0,64,0,0,0,2,0,0,0,0
    2070   00:BEEA  00 00 00 08 00 00 20 00 00 10 00 00 00 00 00 01 
    2070   00:BEFA  04 00 00 00 00 00 00 40 00 00 00 02 00 00 00 00 
    2071   00:BF0A                             defb 0,0,16,0,0,0,0,64,32,0,0,0,0,0,2,0,0,8,0,0,0,0,128,0,0,0,4,0,0,0,0,0
    2071   00:BF0A  00 00 10 00 00 00 00 40 20 00 00 00 00 00 02 00 
    2071   00:BF1A  00 08 00 00 00 00 80 00 00 00 04 00 00 00 00 00 
    2072   00:BF2A                             defb 0,0,4,0,0,0,0,16,8,0,0,0,0,0,0,128,0,2,0,0,0,0,32,0,0,0,1,0,0,0,0,0
    2072   00:BF2A  00 00 04 00 00 00 00 10 08 00 00 00 00 00 00 80 
    2072   00:BF3A  00 02 00 00 00 00 20 00 00 00 01 00 00 00 00 00 
    2073   00:BF4A                             defb 0,0,1,0,0,0,0,4,2,0,0,0,0,0,0,32,128,0,0,0,0,0,8,0,0,0,0,64,0,0,0,0
    2073   00:BF4A  00 00 01 00 00 00 00 04 02 00 00 00 00 00 00 20 
    2073   00:BF5A  80 00 00 00 00 00 08 00 00 00 00 40 00 00 00 00 
    2074   00:BF6A                             defb 0,0,0,64,0,0,0,1,0,128,0,0,0,0,0,8,32,0,0,0,0,0,2,0,0,0,0,16,0,0,0,0
    2074   00:BF6A  00 00 00 40 00 00 00 01 00 80 00 00 00 00 00 08 
    2074   00:BF7A  20 00 00 00 00 00 02 00 00 00 00 10 00 00 00 00 
    2075   00:BF8A                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    2075   00:BF8A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2075   00:BF9A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2076   00:BFAA                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    2076   00:BFAA  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2076   00:BFBA  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2077   00:BFCA                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    2077   00:BFCA  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2077   00:BFDA  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2078   00:BFEA                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
    2078   00:BFEA  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2078   00:BFFA  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2079   00:C00A  (00:C00A)           frmlst equ $
    2080   00:C00A  00 03                      defb 0,3
    2081   00:C00C  03 03                      defb 3,3
    2082   00:C00E  06 04                      defb 6,4
    2083   00:C010  0A 04                      defb 10,4
    2084   00:C012  0E 04                      defb 14,4
    2085   00:C014  12 04                      defb 18,4
    2086   00:C016  16 04                      defb 22,4
    2087   00:C018  1A 04                      defb 26,4
    2088   00:C01A  1E 06                      defb 30,6
    2089   00:C01C  24 06                      defb 36,6
    2090   00:C01E  2A 04                      defb 42,4
    2091   00:C020  2E 05                      defb 46,5
    2092   00:C022  33 03                      defb 51,3
    2093   00:C024  36 07                      defb 54,7
    2094   00:C026  3D 01 3E 00                defb 61,1,62,0
    2095   00:C02A  00 01 18 88 FF      nmedat defb 0,1,24,136,255
    2096   00:C02F                             defb 0,1,128,224,1,3,96,160,6,14,24,224,1,7,64,184,255
    2096   00:C02F  00 01 80 E0 01 03 60 A0 06 0E 18 E0 01 07 40 B8 
    2096   00:C03F  FF 
    2097   00:C040                             defb 0,0,128,16,6,14,56,224,1,8,24,160,1,8,88,64,255
    2097   00:C040  00 00 80 10 06 0E 38 E0 01 08 18 A0 01 08 58 40 
    2097   00:C050  FF 
    2098   00:C051                             defb 0,0,24,88,6,14,48,16,1,3,72,80,1,8,128,80,255
    2098   00:C051  00 00 18 58 06 0E 30 10 01 03 48 50 01 08 80 50 
    2098   00:C061  FF 
    2099   00:C062                             defb 0,0,72,16,6,14,128,16,2,5,40,112,2,4,64,152,2,9,56,200,7,11,128,80,5,13,32,32,5,13,32,72,255
    2099   00:C062  00 00 48 10 06 0E 80 10 02 05 28 70 02 04 40 98 
    2099   00:C072  02 09 38 C8 07 0B 80 50 05 0D 20 20 05 0D 20 48 
    2099   00:C082  FF 
    2100   00:C083                             defb 0,0,128,16,6,14,40,16,2,2,56,88,2,2,64,168,2,2,96,144,255
    2100   00:C083  00 00 80 10 06 0E 28 10 02 02 38 58 02 02 40 A8 
    2100   00:C093  02 02 60 90 FF 
    2101   00:C098                             defb 0,1,128,224,5,13,32,104,1,3,48,48,1,7,80,64,1,8,128,80,255
    2101   00:C098  00 01 80 E0 05 0D 20 68 01 03 30 30 01 07 50 40 
    2101   00:C0A8  01 08 80 50 FF 
    2102   00:C0AD                             defb 0,0,128,16,6,14,24,16,2,5,24,32,2,5,48,88,2,5,80,152,7,11,128,72,7,11,128,168,255
    2102   00:C0AD  00 00 80 10 06 0E 18 10 02 05 18 20 02 05 30 58 
    2102   00:C0BD  02 05 50 98 07 0B 80 48 07 0B 80 A8 FF 
    2103   00:C0CA                             defb 0,0,128,16,6,14,40,120,1,8,56,16,1,8,56,184,2,5,72,104,2,5,72,144,255
    2103   00:C0CA  00 00 80 10 06 0E 28 78 01 08 38 10 01 08 38 B8 
    2103   00:C0DA  02 05 48 68 02 05 48 90 FF 
    2104   00:C0E3                             defb 0,0,128,16,5,13,32,208,6,14,16,16,2,5,16,152,255
    2104   00:C0E3  00 00 80 10 05 0D 20 D0 06 0E 10 10 02 05 10 98 
    2104   00:C0F3  FF 
    2105   00:C0F4                             defb 0,0,128,16,6,14,128,192,2,5,40,88,2,5,72,176,7,11,128,72,255
    2105   00:C0F4  00 00 80 10 06 0E 80 C0 02 05 28 58 02 05 48 B0 
    2105   00:C104  07 0B 80 48 FF 
    2106   00:C109                             defb 0,1,24,200,5,13,32,104,6,14,40,16,1,8,48,40,1,8,80,56,1,8,128,72,255
    2106   00:C109  00 01 18 C8 05 0D 20 68 06 0E 28 10 01 08 30 28 
    2106   00:C119  01 08 50 38 01 08 80 48 FF 
    2107   00:C122                             defb 0,1,24,200,5,13,40,88,2,9,24,128,255
    2107   00:C122  00 01 18 C8 05 0D 28 58 02 09 18 80 FF 
    2108   00:C12F                             defb 0,0,128,16,6,14,16,40,2,5,72,120,7,11,128,120,255
    2108   00:C12F  00 00 80 10 06 0E 10 28 02 05 48 78 07 0B 80 78 
    2108   00:C13F  FF 
    2109   00:C140                             defb 0,0,128,16,6,14,48,224,1,7,88,80,2,5,24,56,255
    2109   00:C140  00 00 80 10 06 0E 30 E0 01 07 58 50 02 05 18 38 
    2109   00:C150  FF 
    2110   00:C151                             defb 0,1,128,224,5,13,72,120,6,14,112,16,2,9,104,96,2,5,96,152,7,11,128,152,255
    2110   00:C151  00 01 80 E0 05 0D 48 78 06 0E 70 10 02 09 68 60 
    2110   00:C161  02 05 60 98 07 0B 80 98 FF 
    2111   00:C16A                             defb 0,1,128,224,6,14,112,120,2,5,104,88,2,5,104,152,2,4,48,104,2,4,48,136,255
    2111   00:C16A  00 01 80 E0 06 0E 70 78 02 05 68 58 02 05 68 98 
    2111   00:C17A  02 04 30 68 02 04 30 88 FF 
    2112   00:C183                             defb 0,1,24,200,6,14,80,112,1,8,40,128,1,7,80,72,255
    2112   00:C183  00 01 18 C8 06 0E 50 70 01 08 28 80 01 07 50 48 
    2112   00:C193  FF 
    2113   00:C194                             defb 0,0,128,16,8,12,128,200,3,2,24,16,3,6,32,80,3,10,48,152,255
    2113   00:C194  00 00 80 10 08 0C 80 C8 03 02 18 10 03 06 20 50 
    2113   00:C1A4  03 0A 30 98 FF 
    2114   00:C1A9                             defb 0,0,24,152,1,3,128,128,1,8,48,40,6,14,96,16,255
    2114   00:C1A9  00 00 18 98 01 03 80 80 01 08 30 28 06 0E 60 10 
    2114   00:C1B9  FF 
    2115   00:C1BA                             defb 0,0,128,16,5,13,32,32,5,13,32,208,2,5,64,136,2,5,104,160,3,10,24,160,6,14,64,56,255
    2115   00:C1BA  00 00 80 10 05 0D 20 20 05 0D 20 D0 02 05 40 88 
    2115   00:C1CA  02 05 68 A0 03 0A 18 A0 06 0E 40 38 FF 
    2116   00:C1D7                             defb 0,0,128,16,1,7,104,112,1,7,64,120,6,14,24,224,255
    2116   00:C1D7  00 00 80 10 01 07 68 70 01 07 40 78 06 0E 18 E0 
    2116   00:C1E7  FF 
    2117   00:C1E8  (00:0018)           NUMOBJ equ 24
    2118   00:C1E8  (00:C1E8)           objdta equ $
    2119   00:C1E8                             defb 31,248,32,4,42,84,42,84,32,4,47,244,40,20,40,20,40,20,40,20,40,20,40,20,47,244,32,4,16,8,15,240,96,254,128,64,254,128,64
    2119   00:C1E8  1F F8 20 04 2A 54 2A 54 20 04 2F F4 28 14 28 14 
    2119   00:C1F8  28 14 28 14 28 14 28 14 2F F4 20 04 10 08 0F F0 
    2119   00:C208  60 FE 80 40 FE 80 40 
    2120   00:C20F                             defb 31,248,32,4,42,84,42,84,32,4,35,196,36,36,40,20,40,20,40,20,40,20,36,36,35,196,32,4,16,8,15,240,96,254,8,8,254,8,8
    2120   00:C20F  1F F8 20 04 2A 54 2A 54 20 04 23 C4 24 24 28 14 
    2120   00:C21F  28 14 28 14 28 14 24 24 23 C4 20 04 10 08 0F F0 
    2120   00:C22F  60 FE 08 08 FE 08 08 
    2121   00:C236                             defb 31,248,32,4,42,84,42,84,32,4,33,132,34,68,34,68,36,36,36,36,40,20,40,20,47,244,32,4,16,8,15,240,96,254,8,8,254,8,8
    2121   00:C236  1F F8 20 04 2A 54 2A 54 20 04 21 84 22 44 22 44 
    2121   00:C246  24 24 24 24 28 14 28 14 2F F4 20 04 10 08 0F F0 
    2121   00:C256  60 FE 08 08 FE 08 08 
    2122   00:C25D                             defb 31,248,32,4,42,84,42,84,32,4,35,196,34,68,46,116,40,20,40,20,46,116,34,68,35,196,32,4,16,8,15,240,96,254,8,8,254,8,8
    2122   00:C25D  1F F8 20 04 2A 54 2A 54 20 04 23 C4 22 44 2E 74 
    2122   00:C26D  28 14 28 14 2E 74 22 44 23 C4 20 04 10 08 0F F0 
    2122   00:C27D  60 FE 08 08 FE 08 08 
    2123   00:C284                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,13,80,10,176,13,80,15,240,4,32,7,224,96,1,128,160,1,128,160
    2123   00:C284  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2123   00:C294  00 00 07 E0 0D 50 0A B0 0D 50 0F F0 04 20 07 E0 
    2123   00:C2A4  60 01 80 A0 01 80 A0 
    2124   00:C2AB                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,13,80,10,176,13,80,15,240,4,32,7,224,96,2,56,96,2,56,96
    2124   00:C2AB  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2124   00:C2BB  00 00 07 E0 0D 50 0A B0 0D 50 0F F0 04 20 07 E0 
    2124   00:C2CB  60 02 38 60 02 38 60 
    2125   00:C2D2                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,13,80,10,176,13,80,15,240,4,32,7,224,96,3,128,56,3,128,56
    2125   00:C2D2  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2125   00:C2E2  00 00 07 E0 0D 50 0A B0 0D 50 0F F0 04 20 07 E0 
    2125   00:C2F2  60 03 80 38 03 80 38 
    2126   00:C2F9                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,13,80,10,176,13,80,15,240,4,32,7,224,96,4,128,200,4,128,200
    2126   00:C2F9  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2126   00:C309  00 00 07 E0 0D 50 0A B0 0D 50 0F F0 04 20 07 E0 
    2126   00:C319  60 04 80 C8 04 80 C8 
    2127   00:C320                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,13,80,10,176,13,80,15,240,4,32,7,224,96,5,128,64,5,128,64
    2127   00:C320  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2127   00:C330  00 00 07 E0 0D 50 0A B0 0D 50 0F F0 04 20 07 E0 
    2127   00:C340  60 05 80 40 05 80 40 
    2128   00:C347                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,13,80,10,176,13,80,15,240,4,32,7,224,96,6,128,128,6,128,128
    2128   00:C347  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2128   00:C357  00 00 07 E0 0D 50 0A B0 0D 50 0F F0 04 20 07 E0 
    2128   00:C367  60 06 80 80 06 80 80 
    2129   00:C36E                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,13,80,10,176,13,80,15,240,4,32,7,224,96,7,88,16,7,88,16
    2129   00:C36E  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2129   00:C37E  00 00 07 E0 0D 50 0A B0 0D 50 0F F0 04 20 07 E0 
    2129   00:C38E  60 07 58 10 07 58 10 
    2130   00:C395                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,13,80,10,176,13,80,15,240,4,32,7,224,96,8,96,120,8,96,120
    2130   00:C395  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2130   00:C3A5  00 00 07 E0 0D 50 0A B0 0D 50 0F F0 04 20 07 E0 
    2130   00:C3B5  60 08 60 78 08 60 78 
    2131   00:C3BC                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,13,80,10,176,13,80,15,240,4,32,7,224,96,9,48,136,9,48,136
    2131   00:C3BC  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2131   00:C3CC  00 00 07 E0 0D 50 0A B0 0D 50 0F F0 04 20 07 E0 
    2131   00:C3DC  60 09 30 88 09 30 88 
    2132   00:C3E3                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,13,80,10,176,13,80,15,240,4,32,7,224,96,10,104,56,10,104,56
    2132   00:C3E3  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2132   00:C3F3  00 00 07 E0 0D 50 0A B0 0D 50 0F F0 04 20 07 E0 
    2132   00:C403  60 0A 68 38 0A 68 38 
    2133   00:C40A                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,13,80,10,176,13,80,15,240,4,32,7,224,96,11,80,224,11,80,224
    2133   00:C40A  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2133   00:C41A  00 00 07 E0 0D 50 0A B0 0D 50 0F F0 04 20 07 E0 
    2133   00:C42A  60 0B 50 E0 0B 50 E0 
    2134   00:C431                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,13,80,10,176,13,80,15,240,4,32,7,224,96,12,104,152,12,104,152
    2134   00:C431  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2134   00:C441  00 00 07 E0 0D 50 0A B0 0D 50 0F F0 04 20 07 E0 
    2134   00:C451  60 0C 68 98 0C 68 98 
    2135   00:C458                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,13,80,10,176,13,80,15,240,4,32,7,224,96,13,104,200,13,104,200
    2135   00:C458  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2135   00:C468  00 00 07 E0 0D 50 0A B0 0D 50 0F F0 04 20 07 E0 
    2135   00:C478  60 0D 68 C8 0D 68 C8 
    2136   00:C47F                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,13,80,10,176,13,80,15,240,4,32,7,224,96,14,128,168,14,128,168
    2136   00:C47F  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2136   00:C48F  00 00 07 E0 0D 50 0A B0 0D 50 0F F0 04 20 07 E0 
    2136   00:C49F  60 0E 80 A8 0E 80 A8 
    2137   00:C4A6                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,13,80,10,176,13,80,15,240,4,32,7,224,96,15,88,200,15,88,200
    2137   00:C4A6  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2137   00:C4B6  00 00 07 E0 0D 50 0A B0 0D 50 0F F0 04 20 07 E0 
    2137   00:C4C6  60 0F 58 C8 0F 58 C8 
    2138   00:C4CD                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,13,80,10,176,13,80,15,240,4,32,7,224,96,16,128,24,16,128,24
    2138   00:C4CD  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2138   00:C4DD  00 00 07 E0 0D 50 0A B0 0D 50 0F F0 04 20 07 E0 
    2138   00:C4ED  60 10 80 18 10 80 18 
    2139   00:C4F4                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,13,80,10,176,13,80,15,240,4,32,7,224,96,17,80,192,17,80,192
    2139   00:C4F4  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2139   00:C504  00 00 07 E0 0D 50 0A B0 0D 50 0F F0 04 20 07 E0 
    2139   00:C514  60 11 50 C0 11 50 C0 
    2140   00:C51B                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,13,80,10,176,13,80,15,240,4,32,7,224,96,19,128,152,19,128,152
    2140   00:C51B  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2140   00:C52B  00 00 07 E0 0D 50 0A B0 0D 50 0F F0 04 20 07 E0 
    2140   00:C53B  60 13 80 98 13 80 98 
    2141   00:C542                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,13,80,10,176,13,80,15,240,4,32,7,224,96,20,128,96,20,128,96
    2141   00:C542  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2141   00:C552  00 00 07 E0 0D 50 0A B0 0D 50 0F F0 04 20 07 E0 
    2141   00:C562  60 14 80 60 14 80 60 
    2142   00:C569                             defb 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,13,80,10,176,13,80,15,240,4,32,7,224,96,21,128,208,21,128,208
    2142   00:C569  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
    2142   00:C579  00 00 07 E0 0D 50 0A B0 0D 50 0F F0 04 20 07 E0 
    2142   00:C589  60 15 80 D0 15 80 D0 
    2143   00:C590  (00:C590)           palett equ $
    2144   00:C590                             defb 0,2,20,19,128,227,200,146,0,2,20,19,128,227,200,146
    2144   00:C590  00 02 14 13 80 E3 C8 92 00 02 14 13 80 E3 C8 92 
    2145   00:C5A0                             defb 0,35,60,63,224,227,252,255,0,35,60,63,224,227,252,255
    2145   00:C5A0  00 23 3C 3F E0 E3 FC FF 00 23 3C 3F E0 E3 FC FF 
    2146   00:C5B0                             defb 0,33,39,162,243,64,128,244,0,33,39,162,243,64,128,244
    2146   00:C5B0  00 21 27 A2 F3 40 80 F4 00 21 27 A2 F3 40 80 F4 
    2147   00:C5C0                             defb 0,44,80,120,108,109,146,219,0,44,80,120,108,109,146,219
    2147   00:C5C0  00 2C 50 78 6C 6D 92 DB 00 2C 50 78 6C 6D 92 DB 
    2148   00:C5D0  (00:C5D0)           font   equ $
    2149   00:C5D0                             defb 121,62,50,71,205,236,126,205
    2149   00:C5D0  79 3E 32 47 CD EC 7E CD 
    2150   00:C5D8                             defb 24,129,205,213,220,201,48,0
    2150   00:C5D8  18 81 CD D5 DC C9 30 00 
    2151   00:C5E0                             defb 0,108,108,0,0,0,0,0
    2151   00:C5E0  00 6C 6C 00 00 00 00 00 
    2152   00:C5E8                             defb 0,108,254,108,108,254,108,0
    2152   00:C5E8  00 6C FE 6C 6C FE 6C 00 
    2153   00:C5F0                             defb 0,24,126,120,126,30,126,24
    2153   00:C5F0  00 18 7E 78 7E 1E 7E 18 
    2154   00:C5F8                             defb 0,230,236,24,48,110,206,0
    2154   00:C5F8  00 E6 EC 18 30 6E CE 00 
    2155   00:C600                             defb 0,48,120,48,126,204,126,0
    2155   00:C600  00 30 78 30 7E CC 7E 00 
    2156   00:C608                             defb 0,24,48,0,0,0,0,0
    2156   00:C608  00 18 30 00 00 00 00 00 
    2157   00:C610                             defb 0,12,24,24,24,24,12,0
    2157   00:C610  00 0C 18 18 18 18 0C 00 
    2158   00:C618                             defb 0,96,48,48,48,48,96,0
    2158   00:C618  00 60 30 30 30 30 60 00 
    2159   00:C620                             defb 0,0,60,24,126,24,60,0
    2159   00:C620  00 00 3C 18 7E 18 3C 00 
    2160   00:C628                             defb 0,0,24,24,126,24,24,0
    2160   00:C628  00 00 18 18 7E 18 18 00 
    2161   00:C630                             defb 0,0,0,0,0,24,24,48
    2161   00:C630  00 00 00 00 00 18 18 30 
    2162   00:C638                             defb 0,0,0,0,126,0,0,0
    2162   00:C638  00 00 00 00 7E 00 00 00 
    2163   00:C640                             defb 0,0,0,0,0,56,56,0
    2163   00:C640  00 00 00 00 00 38 38 00 
    2164   00:C648                             defb 0,0,6,12,24,48,96,0
    2164   00:C648  00 00 06 0C 18 30 60 00 
    2165   00:C650                             defb 0,124,206,222,246,230,124,0
    2165   00:C650  00 7C CE DE F6 E6 7C 00 
    2166   00:C658                             defb 0,56,120,24,24,24,126,0
    2166   00:C658  00 38 78 18 18 18 7E 00 
    2167   00:C660                             defb 0,124,198,6,124,192,254,0
    2167   00:C660  00 7C C6 06 7C C0 FE 00 
    2168   00:C668                             defb 0,124,198,28,6,198,124,0
    2168   00:C668  00 7C C6 1C 06 C6 7C 00 
    2169   00:C670                             defb 0,24,56,120,216,254,24,0
    2169   00:C670  00 18 38 78 D8 FE 18 00 
    2170   00:C678                             defb 0,254,192,252,6,198,124,0
    2170   00:C678  00 FE C0 FC 06 C6 7C 00 
    2171   00:C680                             defb 0,124,192,252,198,198,124,0
    2171   00:C680  00 7C C0 FC C6 C6 7C 00 
    2172   00:C688                             defb 0,254,6,12,24,48,48,0
    2172   00:C688  00 FE 06 0C 18 30 30 00 
    2173   00:C690                             defb 0,124,198,124,198,198,124,0
    2173   00:C690  00 7C C6 7C C6 C6 7C 00 
    2174   00:C698                             defb 0,124,198,198,126,6,124,0
    2174   00:C698  00 7C C6 C6 7E 06 7C 00 
    2175   00:C6A0                             defb 0,0,0,48,0,0,48,0
    2175   00:C6A0  00 00 00 30 00 00 30 00 
    2176   00:C6A8                             defb 0,48,48,48,48,0,48,0
    2176   00:C6A8  00 30 30 30 30 00 30 00 
    2177   00:C6B0                             defb 0,0,12,24,48,24,12,0
    2177   00:C6B0  00 00 0C 18 30 18 0C 00 
    2178   00:C6B8                             defb 0,0,0,126,0,126,0,0
    2178   00:C6B8  00 00 00 7E 00 7E 00 00 
    2179   00:C6C0                             defb 0,0,48,24,12,24,48,0
    2179   00:C6C0  00 00 30 18 0C 18 30 00 
    2180   00:C6C8                             defb 0,124,198,12,24,0,24,0
    2180   00:C6C8  00 7C C6 0C 18 00 18 00 
    2181   00:C6D0                             defb 0,124,222,254,254,192,124,0
    2181   00:C6D0  00 7C DE FE FE C0 7C 00 
    2182   00:C6D8                             defb 0,252,198,198,254,198,198,0
    2182   00:C6D8  00 FC C6 C6 FE C6 C6 00 
    2183   00:C6E0                             defb 0,252,198,252,198,198,254,0
    2183   00:C6E0  00 FC C6 FC C6 C6 FE 00 
    2184   00:C6E8                             defb 0,126,198,192,192,198,126,0
    2184   00:C6E8  00 7E C6 C0 C0 C6 7E 00 
    2185   00:C6F0                             defb 0,248,204,198,198,198,254,0
    2185   00:C6F0  00 F8 CC C6 C6 C6 FE 00 
    2186   00:C6F8                             defb 0,254,192,252,192,192,254,0
    2186   00:C6F8  00 FE C0 FC C0 C0 FE 00 
    2187   00:C700                             defb 0,254,192,252,192,192,192,0
    2187   00:C700  00 FE C0 FC C0 C0 C0 00 
    2188   00:C708                             defb 0,126,198,192,222,198,126,0
    2188   00:C708  00 7E C6 C0 DE C6 7E 00 
    2189   00:C710                             defb 0,198,198,254,198,198,198,0
    2189   00:C710  00 C6 C6 FE C6 C6 C6 00 
    2190   00:C718                             defb 0,126,24,24,24,24,126,0
    2190   00:C718  00 7E 18 18 18 18 7E 00 
    2191   00:C720                             defb 0,6,6,6,198,198,252,0
    2191   00:C720  00 06 06 06 C6 C6 FC 00 
    2192   00:C728                             defb 0,198,204,248,222,198,198,0
    2192   00:C728  00 C6 CC F8 DE C6 C6 00 
    2193   00:C730                             defb 0,192,192,192,192,192,254,0
    2193   00:C730  00 C0 C0 C0 C0 C0 FE 00 
    2194   00:C738                             defb 0,198,238,254,198,198,198,0
    2194   00:C738  00 C6 EE FE C6 C6 C6 00 
    2195   00:C740                             defb 0,198,230,246,222,206,198,0
    2195   00:C740  00 C6 E6 F6 DE CE C6 00 
    2196   00:C748                             defb 0,126,198,198,198,198,124,0
    2196   00:C748  00 7E C6 C6 C6 C6 7C 00 
    2197   00:C750                             defb 0,252,198,198,254,192,192,0
    2197   00:C750  00 FC C6 C6 FE C0 C0 00 
    2198   00:C758                             defb 0,126,198,198,246,222,124,0
    2198   00:C758  00 7E C6 C6 F6 DE 7C 00 
    2199   00:C760                             defb 0,254,198,198,252,204,198,0
    2199   00:C760  00 FE C6 C6 FC CC C6 00 
    2200   00:C768                             defb 0,252,192,254,6,198,254,0
    2200   00:C768  00 FC C0 FE 06 C6 FE 00 
    2201   00:C770                             defb 0,254,48,48,48,48,48,0
    2201   00:C770  00 FE 30 30 30 30 30 00 
    2202   00:C778                             defb 0,198,198,198,198,198,126,0
    2202   00:C778  00 C6 C6 C6 C6 C6 7E 00 
    2203   00:C780                             defb 0,198,198,198,198,108,56,0
    2203   00:C780  00 C6 C6 C6 C6 6C 38 00 
    2204   00:C788                             defb 0,198,198,198,198,254,110,0
    2204   00:C788  00 C6 C6 C6 C6 FE 6E 00 
    2205   00:C790                             defb 0,198,108,56,56,108,198,0
    2205   00:C790  00 C6 6C 38 38 6C C6 00 
    2206   00:C798                             defb 0,134,204,120,48,48,48,0
    2206   00:C798  00 86 CC 78 30 30 30 00 
    2207   00:C7A0                             defb 0,254,12,24,48,96,254,0
    2207   00:C7A0  00 FE 0C 18 30 60 FE 00 
    2208   00:C7A8                             defb 0,30,24,24,24,24,30,0
    2208   00:C7A8  00 1E 18 18 18 18 1E 00 
    2209   00:C7B0                             defb 0,0,192,96,48,24,12,0
    2209   00:C7B0  00 00 C0 60 30 18 0C 00 
    2210   00:C7B8                             defb 0,240,48,48,48,48,240,0
    2210   00:C7B8  00 F0 30 30 30 30 F0 00 
    2211   00:C7C0                             defb 0,48,120,252,48,48,48,0
    2211   00:C7C0  00 30 78 FC 30 30 30 00 
    2212   00:C7C8                             defb 0,0,0,0,0,0,0,0
    2212   00:C7C8  00 00 00 00 00 00 00 00 
    2213   00:C7D0                             defb 0,60,102,248,96,96,254,0
    2213   00:C7D0  00 3C 66 F8 60 60 FE 00 
    2214   00:C7D8                             defb 0,0,120,12,124,204,124,0
    2214   00:C7D8  00 00 78 0C 7C CC 7C 00 
    2215   00:C7E0                             defb 0,96,96,124,102,102,124,0
    2215   00:C7E0  00 60 60 7C 66 66 7C 00 
    2216   00:C7E8                             defb 0,0,60,96,96,96,60,0
    2216   00:C7E8  00 00 3C 60 60 60 3C 00 
    2217   00:C7F0                             defb 0,12,12,124,204,204,124,0
    2217   00:C7F0  00 0C 0C 7C CC CC 7C 00 
    2218   00:C7F8                             defb 0,0,120,204,248,192,124,0
    2218   00:C7F8  00 00 78 CC F8 C0 7C 00 
    2219   00:C800                             defb 0,28,48,56,48,48,48,0
    2219   00:C800  00 1C 30 38 30 30 30 00 
    2220   00:C808                             defb 0,0,124,204,204,124,12,120
    2220   00:C808  00 00 7C CC CC 7C 0C 78 
    2221   00:C810                             defb 0,192,192,248,204,204,204,0
    2221   00:C810  00 C0 C0 F8 CC CC CC 00 
    2222   00:C818                             defb 0,48,0,112,48,48,120,0
    2222   00:C818  00 30 00 70 30 30 78 00 
    2223   00:C820                             defb 0,12,0,12,12,12,108,56
    2223   00:C820  00 0C 00 0C 0C 0C 6C 38 
    2224   00:C828                             defb 0,96,120,112,112,120,108,0
    2224   00:C828  00 60 78 70 70 78 6C 00 
    2225   00:C830                             defb 0,48,48,48,48,48,28,0
    2225   00:C830  00 30 30 30 30 30 1C 00 
    2226   00:C838                             defb 0,0,248,252,252,252,252,0
    2226   00:C838  00 00 F8 FC FC FC FC 00 
    2227   00:C840                             defb 0,0,248,204,204,204,204,0
    2227   00:C840  00 00 F8 CC CC CC CC 00 
    2228   00:C848                             defb 0,0,120,204,204,204,120,0
    2228   00:C848  00 00 78 CC CC CC 78 00 
    2229   00:C850                             defb 0,0,248,204,204,248,192,192
    2229   00:C850  00 00 F8 CC CC F8 C0 C0 
    2230   00:C858                             defb 0,0,124,204,204,124,12,14
    2230   00:C858  00 00 7C CC CC 7C 0C 0E 
    2231   00:C860                             defb 0,0,60,96,96,96,96,0
    2231   00:C860  00 00 3C 60 60 60 60 00 
    2232   00:C868                             defb 0,0,120,192,120,12,248,0
    2232   00:C868  00 00 78 C0 78 0C F8 00 
    2233   00:C870                             defb 0,48,120,48,48,48,28,0
    2233   00:C870  00 30 78 30 30 30 1C 00 
    2234   00:C878                             defb 0,0,204,204,204,204,120,0
    2234   00:C878  00 00 CC CC CC CC 78 00 
    2235   00:C880                             defb 0,0,204,204,120,120,48,0
    2235   00:C880  00 00 CC CC 78 78 30 00 
    2236   00:C888                             defb 0,0,204,252,252,252,120,0
    2236   00:C888  00 00 CC FC FC FC 78 00 
    2237   00:C890                             defb 0,0,204,120,48,120,204,0
    2237   00:C890  00 00 CC 78 30 78 CC 00 
    2238   00:C898                             defb 0,0,204,204,204,124,12,120
    2238   00:C898  00 00 CC CC CC 7C 0C 78 
    2239   00:C8A0                             defb 0,0,252,24,48,96,252,0
    2239   00:C8A0  00 00 FC 18 30 60 FC 00 
    2240   00:C8A8                             defb 0,30,24,112,24,24,30,0
    2240   00:C8A8  00 1E 18 70 18 18 1E 00 
    2241   00:C8B0                             defb 0,24,24,24,24,24,24,0
    2241   00:C8B0  00 18 18 18 18 18 18 00 
    2242   00:C8B8                             defb 0,240,48,28,48,48,240,0
    2242   00:C8B8  00 F0 30 1C 30 30 F0 00 
    2243   00:C8C0                             defb 0,60,120,0,0,0,0,0
    2243   00:C8C0  00 3C 78 00 00 00 00 00 
    2244   00:C8C8                             defb 124,198,187,227,227,187,198,124
    2244   00:C8C8  7C C6 BB E3 E3 BB C6 7C 
    2245   00:C8D0  (00:C8D0)           jtab   equ $
    2246   00:C8D0                             defb 248,250,252,254,254,255,255,255,0,0,0,1,1,1,2,2,4,6,8,8,8,99
    2246   00:C8D0  F8 FA FC FE FE FF FF FF 00 00 00 01 01 01 02 02 
    2246   00:C8E0  04 06 08 08 08 63 
    2247   00:C8E6                      keys   defb 38,86,65,34,82,85,37,85,37,69,101
    2247   00:C8E6  26 56 41 22 52 55 25 55 25 45 65 
    2248   00:C8F1                      
    2249   00:C8F1                      g; Game engine code --------------------------------------------------------------
    2250   00:C8F1                      ;
    2251   00:C8F1                      ; Arcade Game Designer.
    2252   00:C8F1                      ; (C) 2008 - 2019 Jonathan Cauldwell.
    2253   00:C8F1                      ; VZ200 Engine b1.8
    2254   00:C8F1                      
    2255   00:C8F1                      ; VZ200 specifics --------------------------------------------------------------
    2256   00:C8F1                      
    2257   00:C8F1                      ; Standard memory usage in MC-1000 with 6KB RAM:
    2258   00:C8F1                      ; $0000   $4000   $6800   $7000   $7800 $7AE9  $9000   $ffff
    2259   00:C8F1                      ;   |       |       |       |       |      |     |       |
    2260   00:C8F1                      ;   XXXXXXXX                                           		16Kb BASIC ROMS
    2261   00:C8F1                      ;	    xxxxxxxx						10Kb Reserved for ROM Cartridges 
    2262   00:C8F1                      ;		    xxxxxxxx					Keyboard, Cassette, Speaker
    2263   00:C8F1                      ;			    xxxxxxxx				2Kb Video RAM
    2264   00:C8F1                      ;				    xxxxxxxxxxxxx		6Kb User RAM
    2265   00:C8F1                      ;						 xxxxxxxxx  	16Kb Memory expansion module area
    2266   00:C8F1                      ;					   				
    2267   00:C8F1                      ;           				   XXX-->          	BASIC program + variables.
    2268   00:C8F1                      ; 
    2269   00:C8F1                      
    2270   00:C8F1                      ;----------------------------------------------------------------------------
    2271   00:C8F1                      ; Flag options
    2272   00:C8F1                      ;
    2273   00:C8F1                      ; Change these settings to match the hardware settings in VZem
    2274   00:C8F1                      ;----------------------------------------------------------------------------
    2275   00:C8F1                      
    2276   00:C8F1  (00:0001)           RFLAG = 1			; 16KB RAM expansion
    2277   00:C8F1  (00:0000)           CFLAG = 0			; Colourset 0/1
    2278   00:C8F1                      
    2279   00:C8F1                      ;----------------------------------------------------------------------------
    2280   00:C8F1                      
    2281   00:C8F1                      IF IFLAG = 1
    2282   00:C8F1  (00:00FF)           FILL	equ 255
    2283   00:C8F1                      ELSE
    2284   00:C8F1                    ~ FILL	equ 0
    2285   00:C8F1                    ~ ENDIF
    2286   00:C8F1                      
    2287   00:C8F1                      IF CFLAG = 1
    2288   00:C8F1                    ~ COL_OR	equ 8+16
    2289   00:C8F1                    ~ COL_AND	equ $ff
    2290   00:C8F1                    ~ ELSE
    2291   00:C8F1  (00:0008)           COL_OR	equ 8
    2292   00:C8F1  (00:00EF)           COL_AND	equ $ef
    2293   00:C8F1                      ENDIF
    2294   00:C8F1                      
    2295   00:C8F1                      IF XFLAG = 1
    2296   00:C8F1                    ~ GFX_MOD	equ 2
    2297   00:C8F1                    ~ ELSE
    2298   00:C8F1  (00:0000)           GFX_MOD	equ 0
    2299   00:C8F1                      ENDIF
    2300   00:C8F1                      
    2301   00:C8F1                      IF MFLAG = 1
    2302   00:C8F1                    ~ obj_len = 16
    2303   00:C8F1                    ~ ELSE
    2304   00:C8F1  (00:0020)           obj_len = 32
    2305   00:C8F1                      ENDIF
    2306   00:C8F1                      
    2307   00:C8F1                      
    2308   00:C8F1                      ; Global definitions ------------------------------------------------------------
    2309   00:C8F1                      
    2310   00:C8F1                      ; System addresses.
    2311   00:C8F1                      
    2312   00:C8F1  (00:7000)           VRAM	equ $7000           	; Start of video display RAM
    2313   00:C8F1  (00:0000)           ROM	equ $0000           	; start of 16KB ROM.
    2314   00:C8F1  (00:687F)           KEY	equ $687F            	; Memory location to begin keyboard scan
    2315   00:C8F1  (00:6800)           MODE	equ $6800           	; set video mode (MC6847 mode pins):
    2316   00:C8F1                                                 	; - bit 3 = 0: Text-only mode
    2317   00:C8F1                                                 	; - bit 3 = 1: Mode(1) Graphics-only hires mode
    2318   00:C8F1                      
    2319   00:C8F1  (00:F800)           RAMTOP	equ $B800 + RFLAG * 16384	; in unexpanded VZ300.
    2320   00:C8F1  (00:F500)           MAP	equ RAMTOP-32*SCRHGT	; properties map buffer. 32*8 = 256, fits exactly into the strings+user areas.
    2321   00:C8F1  (00:F400)           STACK	equ MAP-256		; Set top 256 bytes for Z80 stack.
    2322   00:C8F1                      
    2323   00:C8F1                      ; Block characteristics.
    2324   00:C8F1                      
    2325   00:C8F1  (00:0001)           PLATFM	equ 1			; platform.
    2326   00:C8F1  (00:0002)           WALL	equ PLATFM + 1		; solid wall.
    2327   00:C8F1  (00:0003)           LADDER	equ WALL + 1		; ladder.
    2328   00:C8F1  (00:0004)           FODDER	equ LADDER + 1		; fodder block.
    2329   00:C8F1  (00:0005)           DEADLY	equ FODDER + 1		; deadly block.
    2330   00:C8F1  (00:0006)           CUSTOM	equ DEADLY + 1		; custom block.
    2331   00:C8F1  (00:0007)           WATER	equ CUSTOM + 1		; water block.
    2332   00:C8F1  (00:0008)           COLECT	equ WATER + 1		; collectable block.
    2333   00:C8F1  (00:0009)           NUMTYP	equ COLECT + 1		; number of types.
    2334   00:C8F1                      
    2335   00:C8F1                      ; Sprites.
    2336   00:C8F1                      
    2337   00:C8F1  (00:000C)           NUMSPR	equ 12			; number of sprites.
    2338   00:C8F1  (00:0011)           TABSIZ	equ 17			; size of each entry.
    2339   00:C8F1  (00:00CC)           SPRBUF	equ NUMSPR * TABSIZ	; size of entire table.
    2340   00:C8F1  (00:0004)           NMESIZ	equ 4			; bytes stored in nmetab for each sprite.
    2341   00:C8F1  (00:0008)           X	equ 8			; new x coordinate of sprite.
    2342   00:C8F1  (00:0009)           Y	equ X + 1		; new y coordinate of sprite.
    2343   00:C8F1  (00:0005)           PAM1ST	equ 5			; first sprite parameter, old x (ix+5).
    2344   00:C8F1                      
    2345   00:C8F1                      IF MFLAG = 1
    2346   00:C8F1                    ~ COLDIST	equ 7			; collision distance
    2347   00:C8F1                    ~ ELSE
    2348   00:C8F1  (00:000F)           COLDIST	equ 15			; collision distance
    2349   00:C8F1                      ENDIF
    2350   00:C8F1                      
    2351   00:C8F1                      ; Particle engine.
    2352   00:C8F1                      
    2353   00:C8F1  (00:0037)           NUMSHR	equ 55			; pieces of shrapnel.
    2354   00:C8F1  (00:0006)           SHRSIZ	equ 6			; bytes per particle.
    2355   00:C8F1  (00:F2B6)           SHRAPN	equ STACK-NUMSHR*SHRSIZ	; shrapnel table, just below stack area.
    2356   00:C8F1                      
    2357   00:C8F1                      ;----------------------------------------------------------------------------
    2358   00:C8F1                      ; Game starts here.
    2359   00:C8F1                      ;----------------------------------------------------------------------------
    2360   00:C8F1                      
    2361   00:C8F1  (00:C8F1)           start	equ $
    2362   00:C8F1  F3                  	di
    2363   00:C8F2  21 41 78            	ld hl,$7841		; Cursor flashrate
    2364   00:C8F5  36 00               	ld (hl),0
    2365   00:C8F7                      
    2366   00:C8F7  31 00 F5            	ld sp,STACK+256		; Set Stackpointer
    2367   00:C8FA                      
    2368   00:C8FA                      ; Set interrupt flag
    2369   00:C8FA                      
    2370   00:C8FA  21 7D 78            	ld hl,$787d		; redirect interrupts to counting routine.
    2371   00:C8FD  01 24 C9            	ld bc,cntint		; address of interrupt counting routine.
    2372   00:C900  36 C3               	ld (hl),195		; JP opcode
    2373   00:C902  23                  	inc hl
    2374   00:C903  71                  	ld (hl),c		; lb irqroutine
    2375   00:C904  23                  	inc hl
    2376   00:C905  70                  	ld (hl),b		; hb irqroutine
    2377   00:C906  FB                  	ei
    2378   00:C907                      
    2379   00:C907                      IF XFLAG = 1
    2380   00:C907                    ~ 	ld a,(XBANK)
    2381   00:C907                    ~ 	out (XPORT),a
    2382   00:C907                    ~ ENDIF
    2383   00:C907                      
    2384   00:C907                      IF XFLAG = 2
    2385   00:C907  21 23 C9            	ld hl,XBANK
    2386   00:C90A  7E                  	ld a,(hl)
    2387   00:C90B  C6 1C               	add a,XMODE
    2388   00:C90D  D3 20               	out (XPORT),a
    2389   00:C90F                      ENDIF
    2390   00:C90F                      
    2391   00:C90F  3A 00 68            	ld a,(MODE)
    2392   00:C912  F6 08               	or COL_OR+GFX_MOD	; select graphic mode 
    2393   00:C914  E6 EF               	and COL_AND		; select background colour	
    2394   00:C916                      
    2395   00:C916                      IF XFLAG = 1
    2396   00:C916                    ~ 	ld (30779),a
    2397   00:C916                    ~ ENDIF
    2398   00:C916                      
    2399   00:C916  32 00 68            	ld (MODE),a		; enable MODE(1)
    2400   00:C919                      reboot
    2401   00:C919  CD 49 CC            	call cls		; clear screen.
    2402   00:C91C  CD CC CF            	call game		; start the game.
    2403   00:C91F  18 F8               	jr reboot		; keep looping
    2404   00:C921                      
    2405   00:C921  00                  joyval	defb 0			; joystick reading.
    2406   00:C922  00                  frmno	defb 0			; selected frame.
    2407   00:C923  00                  XBANK	defb 0			; Extended grahics mod bank
    2408   00:C924                      
    2409   00:C924                      cntint
    2410   00:C924  E5                  	push hl
    2411   00:C925  21 55 C9            	ld hl,clock         ; game frame.
    2412   00:C928  34                  	inc (hl)            ; advance the frame.
    2413   00:C929  E1                  	pop hl
    2414   00:C92A  E1                  	pop hl
    2415   00:C92B  C3 D5 2E            	jp $2ed5
    2416   00:C92E                      
    2417   00:C92E                      
    2418   00:C92E  C9                  	ret                ; return from interrupt.
    2419   00:C92F                      
    2420   00:C92F                      ;----------------------------------------------------------------------------
    2421   00:C92F                      ; Variables
    2422   00:C92F                      ;----------------------------------------------------------------------------
    2423   00:C92F                      
    2424   00:C92F                      ; Don't change the order of these four.  Menu routine relies on winlft following wintop.
    2425   00:C92F                      
    2426   00:C92F  01                  wintop defb WINDOWTOP      ; top of window.
    2427   00:C930  01                  winlft defb WINDOWLFT      ; left edge.
    2428   00:C931  12                  winhgt defb WINDOWHGT      ; window height.
    2429   00:C932  1E                  winwid defb WINDOWWID      ; window width.
    2430   00:C933                      
    2431   00:C933  18                  numob  defb NUMOBJ         ; number of objects in game.
    2432   00:C934                      
    2433   00:C934                      ; Variables start here.
    2434   00:C934                      ; Pixel versions of wintop, winlft, winhgt, winwid.
    2435   00:C934                      
    2436   00:C934  08                  wntopx defb (8 * WINDOWTOP)
    2437   00:C935  08                  wnlftx defb (8 * WINDOWLFT)
    2438   00:C936  88                  wnbotx defb ((WINDOWTOP * 8) + (WINDOWHGT * 8) - 16)
    2439   00:C937  E6                  wnrgtx defb ((WINDOWLFT * 8) + (WINDOWWID * 8) - 16)-2
    2440   00:C938                      
    2441   00:C938  00                  scno   defb 0              ; present screen number.
    2442   00:C939  03                  numlif defb 3              ; number of lives.
    2443   00:C93A  00                  vara   defb 0              ; general-purpose variable.
    2444   00:C93B  00                  varb   defb 0              ; general-purpose variable.
    2445   00:C93C  00                  varc   defb 0              ; general-purpose variable.
    2446   00:C93D  00                  vard   defb 0              ; general-purpose variable.
    2447   00:C93E  00                  vare   defb 0              ; general-purpose variable.
    2448   00:C93F  00                  varf   defb 0              ; general-purpose variable.
    2449   00:C940  00                  varg   defb 0              ; general-purpose variable.
    2450   00:C941  00                  varh   defb 0              ; general-purpose variable.
    2451   00:C942  00                  vari   defb 0              ; general-purpose variable.
    2452   00:C943  00                  varj   defb 0              ; general-purpose variable.
    2453   00:C944  00                  vark   defb 0              ; general-purpose variable.
    2454   00:C945  00                  varl   defb 0              ; general-purpose variable.
    2455   00:C946  00                  varm   defb 0              ; general-purpose variable.
    2456   00:C947  00                  varn   defb 0              ; general-purpose variable.
    2457   00:C948  00                  varo   defb 0              ; general-purpose variable.
    2458   00:C949  00                  varp   defb 0              ; general-purpose variable.
    2459   00:C94A  00                  varq   defb 0              ; general-purpose variable.
    2460   00:C94B  00                  varr   defb 0              ; general-purpose variable.
    2461   00:C94C  00                  vars   defb 0              ; general-purpose variable.
    2462   00:C94D  00                  vart   defb 0              ; general-purpose variable.
    2463   00:C94E  00                  varu   defb 0              ; general-purpose variable.
    2464   00:C94F  00                  varv   defb 0              ; general-purpose variable.
    2465   00:C950  00                  varw   defb 0              ; general-purpose variable.
    2466   00:C951  00                  varz   defb 0              ; general-purpose variable.
    2467   00:C952  00                  contrl defb 0              ; control: 0 = keyboard, 1 = Joystick A, 2 = Joystick B.
    2468   00:C953  00                  charx  defb 0              ; cursor x position.
    2469   00:C954  00                  chary  defb 0              ; cursor y position.
    2470   00:C955  00                  clock  defb 0              ; last clock reading.
    2471   00:C956  FF                  varrnd defb 255            ; last random number.
    2472   00:C957  FE                  varobj defb 254            ; last object number.
    2473   00:C958  FF                  varopt defb 255            ; last option chosen from menu.
    2474   00:C959  FF                  varblk defb 255            ; block type.
    2475   00:C95A  00                  nexlev defb 0              ; next level flag.
    2476   00:C95B  00                  restfl defb 0              ; restart screen flag.
    2477   00:C95C  00                  deadf  defb 0              ; dead flag.
    2478   00:C95D  00                  gamwon defb 0              ; game won flag.
    2479   00:C95E  00                  dispx  defb 0              ; cursor x position.
    2480   00:C95F  00                  dispy  defb 0              ; cursor y position.
    2481   00:C960  00                  loopa  defb 0              ; loop counter system variable.
    2482   00:C961  00                  loopb  defb 0              ; loop counter system variable.
    2483   00:C962  00                  loopc  defb 0              ; loop counter system variable.
    2484   00:C963                      
    2485   00:C963                      ; Make sure the next two variables appear together in this exact order.
    2486   00:C963  00                  bgmask defb %00000000      ; background color mask. [00|00|00|00]
    2487   00:C964  FF                  fgmask defb %11111111      ; foreground color mask. [11|11|11|11]
    2488   00:C965                      
    2489   00:C965                      ; Make sure pointers are arranged in the same order as the data itself.
    2490   00:C965                      
    2491   00:C965  0A C0               frmptr defw frmlst         ; sprite frames.
    2492   00:C967  86 9D               blkptr defw chgfx          ; block graphics.
    2493   00:C969                      ;<zx>
    2494   00:C969  56 A0               colptr defw bcol           ; address of char colours.
    2495   00:C96B                      ;</zx>
    2496   00:C96B  B0 A0               proptr defw bprop          ; address of char properties.
    2497   00:C96D  D9 8A               scrptr defw scdat          ; address of screens.
    2498   00:C96F  2A C0               nmeptr defw nmedat         ; enemy start positions.
    2499   00:C971                      
    2500   00:C971                      ;----------------------------------------------------------------------------
    2501   00:C971                      ; Assorted game routines which can go in contended memory.
    2502   00:C971                      ;----------------------------------------------------------------------------
    2503   00:C971                      
    2504   00:C971                      ; Modify for inventory.
    2505   00:C971                      
    2506   00:C971  21 E4 CA            minve  ld hl,invdis        ; routine address.
    2507   00:C974  22 FC C9                   ld (mod0+1),hl      ; set up menu routine.
    2508   00:C977  22 A2 C9                   ld (mod2+1),hl      ; set up count routine.
    2509   00:C97A  21 F1 CA                   ld hl,fopt          ; find option from available objects.
    2510   00:C97D  22 74 CA                   ld (mod1+1),hl      ; set up routine.
    2511   00:C980  18 0F                      jr dbox             ; do menu routine.
    2512   00:C982                      
    2513   00:C982                      ; Modify for menu.
    2514   00:C982                      
    2515   00:C982  21 69 D5            mmenu  ld hl,always        ; routine address.
    2516   00:C985  22 FC C9                   ld (mod0+1),hl      ; set up routine.
    2517   00:C988  22 A2 C9                   ld (mod2+1),hl      ; set up count routine.
    2518   00:C98B  21 A3 CA                   ld hl,fstd          ; standard option selection.
    2519   00:C98E  22 74 CA                   ld (mod1+1),hl      ; set up routine.
    2520   00:C991                      
    2521   00:C991                      ; Drop through into box routine.
    2522   00:C991                      
    2523   00:C991                      ; Work out size of box for message or menu.
    2524   00:C991                      
    2525   00:C991  21 0D 88            dbox   ld hl,msgdat        ; pointer to messages.
    2526   00:C994  CD F4 D7                   call getwrd         ; get message number.
    2527   00:C997  E5                         push hl             ; store pointer to message.
    2528   00:C998  16 01                      ld d,1              ; height.
    2529   00:C99A  AF                         xor a               ; start at object zero.
    2530   00:C99B  32 BC D4                   ld (combyt),a       ; store number of object in combyt.
    2531   00:C99E  5F                         ld e,a              ; maximum width.
    2532   00:C99F  06 00               dbox5  ld b,0              ; this line's width.
    2533   00:C9A1  CD 69 D5            mod2   call always         ; item in player's possession?
    2534   00:C9A4  20 01                      jr nz,dbox6         ; not in inventory, skip this line.
    2535   00:C9A6  14                         inc d               ; add to tally.
    2536   00:C9A7  7E                  dbox6  ld a,(hl)           ; get character.
    2537   00:C9A8  23                         inc hl              ; next character.
    2538   00:C9A9  FE 2C                      cp ','              ; reached end of line?
    2539   00:C9AB  28 0B                      jr z,dbox3          ; yes.
    2540   00:C9AD  FE 0D                      cp 13               ; reached end of line?
    2541   00:C9AF  28 07                      jr z,dbox3          ; yes.
    2542   00:C9B1  04                         inc b               ; add to this line's width.
    2543   00:C9B2  A7                         and a               ; end of message?
    2544   00:C9B3  FA BF C9                   jp m,dbox4          ; yes, end count.
    2545   00:C9B6  18 EF                      jr dbox6            ; repeat until we find the end.
    2546   00:C9B8  7B                  dbox3  ld a,e              ; maximum line width.
    2547   00:C9B9  B8                         cp b                ; have we exceeded longest so far?
    2548   00:C9BA  30 E3                      jr nc,dbox5         ; no, carry on looking.
    2549   00:C9BC  58                         ld e,b              ; make this the widest so far.
    2550   00:C9BD  18 E0                      jr dbox5            ; keep looking.
    2551   00:C9BF  7B                  dbox4  ld a,e              ; maximum line width.
    2552   00:C9C0  B8                         cp b                ; have we exceeded longest so far?
    2553   00:C9C1  30 01                      jr nc,dbox8         ; no, carry on looking.
    2554   00:C9C3  58                         ld e,b              ; final line is the longest so far.
    2555   00:C9C4  15                  dbox8  dec d               ; decrement items found.
    2556   00:C9C5  CA C2 CA                   jp z,dbox15         ; total was zero.
    2557   00:C9C8  7B                         ld a,e              ; longest line.
    2558   00:C9C9  A7                         and a               ; was it zero?
    2559   00:C9CA  CA C2 CA                   jp z,dbox15         ; total was zero.
    2560   00:C9CD  ED 53 2A CB                ld (bwid),de        ; set up size.
    2561   00:C9D1                      
    2562   00:C9D1                      ; That's set up our box size.
    2563   00:C9D1                      
    2564   00:C9D1  3A 31 C9                   ld a,(winhgt)       ; window height in characters.
    2565   00:C9D4  92                         sub d               ; subtract height of box.
    2566   00:C9D5  1F                         rra                 ; divide by 2.
    2567   00:C9D6  21 2F C9                   ld hl,wintop        ; top edge of window.
    2568   00:C9D9  86                         add a,(hl)          ; add displacement.
    2569   00:C9DA  32 2C CB                   ld (btop),a         ; set up box top.
    2570   00:C9DD  3A 32 C9                   ld a,(winwid)       ; window width in characters.
    2571   00:C9E0  93                         sub e               ; subtract box width.
    2572   00:C9E1  1F                         rra                 ; divide by 2.
    2573   00:C9E2  23                         inc hl              ; left edge of window.
    2574   00:C9E3  86                         add a,(hl)          ; add displacement.
    2575   00:C9E4  32 2D CB                   ld (blft),a         ; box left.
    2576   00:C9E7  21 D0 C4                   ld hl,font-256      ; font.
    2577   00:C9EA  22 83 D2                   ld (grbase),hl      ; set up for text display.
    2578   00:C9ED  E1                         pop hl              ; restore message pointer.
    2579   00:C9EE  3A 2C CB                   ld a,(btop)         ; box top.
    2580   00:C9F1  32 5E C9                   ld (dispx),a        ; set display coordinate.
    2581   00:C9F4  AF                         xor a               ; start at object zero.
    2582   00:C9F5  32 BC D4                   ld (combyt),a       ; store number of object in combyt.
    2583   00:C9F8  3A BC D4            dbox2  ld a,(combyt)       ; get object number.
    2584   00:C9FB  CD 69 D5            mod0   call always         ; check inventory for display.
    2585   00:C9FE  C2 B0 CA                   jp nz,dbox13        ; not in inventory, skip this line.
    2586   00:CA01                      
    2587   00:CA01  3A 2D CB                   ld a,(blft)         ; box left.
    2588   00:CA04  32 5F C9                   ld (dispy),a        ; set left display position.
    2589   00:CA07  3A 2A CB                   ld a,(bwid)         ; box width.
    2590   00:CA0A  47                         ld b,a              ; store width.
    2591   00:CA0B  7E                  dbox0  ld a,(hl)           ; get character.
    2592   00:CA0C  FE 2C                      cp ','              ; end of line?
    2593   00:CA0E  28 35                      jr z,dbox1          ; yes, next one.
    2594   00:CA10  FE 0D                      cp 13               ; end of option?
    2595   00:CA12  28 31                      jr z,dbox1          ; yes, on to next.
    2596   00:CA14  05                         dec b               ; one less to display.
    2597   00:CA15  E6 7F                      and 127             ; remove terminator.
    2598   00:CA17  C5                         push bc             ; store characters remaining.
    2599   00:CA18  E5                         push hl             ; store address on stack.
    2600   00:CA19                      
    2601   00:CA19                             ; no attribute.
    2602   00:CA19                      
    2603   00:CA19  CD AE D3                   call pchr           ; display on screen.
    2604   00:CA1C  E1                         pop hl              ; retrieve address of next character.
    2605   00:CA1D  C1                         pop bc              ; chars left for this line.
    2606   00:CA1E  7E                         ld a,(hl)           ; get character.
    2607   00:CA1F  23                         inc hl              ; next character.
    2608   00:CA20  FE 80                      cp 128              ; end of message?
    2609   00:CA22  D2 53 CA                   jp nc,dbox7         ; yes, job done.
    2610   00:CA25  78                         ld a,b              ; chars remaining.
    2611   00:CA26  A7                         and a               ; are any left?
    2612   00:CA27  20 E2                      jr nz,dbox0         ; yes, continue.
    2613   00:CA29                      
    2614   00:CA29                      ; Reached limit of characters per line.
    2615   00:CA29                      
    2616   00:CA29  7E                  dbox9  ld a,(hl)           ; get character.
    2617   00:CA2A  23                         inc hl              ; next one.
    2618   00:CA2B  FE 2C                      cp ','              ; another line?
    2619   00:CA2D  28 1A                      jr z,dbox10         ; yes, do next line.
    2620   00:CA2F  FE 0D                      cp 13               ; another line?
    2621   00:CA31  28 16                      jr z,dbox10         ; yes, on to next.
    2622   00:CA33  FE 80                      cp 128              ; end of message?
    2623   00:CA35  30 23                      jr nc,dbox11        ; yes, finish message.
    2624   00:CA37  18 F0                      jr dbox9
    2625   00:CA39                      
    2626   00:CA39                      ; Fill box to end of line.
    2627   00:CA39                      
    2628   00:CA39  E5                  dboxf  push hl             ; store address on stack.
    2629   00:CA3A  C5                         push bc             ; store characters remaining.
    2630   00:CA3B                      
    2631   00:CA3B                             ; no attribute.
    2632   00:CA3B                      
    2633   00:CA3B  3E 20                      ld a,32             ; space character.
    2634   00:CA3D  CD AE D3                   call pchr           ; display character.
    2635   00:CA40  C1                         pop bc              ; retrieve character count.
    2636   00:CA41  E1                         pop hl              ; retrieve address of next character.
    2637   00:CA42  10 F5                      djnz dboxf          ; repeat for remaining chars on line.
    2638   00:CA44  C9                         ret
    2639   00:CA45  23                  dbox1  inc hl              ; skip character.
    2640   00:CA46  CD 39 CA                   call dboxf          ; fill box out to right side.
    2641   00:CA49  3A 5E C9            dbox10 ld a,(dispx)        ; x coordinate.
    2642   00:CA4C  3C                         inc a               ; down a line.
    2643   00:CA4D  32 5E C9                   ld (dispx),a        ; next position.
    2644   00:CA50  C3 F8 C9                   jp dbox2            ; next line.
    2645   00:CA53  78                  dbox7  ld a,b              ; chars remaining.
    2646   00:CA54  A7                         and a               ; are any left?
    2647   00:CA55  28 03                      jr z,dbox11         ; no, nothing to draw.
    2648   00:CA57  CD 39 CA                   call dboxf          ; fill message to line.
    2649   00:CA5A                      
    2650   00:CA5A                      ; Drawn the box menu, now select option.
    2651   00:CA5A                      
    2652   00:CA5A  3A 2C CB            dbox11 ld a,(btop)         ; box top.
    2653   00:CA5D  32 5E C9                   ld (dispx),a        ; set bar position.
    2654   00:CA60  CD BE D6            dbox14 call joykey         ; get controls.
    2655   00:CA63  E6 1F                      and %00011111       ; anything pressed?
    2656   00:CA65  20 F9                      jr nz,dbox14        ; yes, debounce it.
    2657   00:CA67  CD C4 CA                   call dbar           ; draw bar.
    2658   00:CA6A  CD BE D6            dbox12 call joykey         ; get controls.
    2659   00:CA6D  E6 1C                      and %00011100       ; anything pressed? (fire, up or down)
    2660   00:CA6F  28 F9                      jr z,dbox12         ; no, nothing.
    2661   00:CA71  E6 10                      and %00010000       ; fire button pressed?
    2662   00:CA73  C2 A3 CA            mod1   jp nz,fstd          ; yes, job done.
    2663   00:CA76  CD C4 CA                   call dbar           ; delete bar.
    2664   00:CA79  3A 21 C9                   ld a,(joyval)       ; joystick reading.
    2665   00:CA7C  E6 08                      and %00001000       ; going up?
    2666   00:CA7E  20 13                      jr nz,dboxu         ; yes, go up.
    2667   00:CA80  3A 5E C9                   ld a,(dispx)        ; vertical position of bar.
    2668   00:CA83  3C                         inc a               ; look down.
    2669   00:CA84  21 2C CB                   ld hl,btop          ; top of box.
    2670   00:CA87  96                         sub (hl)            ; find distance from top.
    2671   00:CA88  2B                         dec hl              ; point to height.
    2672   00:CA89  BE                         cp (hl)             ; are we at end?
    2673   00:CA8A  CA 60 CA                   jp z,dbox14         ; yes, go no further.
    2674   00:CA8D  21 5E C9                   ld hl,dispx         ; coordinate.
    2675   00:CA90  34                         inc (hl)            ; move bar.
    2676   00:CA91  18 CD                      jr dbox14           ; continue.
    2677   00:CA93  3A 5E C9            dboxu  ld a,(dispx)        ; vertical position of bar.
    2678   00:CA96  21 2C CB                   ld hl,btop          ; top of box.
    2679   00:CA99  BE                         cp (hl)             ; are we at the top?
    2680   00:CA9A  CA 60 CA                   jp z,dbox14         ; yes, go no further.
    2681   00:CA9D  21 5E C9                   ld hl,dispx         ; coordinate.
    2682   00:CAA0  35                         dec (hl)            ; move bar.
    2683   00:CAA1  18 BD                      jr dbox14           ; continue.
    2684   00:CAA3  3A 5E C9            fstd   ld a,(dispx)        ; bar position.
    2685   00:CAA6  21 2C CB                   ld hl,btop          ; top of menu.
    2686   00:CAA9  96                         sub (hl)            ; find selected option.
    2687   00:CAAA  32 58 C9                   ld (varopt),a       ; store the option.
    2688   00:CAAD  C3 16 CC                   jp redraw           ; redraw the screen.
    2689   00:CAB0                      
    2690   00:CAB0                      ; Option not available.  Skip this line.
    2691   00:CAB0                      
    2692   00:CAB0  7E                  dbox13 ld a,(hl)           ; get character.
    2693   00:CAB1  23                         inc hl              ; next one.
    2694   00:CAB2  FE 2C                      cp ','              ; another line?
    2695   00:CAB4  CA F8 C9                   jp z,dbox2          ; yes, do next line.
    2696   00:CAB7  FE 0D                      cp 13               ; another line?
    2697   00:CAB9  CA F8 C9                   jp z,dbox2          ; yes, on to next line.
    2698   00:CABC  A7                         and a               ; end of message?
    2699   00:CABD  FA 5A CA                   jp m,dbox11         ; yes, finish message.
    2700   00:CAC0  18 EE                      jr dbox13
    2701   00:CAC2  E1                  dbox15 pop hl              ; pop message pointer from the stack.
    2702   00:CAC3  C9                         ret
    2703   00:CAC4                      
    2704   00:CAC4  3A 2D CB            dbar   ld a,(blft)         ; box left.
    2705   00:CAC7  32 5F C9                   ld (dispy),a        ; set display coordinate.
    2706   00:CACA  CD 2E D3                   call gprad          ; get printing address.
    2707   00:CACD  EB                         ex de,hl            ; flip into hl register pair.
    2708   00:CACE  3A 2A CB                   ld a,(bwid)         ; box width.
    2709   00:CAD1  4F                         ld c,a              ; loop counter in c.
    2710   00:CAD2                      
    2711   00:CAD2  11 20 00                   ld de,32            ; distance to next line.
    2712   00:CAD5  E5                  dbar1  push hl             ; store screen address.
    2713   00:CAD6  06 08                      ld b,8              ; pixel height in b.
    2714   00:CAD8                      
    2715   00:CAD8  7E                  dbar0  ld a,(hl)           ; get screen byte.
    2716   00:CAD9  2F                         cpl                 ; reverse all bits.
    2717   00:CADA  77                         ld (hl),a           ; write back to screen.
    2718   00:CADB                      
    2719   00:CADB  19                         add hl,de           ; next line down.
    2720   00:CADC  10 FA                      djnz dbar0          ; draw rest of character.
    2721   00:CADE  E1                         pop hl              ; restore screen address.
    2722   00:CADF                      
    2723   00:CADF  2C                         inc l               ; one char right.
    2724   00:CAE0  0D                         dec c               ; decrement character counter.
    2725   00:CAE1  20 F2                      jr nz,dbar1         ; repeat for whole line.
    2726   00:CAE3  C9                         ret
    2727   00:CAE4                      
    2728   00:CAE4  E5                  invdis push hl             ; store message text pointer.
    2729   00:CAE5  D5                         push de             ; store de pair for line count.
    2730   00:CAE6  21 BC D4                   ld hl,combyt        ; object number.
    2731   00:CAE9  7E                         ld a,(hl)           ; get object number.
    2732   00:CAEA  34                         inc (hl)            ; ready for next one.
    2733   00:CAEB  CD A2 D1                   call gotob          ; check if we have object.
    2734   00:CAEE  D1                         pop de              ; retrieve de pair from stack.
    2735   00:CAEF  E1                         pop hl              ; retrieve text pointer.
    2736   00:CAF0  C9                         ret
    2737   00:CAF1                      
    2738   00:CAF1                      ; Find option selected.
    2739   00:CAF1                      
    2740   00:CAF1                      fopt
    2741   00:CAF1  CD BE D6            	call joykey		; check for fire
    2742   00:CAF4  E6 10               	and $10
    2743   00:CAF6  28 F9               	jr z,fopt
    2744   00:CAF8                      rel
    2745   00:CAF8  CD BE D6            	call joykey		; check release fire
    2746   00:CAFB  E6 10               	and $10
    2747   00:CAFD  20 F9               	jr nz,rel
    2748   00:CAFF                      
    2749   00:CAFF  3A 5E C9                   ld a,(dispx)
    2750   00:CB02  21 2C CB                   ld hl,btop          ; top of menu.
    2751   00:CB05  96                         sub (hl)            ; find selected option.
    2752   00:CB06  3C                         inc a               ; object 0 needs one iteration, 1 needs 2 and so on.
    2753   00:CB07  47                         ld b,a              ; option selected in b register.
    2754   00:CB08  21 BC D4                   ld hl,combyt        ; object number.
    2755   00:CB0B  36 00                      ld (hl),0           ; set to first item.
    2756   00:CB0D  C5                  fopt0  push bc             ; store option counter in b register.
    2757   00:CB0E  CD 1E CB                   call fobj           ; find next object in inventory.
    2758   00:CB11  C1                         pop bc              ; restore option counter.
    2759   00:CB12  10 F9                      djnz fopt0          ; repeat for relevant steps down the list.
    2760   00:CB14  3A BC D4                   ld a,(combyt)       ; get option.
    2761   00:CB17  3D                         dec a               ; one less, due to where we increment combyt.
    2762   00:CB18  32 58 C9                   ld (varopt),a       ; store the option.
    2763   00:CB1B  C3 16 CC                   jp redraw           ; redraw the screen.
    2764   00:CB1E                      
    2765   00:CB1E  21 BC D4            fobj   ld hl,combyt        ; object number.
    2766   00:CB21  7E                         ld a,(hl)           ; get object number.
    2767   00:CB22  34                         inc (hl)            ; ready for next item.
    2768   00:CB23  C8                         ret z               ; in case we loop back to zero.
    2769   00:CB24  CD A2 D1                   call gotob          ; do we have this item?
    2770   00:CB27  C8                         ret z               ; yes, it's on the list.
    2771   00:CB28  18 F4                      jr fobj             ; repeat until we find next item in pockets.
    2772   00:CB2A                      
    2773   00:CB2A  00                  bwid   defb 0              ; box/menu width.
    2774   00:CB2B  00                  blen   defb 0              ; box/menu height.
    2775   00:CB2C  00                  btop   defb 0              ; box coordinates.
    2776   00:CB2D  00                  blft   defb 0
    2777   00:CB2E                      
    2778   00:CB2E                      ; Detect keypress.
    2779   00:CB2E                      ; Note that each key causes a logic 0 to appear at the bit position shown, when its row address is read.
    2780   00:CB2E                      
    2781   00:CB2E                      ;       I/O Address -----------------------------------------------
    2782   00:CB2E                      ;     (Selector)     bit 7 bit 6 bit 5  bit 4  bit 3   bit 2  bit 1  bit 0
    2783   00:CB2E                      ;row 0  0x68FE        N/A   N/A   R      Q      E              W      T		1111 1110
    2784   00:CB2E                      ;row 1  0x68FD        N/A   N/A   F      A      D      CTRL    S      G		1111 1101
    2785   00:CB2E                      ;row 2  0x68FB        N/A   N/A   V      Z      C      SHIFT   X      B		1111 1011
    2786   00:CB2E                      ;row 3  0x68F7        N/A   N/A   4      1      3              2      5		1111 0111
    2787   00:CB2E                      ;row 4  0x68EF        N/A   N/A   M      SPACE  ,              .      N		1110 1111
    2788   00:CB2E                      ;row 5  0x68DF        N/A   N/A   7      0      8      -       9      6		1101 1111
    2789   00:CB2E                      ;row 6  0x68BF        N/A   N/A   U      P      I      RETURN  O      Y		1011 1111
    2790   00:CB2E                      ;row 7  0x687F        N/A   N/A   J      ;      K      :       L      H		0111 1111
    2791   00:CB2E                      ;
    2792   00:CB2E                      ; If the '2' key were pressed, it would cause bit 1 at address 68F7H to drop to 0.
    2793   00:CB2E                      ; The data retrieved by reading that address, neglecting the 2 most significant bits 
    2794   00:CB2E                      ; which are not driven by the keyboard, would be 3DH (binary 111101).
    2795   00:CB2E                      
    2796   00:CB2E                      ; Wait for keypress.
    2797   00:CB2E                      
    2798   00:CB2E  CD B0 CB            prskey	call vsync
    2799   00:CB31  06 01               	ld b,1		; reset row
    2800   00:CB33  21 FE 68            	ld hl,$68fe	; high byte of port to read.
    2801   00:CB36                      
    2802   00:CB36                      ; Check every row
    2803   00:CB36                      
    2804   00:CB36  7D                  prskey0	ld a,l		; low byte
    2805   00:CB37  0F                  	rrca		; Adjust lb port address
    2806   00:CB38  6F                  	ld l,a
    2807   00:CB39  7E                  	ld a,(hl)	; read key
    2808   00:CB3A  E6 3F               	and $3f
    2809   00:CB3C  FE 3F               	cp $3f		; Key pressed?
    2810   00:CB3E  20 08               	jr nz,prskey1	; Yes, exit
    2811   00:CB40  04                  	inc b		; increment row counter
    2812   00:CB41  78                  	ld a,b
    2813   00:CB42  FE 09               	cp 9		; last row checked?
    2814   00:CB44  20 F0               	jr nz,prskey0	; no, repeat
    2815   00:CB46  18 E6               	jr prskey	; yes, no key pressed, check again
    2816   00:CB48                      
    2817   00:CB48                      ; Determine column
    2818   00:CB48                      
    2819   00:CB48  57                  prskey1	ld d,a
    2820   00:CB49  0E 01               	ld c,1		; reset column
    2821   00:CB4B  CB 2A               prskey2	sra d		; rotate bit out
    2822   00:CB4D  30 08               	jr nc,prskey4	; key pressed, exit
    2823   00:CB4F  0C                  	inc c		; increment column counter
    2824   00:CB50  79                  	ld a,c
    2825   00:CB51  FE 07               	cp 7		; last column checked?
    2826   00:CB53  20 F6               	jr nz,prskey2	; no, repeat
    2827   00:CB55  18 D7               prskey3	jr prskey	; yes, no key pressed, exit
    2828   00:CB57                      
    2829   00:CB57                      ; Key pressed, create keycode
    2830   00:CB57                      
    2831   00:CB57  79                  prskey4	ld a,c		; high nibble=row
    2832   00:CB58  CB 27               	sla a
    2833   00:CB5A  CB 27               	sla a
    2834   00:CB5C  CB 27               	sla a
    2835   00:CB5E  CB 27               	sla a
    2836   00:CB60  80                  	add a,b		; low nibble=column
    2837   00:CB61  F5                  	push af
    2838   00:CB62                      debounce
    2839   00:CB62  CD F4 2E            	call $2ef4
    2840   00:CB65  B7                  	or a
    2841   00:CB66  20 FA               	jr nz,debounce
    2842   00:CB68                      
    2843   00:CB68  F1                  	pop af
    2844   00:CB69  C9                  	ret
    2845   00:CB6A                      
    2846   00:CB6A                      ; Delay routine, b x 1/50 sec.
    2847   00:CB6A                      
    2848   00:CB6A                      delay
    2849   00:CB6A  CD 7B CB            	call wloop1
    2850   00:CB6D                      delay1
    2851   00:CB6D  CD 73 CB            	call wloop
    2852   00:CB70  10 F8               	djnz delay
    2853   00:CB72  C9                  	ret
    2854   00:CB73                      
    2855   00:CB73                      ; Wait loop, wait 1/50 sec
    2856   00:CB73                      
    2857   00:CB73  3A 00 68            wloop	ld a,(MODE)
    2858   00:CB76  E6 80               	and $80
    2859   00:CB78  20 F9               	jr nz,wloop
    2860   00:CB7A  C9                  	ret
    2861   00:CB7B                      
    2862   00:CB7B  3A 00 68            wloop1	ld a,(MODE)
    2863   00:CB7E  E6 80               	and $80
    2864   00:CB80  28 F9               	jr z,wloop1
    2865   00:CB82  C9                  	ret
    2866   00:CB83                      
    2867   00:CB83                      ; Clear sprite table.
    2868   00:CB83                      
    2869   00:CB83  21 F6 DD            xspr   ld hl,sprtab        ; sprite table.
    2870   00:CB86  06 CC                      ld b,SPRBUF         ; length of table.
    2871   00:CB88  36 FF               xspr0  ld (hl),255         ; clear one byte.
    2872   00:CB8A  23                         inc hl              ; move to next byte.
    2873   00:CB8B  10 FB                      djnz xspr0          ; repeat for rest of table.
    2874   00:CB8D  C9                         ret
    2875   00:CB8E                      
    2876   00:CB8E                      ; Initialise all objects.
    2877   00:CB8E                      
    2878   00:CB8E  DD 21 E8 C1         iniob  ld ix,objdta       	 ; objects table.
    2879   00:CB92  3A 33 C9                   ld a,(numob)       	 ; number of objects in the game.
    2880   00:CB95  47                         ld b,a             	 ; loop counter.
    2881   00:CB96  11 27 00                   ld de,obj_len+7           ; distance between objects.
    2882   00:CB99  DD 7E 24            iniob0 ld a,(ix+obj_len+4)       ; start screen.
    2883   00:CB9C  DD 77 21                   ld (ix+obj_len+1),a       ; set start screen.
    2884   00:CB9F  DD 7E 25                   ld a,(ix+obj_len+5)       ; find start x.
    2885   00:CBA2  DD 77 22                   ld (ix+obj_len+2),a       ; set start x.
    2886   00:CBA5  DD 7E 26                   ld a,(ix+obj_len+6)       ; get initial y.
    2887   00:CBA8  DD 77 23                   ld (ix+obj_len+3),a       ; set y coord.
    2888   00:CBAB  DD 19                      add ix,de          	 ; point to next object.
    2889   00:CBAD  10 EA                      djnz iniob0        	 ; repeat.
    2890   00:CBAF  C9                         ret
    2891   00:CBB0                      
    2892   00:CBB0                      ; Screen synchronisation.
    2893   00:CBB0                      ;
    2894   00:CBB0                      ; Located at 345C hex is a routine which can be used to produce sounds 
    2895   00:CBB0                      ; via the VZ200/300's internal piezo speaker. Before calling the routine, 
    2896   00:CBB0                      ; the HL register pair must be loaded with a number representing the pitch 
    2897   00:CBB0                      ; (frequency) of the tone to be produced, while the BC register pair must 
    2898   00:CBB0                      ; be loaded with the number of cycles of the tone required (ie the 
    2899   00:CBB0                      ; duration in cycles). All registers are used. The frequency coding used
    2900   00:CBB0                      ; is inversely proportional to frequency, ie the smaller the number loaded
    2901   00:CBB0                      ; into the HL register pair, the higher the frequency. As a guide, the low C
    2902   00:CBB0                      ; produced by the VZ200/300's SOUND command in BASIC can be produced using
    2903   00:CBB0                      ; the decimal number 526, the middle C using 529 and the high C using 127. 
    2904   00:CBB0                      ; Here is how you would use the routine to get say 75 cycles of the middle C:
    2905   00:CBB0                      
    2906   00:CBB0                      ;LD HL,259  ;set frequency code
    2907   00:CBB0                      ;LD BC,75   ;set number of cycles
    2908   00:CBB0                      ;CALL 345CH ;& call sound routine
    2909   00:CBB0                      
    2910   00:CBB0                      ; Produce sound
    2911   00:CBB0                      ;   b7
    2912   00:CBB0                      ;   b6
    2913   00:CBB0                      ;   b5 - speaker b
    2914   00:CBB0                      ;   b4 - VDU background colour
    2915   00:CBB0                      ;
    2916   00:CBB0                      ;   b3 - VDU display mode
    2917   00:CBB0                      ;   b2 - cas out msb
    2918   00:CBB0                      ;   b1 - cas out lsb
    2919   00:CBB0                      ;   b0 - speaker a
    2920   00:CBB0                      
    2921   00:CBB0                      vsync
    2922   00:CBB0                      ;       ld hl,clock         ; game frame.
    2923   00:CBB0                      ;       inc (hl)            ; advance the frame.
    2924   00:CBB0                      vsync0
    2925   00:CBB0  CD BE D6            	call joykey	; read joystick/keyboard.
    2926   00:CBB3                      
    2927   00:CBB3                      ; 	call wloop	; sync framerate with clock
    2928   00:CBB3                      
    2929   00:CBB3  3A 55 C9            	ld a,(clock)
    2930   00:CBB6  47                  	ld b,a
    2931   00:CBB7                      vsloop
    2932   00:CBB7  3A 55 C9            	ld a,(clock)
    2933   00:CBBA  B8                  	cp b
    2934   00:CBBB  28 FA               	jr z,vsloop
    2935   00:CBBD                      	
    2936   00:CBBD  3A 55 C9            	ld a,(clock)	; read clock
    2937   00:CBC0  E6 01               	and 1		; filter even frame
    2938   00:CBC2  28 03               	jr z,vsync1	; skip every even frame
    2939   00:CBC4  CD A8 CC            	call proshr	; shrapnel and stuff.
    2940   00:CBC7                      vsync1
    2941   00:CBC7  C5                  	push bc
    2942   00:CBC8  D5                  	push de
    2943   00:CBC9  E5                  	push hl
    2944   00:CBCA  3A 11 CC            	ld a,(sndtyp)	; sound to play
    2945   00:CBCD  A7                  	and a		; any sound?
    2946   00:CBCE  CA E3 CB            	jp z,vsync2	; no, skip.
    2947   00:CBD1                      snd0
    2948   00:CBD1  3A 11 CC            	ld a,(sndtyp)
    2949   00:CBD4  6F                  	ld l,a		; set pitch
    2950   00:CBD5  0E 02               	ld c,2		; set duration
    2951   00:CBD7  CD E7 CB            	call sound	; play sound
    2952   00:CBDA  3A 11 CC            	ld a,(sndtyp)
    2953   00:CBDD  3D                  	dec a		; decrement counter
    2954   00:CBDE  32 11 CC            	ld (sndtyp),a
    2955   00:CBE1  20 EE               	jr nz,snd0	; repeat if not 0
    2956   00:CBE3                      vsync2 
    2957   00:CBE3  E1                  	pop hl
    2958   00:CBE4  D1                  	pop de
    2959   00:CBE5  C1                  	pop bc
    2960   00:CBE6                      
    2961   00:CBE6                      ;	ld a,d		; restore graphicsmode
    2962   00:CBE6                      ;	or $21
    2963   00:CBE6                      ;	or COL_OR+GFX_MOD
    2964   00:CBE6                      ;	and COL_AND
    2965   00:CBE6                      ;
    2966   00:CBE6                      ;IF XFLAG = 1
    2967   00:CBE6                      ;	ld (30779),a
    2968   00:CBE6                      ;ENDIF
    2969   00:CBE6                      ;
    2970   00:CBE6                      ;	ld (MODE),a
    2971   00:CBE6  C9                  	ret
    2972   00:CBE7                      
    2973   00:CBE7                      ; Copy of the sound routine at $345c with some changes:
    2974   00:CBE7                      ; - Made the counters 8-bit
    2975   00:CBE7                      ; - Changed writing to $6800
    2976   00:CBE7                      
    2977   00:CBE7                      sound
    2978   00:CBE7  3A 00 68            	ld a,(MODE)	; read $6800
    2979   00:CBEA  57                  	ld d,a		; store
    2980   00:CBEB  CD F2 CB            	call toggle	; call toggling speaker bits
    2981   00:CBEE  0D                  	dec c		; decrement counter1
    2982   00:CBEF  20 F6               	jr nz,sound	; repeat if not 0
    2983   00:CBF1  C9                  	ret
    2984   00:CBF2                      
    2985   00:CBF2                      ; Toggle speaker bit
    2986   00:CBF2                      
    2987   00:CBF2                      toggle
    2988   00:CBF2  C5                  	push bc		; save counter1
    2989   00:CBF3  3E 20               	ld a,$20		; set speaker bits
    2990   00:CBF5  F6 08               	or COL_OR+GFX_MOD	; restore graphicsmode
    2991   00:CBF7  E6 EF               	and COL_AND
    2992   00:CBF9                      
    2993   00:CBF9                      IF XFLAG = 1
    2994   00:CBF9                    ~ 	ld (30779),a
    2995   00:CBF9                    ~ ENDIF
    2996   00:CBF9                      
    2997   00:CBF9  32 00 68            	ld (MODE),a	; set $6800
    2998   00:CBFC                      
    2999   00:CBFC  E5                  	push hl		; save counter1
    3000   00:CBFD  C1                  	pop bc		; set counter2
    3001   00:CBFE                      toggle0
    3002   00:CBFE  0D                  	dec c		; decrement counter2
    3003   00:CBFF  20 FD               	jr nz,toggle0	; repeat if not 0
    3004   00:CC01                      
    3005   00:CC01  3E 01               	ld a,$01		; get $6800 value
    3006   00:CC03  F6 08               	or COL_OR+GFX_MOD	; restore graphicsmode
    3007   00:CC05  E6 EF               	and COL_AND
    3008   00:CC07                      
    3009   00:CC07                      IF XFLAG = 1
    3010   00:CC07                    ~ 	ld (30779),a
    3011   00:CC07                    ~ ENDIF
    3012   00:CC07                      
    3013   00:CC07  32 00 68            	ld (MODE),a	; set $6800
    3014   00:CC0A                      
    3015   00:CC0A  E5                  	push hl		; save counter1
    3016   00:CC0B  C1                  	pop bc		; set counter2
    3017   00:CC0C                      toggle1
    3018   00:CC0C  0D                  	dec c		; decrement counter2
    3019   00:CC0D  20 FD               	jr nz,toggle1	; repeat if not 0
    3020   00:CC0F  C1                  	pop bc		; restore counter1
    3021   00:CC10  C9                  	ret
    3022   00:CC11                      
    3023   00:CC11  00                  sndtyp		defb 0
    3024   00:CC12  00                  sndcnt		defb 0
    3025   00:CC13                      
    3026   00:CC13                      
    3027   00:CC13  00                  framec defb 0              ; interrupt counter (pseudo frame counter).
    3028   00:CC14  00 00               firmad defw 0
    3029   00:CC16                      
    3030   00:CC16                      
    3031   00:CC16                      ; Redraw the screen.
    3032   00:CC16                      ; Remove old copy of all sprites for redraw.
    3033   00:CC16                      
    3034   00:CC16                      redraw:
    3035   00:CC16                          IF GFLAG
    3036   00:CC16  21 00 FF                   ld hl,%1111111100000000 ; avoid changing received colors.
    3037   00:CC19  22 63 C9                   ld (bgmask),hl
    3038   00:CC1C                          ENDIF
    3039   00:CC1C  DD E5                      push ix             ; place sprite pointer on stack.
    3040   00:CC1E                      
    3041   00:CC1E  CD 69 D4                   call droom          ; show screen layout.
    3042   00:CC21  CD 41 D1                   call shwob          ; draw objects.
    3043   00:CC24  06 0C               numsp0 ld b,NUMSPR         ; sprites to draw.
    3044   00:CC26  DD 21 F6 DD                ld ix,sprtab        ; sprite table.
    3045   00:CC2A  DD 7E 00            redrw0 ld a,(ix+0)         ; old sprite type.
    3046   00:CC2D  3C                         inc a               ; is it enabled?
    3047   00:CC2E  28 0C                      jr z,redrw1         ; no, find next one.
    3048   00:CC30  DD 7E 03                   ld a,(ix+3)         ; sprite x.
    3049   00:CC33  FE B1                      cp SCRHGT * 8 - COLDIST              ; beyond maximum?
    3050   00:CC35  30 05                      jr nc,redrw1        ; yes, nothing to draw.
    3051   00:CC37  C5                         push bc             ; store sprite counter.
    3052   00:CC38  CD 6A D9                   call sspria         ; show single sprite.
    3053   00:CC3B  C1                         pop bc              ; retrieve sprite counter.
    3054   00:CC3C  11 11 00            redrw1 ld de,TABSIZ        ; distance to next odd/even entry.
    3055   00:CC3F  DD 19                      add ix,de           ; next sprite.
    3056   00:CC41  10 E7                      djnz redrw0         ; repeat for remaining sprites.
    3057   00:CC43  CD 83 CF            rpblc1 call dshrp          ; redraw shrapnel.
    3058   00:CC46                      
    3059   00:CC46                          IF AFLAG
    3060   00:CC46                    ~        call rbloc          ; draw blocks for this screen
    3061   00:CC46                    ~     ENDIF
    3062   00:CC46                      
    3063   00:CC46  DD E1                      pop ix              ; retrieve sprite pointer.
    3064   00:CC48  C9                         ret
    3065   00:CC49                      
    3066   00:CC49                      ; Clear screen routine.
    3067   00:CC49                      
    3068   00:CC49                      
    3069   00:CC49                      cls
    3070   00:CC49                      
    3071   00:CC49                      IF XFLAG = 1 OR XFLAG = 2
    3072   00:CC49  21 23 C9            	ld hl,XBANK
    3073   00:CC4C  36 00               	ld (hl),0
    3074   00:CC4E                      cls1
    3075   00:CC4E  3A 23 C9            	ld a,(XBANK)
    3076   00:CC51  C6 1C               	add a,XMODE
    3077   00:CC53  D3 20               	out (XPORT),a
    3078   00:CC55                      ENDIF
    3079   00:CC55                      
    3080   00:CC55                      IF IFLAG = 1
    3081   00:CC55  3E FF               	ld a,FILL
    3082   00:CC57                      ELSE
    3083   00:CC57                    ~ 	LD A,(bgmask)		   ; In hires clear with 0
    3084   00:CC57                    ~ ENDIF
    3085   00:CC57  21 00 70                    LD HL,VRAM
    3086   00:CC5A  11 01 70            	LD DE,VRAM+1
    3087   00:CC5D  01 FF 07            	LD BC,$07FF		   ; Size of video ram (2K)
    3088   00:CC60  77                  	LD (HL),A		   ; Store 0 in first location
    3089   00:CC61  ED B0               	LDIR			   ; Fill all the screen with 0
    3090   00:CC63                      
    3091   00:CC63                      IF XFLAG = 1 or XFLAG = 2
    3092   00:CC63  3A 23 C9            	ld a,(XBANK)
    3093   00:CC66  3C                  	inc a
    3094   00:CC67  32 23 C9            	ld (XBANK),a
    3095   00:CC6A  FE 03               	cp 3
    3096   00:CC6C  20 E0               	jr nz,cls1
    3097   00:CC6E                      
    3098   00:CC6E  3E 00               	ld a,0
    3099   00:CC70  32 23 C9            	ld (XBANK),a
    3100   00:CC73  C6 1C               	add a,XMODE
    3101   00:CC75  D3 20               	out (XPORT),a
    3102   00:CC77                      ENDIF
    3103   00:CC77                      
    3104   00:CC77  21 00 00                   ld hl,0             ; set hl to origin (0, 0).
    3105   00:CC7A  22 53 C9                   ld (charx),hl       ; reset coordinates.
    3106   00:CC7D  C9                         ret
    3107   00:CC7E                      
    3108   00:CC7E  7E                  fdchk  ld a,(hl)           ; fetch cell.
    3109   00:CC7F  FE 04                      cp FODDER           ; is it fodder?
    3110   00:CC81  C0                         ret nz              ; no.
    3111   00:CC82  36 00                      ld (hl),0           ; rewrite block type.
    3112   00:CC84  E5                         push hl             ; store pointer to block.
    3113   00:CC85  11 00 F5                   ld de,MAP           ; address of map.
    3114   00:CC88  A7                         and a               ; clear carry flag for subtraction.
    3115   00:CC89  ED 52                      sbc hl,de           ; find simple displacement for block.
    3116   00:CC8B  7D                         ld a,l              ; low byte is y coordinate.
    3117   00:CC8C  E6 1F                      and 31              ; column position 0 - 31.
    3118   00:CC8E  32 5F C9                   ld (dispy),a        ; set up y position.
    3119   00:CC91  29                         add hl,hl           ; multiply displacement by 8.
    3120   00:CC92  29                         add hl,hl
    3121   00:CC93  29                         add hl,hl
    3122   00:CC94  7C                         ld a,h              ; x coordinate now in h.
    3123   00:CC95  32 5E C9                   ld (dispx),a        ; set the display coordinate.
    3124   00:CC98  3E 20               	ld a,32
    3125   00:CC9A  CD 90 D3                   call pattr          ; write block.
    3126   00:CC9D  E1                         pop hl              ; restore block pointer.
    3127   00:CC9E  C9                         ret
    3128   00:CC9F                      
    3129   00:CC9F                      ; Colour a sprite.
    3130   00:CC9F                      
    3131   00:CC9F  C9                  cspr   ret                 ; No sprite paiting in VZ200.
    3132   00:CCA0                      
    3133   00:CCA0                      ; Scrolly text and puzzle variables.
    3134   00:CCA0                      
    3135   00:CCA0  80                  txtbit defb 128            ; bit to write.
    3136   00:CCA1  10                  txtwid defb 16             ; width of ticker message.
    3137   00:CCA2  0D 88               txtpos defw msgdat
    3138   00:CCA4  0D 88               txtini defw msgdat
    3139   00:CCA6                      
    3140   00:CCA6  00 70               txtscr defw VRAM
    3141   00:CCA8                      
    3142   00:CCA8                      ; Specialist routines.
    3143   00:CCA8                      ; Process shrapnel.
    3144   00:CCA8                      
    3145   00:CCA8  DD 21 B6 F2         proshr ld ix,SHRAPN        ; table.
    3146   00:CCAC  06 37                      ld b,NUMSHR         ; shrapnel pieces to process.
    3147   00:CCAE  11 06 00                   ld de,SHRSIZ        ; distance to next.
    3148   00:CCB1  DD 7E 00            prosh0 ld a,(ix+0)         ; on/off marker.
    3149   00:CCB4  17                         rla                 ; check its status.
    3150   00:CCB5  D4 BF CC            proshx call nc,prosh1      ; on, so process it.
    3151   00:CCB8  DD 19                      add ix,de           ; point there.
    3152   00:CCBA  10 F5                      djnz prosh0         ; round again.
    3153   00:CCBC  C3 4F DD                   jp scrly
    3154   00:CCBF  C5                  prosh1 push bc             ; store counter.
    3155   00:CCC0  CD 4F CD                   call plot           ; delete the pixel.
    3156   00:CCC3  DD 7E 00                   ld a,(ix+0)         ; restore shrapnel type.
    3157   00:CCC6  21 DE CC                   ld hl,shrptr        ; shrapnel routine pointers.
    3158   00:CCC9  CD D4 CC                   call prosh2         ; run the routine.
    3159   00:CCCC  CD 29 CD                   call chkxy          ; check x and y are good before we redisplay.
    3160   00:CCCF  C1                         pop bc              ; restore counter.
    3161   00:CCD0  11 06 00                   ld de,SHRSIZ        ; distance to next.
    3162   00:CCD3  C9                         ret
    3163   00:CCD4  07                  prosh2 rlca                ; 2 bytes per address.
    3164   00:CCD5  5F                         ld e,a              ; copy to de.
    3165   00:CCD6                      
    3166   00:CCD6  16 00                      ld d,0              ; reset D as 0 because "plot" changes its value.
    3167   00:CCD8                      
    3168   00:CCD8  19                         add hl,de           ; point to address of routine.
    3169   00:CCD9  7E                         ld a,(hl)           ; get address low.
    3170   00:CCDA  23                         inc hl              ; point to second byte.
    3171   00:CCDB  66                         ld h,(hl)           ; fetch high byte from table.
    3172   00:CCDC  6F                         ld l,a              ; put low byte in l.
    3173   00:CCDD  E9                         jp (hl)             ; jump to routine.
    3174   00:CCDE                      
    3175   00:CCDE  15 CE               shrptr defw laser          ; laser.
    3176   00:CCE0  EE CD                      defw trail          ; vapour trail.
    3177   00:CCE2  EE CC                      defw shrap          ; shrapnel from explosion.
    3178   00:CCE4  19 CD                      defw dotl           ; horizontal starfield left.
    3179   00:CCE6  1D CD                      defw dotr           ; horizontal starfield right.
    3180   00:CCE8  21 CD                      defw dotu           ; vertical starfield up.
    3181   00:CCEA  25 CD                      defw dotd           ; vertical starfield down.
    3182   00:CCEC  0C 88                      defw ptcusr         ; user particle.
    3183   00:CCEE                      
    3184   00:CCEE                      ; Explosion shrapnel.
    3185   00:CCEE                      
    3186   00:CCEE  DD 5E 01            shrap  ld e,(ix+1)         ; get the angle.
    3187   00:CCF1  16 00                      ld d,0              ; no high byte.
    3188   00:CCF3  21 AE CD                   ld hl,shrsin        ; shrapnel sine table.
    3189   00:CCF6  19                         add hl,de           ; point to sine.
    3190   00:CCF7                      
    3191   00:CCF7  5E                         ld e,(hl)           ; fetch value from table.
    3192   00:CCF8  23                         inc hl              ; next byte of table.
    3193   00:CCF9  56                         ld d,(hl)           ; fetch value from table.
    3194   00:CCFA  23                         inc hl              ; next byte of table.
    3195   00:CCFB  4E                         ld c,(hl)           ; fetch value from table.
    3196   00:CCFC  23                         inc hl              ; next byte of table.
    3197   00:CCFD  46                         ld b,(hl)           ; fetch value from table.
    3198   00:CCFE  DD 6E 02                   ld l,(ix+2)         ; x coordinate in hl.
    3199   00:CD01  DD 66 03                   ld h,(ix+3)
    3200   00:CD04  19                         add hl,de           ; add sine.
    3201   00:CD05  DD 75 02                   ld (ix+2),l         ; store new coordinate.
    3202   00:CD08  DD 74 03                   ld (ix+3),h
    3203   00:CD0B  DD 6E 04                   ld l,(ix+4)         ; y coordinate in hl.
    3204   00:CD0E  DD 66 05                   ld h,(ix+5)
    3205   00:CD11  09                         add hl,bc           ; add cosine.
    3206   00:CD12  DD 75 04                   ld (ix+4),l         ; store new coordinate.
    3207   00:CD15  DD 74 05                   ld (ix+5),h
    3208   00:CD18  C9                         ret
    3209   00:CD19                      
    3210   00:CD19  DD 35 05            dotl   dec (ix+5)          ; move left.
    3211   00:CD1C  C9                         ret
    3212   00:CD1D                      
    3213   00:CD1D  DD 34 05            dotr   inc (ix+5)          ; move right.
    3214   00:CD20  C9                         ret
    3215   00:CD21                      
    3216   00:CD21                      dotu
    3217   00:CD21  DD 35 03                   dec (ix+3)          ; move up.
    3218   00:CD24  C9                         ret
    3219   00:CD25                      
    3220   00:CD25                      dotd
    3221   00:CD25  DD 34 03                   inc (ix+3)          ; move down.
    3222   00:CD28  C9                         ret
    3223   00:CD29                      
    3224   00:CD29                      ; Check coordinates are good before redrawing at new position.
    3225   00:CD29                      
    3226   00:CD29  21 34 C9            chkxy  ld hl,wntopx        ; window top.
    3227   00:CD2C  DD 7E 03                   ld a,(ix+3)         ; fetch shrapnel coordinate.
    3228   00:CD2F  BE                         cp (hl)             ; compare with top window limit.
    3229   00:CD30  38 77                      jr c,kilshr         ; out of window, kill shrapnel.
    3230   00:CD32                      
    3231   00:CD32  23                         inc hl              ; left edge.
    3232   00:CD33  DD 7E 05                   ld a,(ix+5)         ; fetch shrapnel coordinate.
    3233   00:CD36  BE                         cp (hl)             ; compare with left window limit.
    3234   00:CD37  38 70                      jr c,kilshr         ; out of window, kill shrapnel.
    3235   00:CD39  28 6E               	jr z,kilshr
    3236   00:CD3B                      
    3237   00:CD3B  23                         inc hl              ; point to bottom.
    3238   00:CD3C  7E                         ld a,(hl)           ; fetch window limit.
    3239   00:CD3D  C6 0F                      add a,COLDIST            ; add height of sprite.
    3240   00:CD3F  DD BE 03                   cp (ix+3)           ; compare with shrapnel x coordinate.
    3241   00:CD42  38 65                      jr c,kilshr         ; off screen, kill shrapnel.
    3242   00:CD44                      
    3243   00:CD44  23                         inc hl              ; point to right edge.
    3244   00:CD45  7E                         ld a,(hl)           ; fetch shrapnel y coordinate.
    3245   00:CD46  C6 0F                      add a,15            ; add width of sprite.
    3246   00:CD48  DD BE 05                   cp (ix+5)           ; compare with window limit.
    3247   00:CD4B  38 5C                      jr c,kilshr         ; off screen, kill shrapnel.
    3248   00:CD4D  28 5A               	jr z,kilshr
    3249   00:CD4F                      
    3250   00:CD4F                      ; Drop through.
    3251   00:CD4F                      ; Display shrapnel.
    3252   00:CD4F                      
    3253   00:CD4F  DD 6E 03            plot   ld l,(ix+3)         ; x integer.
    3254   00:CD52  DD 66 05                   ld h,(ix+5)         ; y integer.
    3255   00:CD55  22 5E C9                   ld (dispx),hl       ; workspace coordinates.
    3256   00:CD58  DD 7E 00                   ld a,(ix+0)         ; type.
    3257   00:CD5B  A7                         and a               ; is it a laser?
    3258   00:CD5C  28 2D                      jr z,plot1          ; yes, draw laser instead.
    3259   00:CD5E                      plot0
    3260   00:CD5E                      
    3261   00:CD5E                      IF XFLAG = 0 OR XMODE = 24
    3262   00:CD5E                    ~ 	ld a,(dispy)
    3263   00:CD5E                    ~ 	and 1
    3264   00:CD5E                    ~ 	ret nz
    3265   00:CD5E                    ~ ENDIF
    3266   00:CD5E  7D                  	ld a,l		; test if not offscreen
    3267   00:CD5F  FE BF               	cp SCRHGT*8-1
    3268   00:CD61  D0                  	ret nc
    3269   00:CD62  7C                         ld a,h              ; which pixel within byte do we
    3270   00:CD63  E6 07                      and 7               ; want to set first?
    3271   00:CD65  16 00                      ld d,0              ; no high byte.
    3272   00:CD67  5F                         ld e,a              ; copy to de.
    3273   00:CD68  21 40 CE                   ld hl,dots          ; table of small pixel positions.
    3274   00:CD6B  19                         add hl,de           ; hl points to values we want to POKE to screen.
    3275   00:CD6C  5E                         ld e,(hl)           ; get value.
    3276   00:CD6D                      
    3277   00:CD6D  CD 44 D9                   call scadd          ; screen address.
    3278   00:CD70                      
    3279   00:CD70                      IF XFLAG = 1 OR XFLAG = 2
    3280   00:CD70  E5                  	push hl
    3281   00:CD71  7C                  	ld a,h
    3282   00:CD72  D6 70               	sub $70
    3283   00:CD74  CB 3F               	srl a
    3284   00:CD76  CB 3F               	srl a
    3285   00:CD78  CB 3F               	srl a
    3286   00:CD7A  E6 03               	and 3
    3287   00:CD7C  C6 1C               	add a,XMODE
    3288   00:CD7E  D3 20               	out (XPORT),a
    3289   00:CD80  7C                  	ld a,h
    3290   00:CD81  E6 07               	and $07
    3291   00:CD83  F6 70               	or $70
    3292   00:CD85  67                  	ld h,a
    3293   00:CD86                      ENDIF
    3294   00:CD86                      
    3295   00:CD86  7E                         ld a,(hl)           ; see what's already there.
    3296   00:CD87  AB                         xor e               ; merge with pixels.
    3297   00:CD88  77                         ld (hl),a           ; put back on screen.
    3298   00:CD89                      
    3299   00:CD89                      IF XFLAG = 1 OR XFLAG = 2
    3300   00:CD89  E1                  	pop hl
    3301   00:CD8A                      ENDIF
    3302   00:CD8A                      
    3303   00:CD8A  C9                         ret
    3304   00:CD8B                      
    3305   00:CD8B  CD 44 D9            plot1  call scadd          ; screen address.
    3306   00:CD8E                      
    3307   00:CD8E                      IF XFLAG = 1 OR XFLAG = 2
    3308   00:CD8E  E5                  	push hl
    3309   00:CD8F  7C                  	ld a,h
    3310   00:CD90  D6 70               	sub $70
    3311   00:CD92  CB 3F               	srl a
    3312   00:CD94  CB 3F               	srl a
    3313   00:CD96  CB 3F               	srl a
    3314   00:CD98  E6 03               	and 3
    3315   00:CD9A  C6 1C               	add a,XMODE
    3316   00:CD9C  D3 20               	out (XPORT),a
    3317   00:CD9E  7C                  	ld a,h
    3318   00:CD9F  E6 07               	and $07
    3319   00:CDA1  F6 70               	or $70
    3320   00:CDA3  67                  	ld h,a
    3321   00:CDA4                      ENDIF
    3322   00:CDA4                      
    3323   00:CDA4  7E                         ld a,(hl)           ; fetch byte there.
    3324   00:CDA5  2F                         cpl                 ; toggle all bits.
    3325   00:CDA6  77                         ld (hl),a           ; new byte.
    3326   00:CDA7                      
    3327   00:CDA7                      IF XFLAG = 1 OR XFLAG = 2
    3328   00:CDA7  E1                  	pop hl
    3329   00:CDA8                      ENDIF
    3330   00:CDA8                      
    3331   00:CDA8  C9                         ret
    3332   00:CDA9                      
    3333   00:CDA9  DD 36 00 80         kilshr ld (ix+0),128       ; switch off shrapnel.
    3334   00:CDAD  C9                         ret
    3335   00:CDAE                      
    3336   00:CDAE                      shrsin defw 0,1024,391,946,724,724,946,391
    3336   00:CDAE  00 00 00 04 87 01 B2 03 D4 02 D4 02 B2 03 87 01 
    3337   00:CDBE                             defw 1024,0,946,65144,724,64811,391,64589
    3337   00:CDBE  00 04 00 00 B2 03 78 FE D4 02 2B FD 87 01 4D FC 
    3338   00:CDCE                             defw 0,64512,65144,64589,64811,64811,64589,65144
    3338   00:CDCE  00 00 00 FC 78 FE 4D FC 2B FD 2B FD 4D FC 78 FE 
    3339   00:CDDE                             defw 64512,0,64589,391,64811,724,65144,946
    3339   00:CDDE  00 FC 00 00 4D FC 87 01 2B FD D4 02 78 FE B2 03 
    3340   00:CDEE                      
    3341   00:CDEE  DD 35 01            trail  dec (ix+1)          ; time remaining.
    3342   00:CDF1  CA 10 CE                   jp z,trailk         ; time to switch it off.
    3343   00:CDF4  CD 75 CF                   call qrand          ; get a random number.
    3344   00:CDF7  1F                         rra                 ; x or y axis?
    3345   00:CDF8  38 0B                      jr c,trailv         ; use x.
    3346   00:CDFA  1F                         rra                 ; which direction?
    3347   00:CDFB  38 04                      jr c,traill         ; go left.
    3348   00:CDFD  DD 34 05                   inc (ix+5)          ; go right.
    3349   00:CE00  C9                         ret
    3350   00:CE01  DD 35 05            traill dec (ix+5)          ; go left.
    3351   00:CE04  C9                         ret
    3352   00:CE05  1F                  trailv rra                 ; which direction?
    3353   00:CE06  38 04                      jr c,trailu         ; go up.
    3354   00:CE08  DD 34 03                   inc (ix+3)          ; go down.
    3355   00:CE0B  C9                         ret
    3356   00:CE0C  DD 35 03            trailu dec (ix+3)          ; go up.
    3357   00:CE0F  C9                         ret
    3358   00:CE10  DD 36 03 C8         trailk ld (ix+3),200       ; set off-screen to kill vapour trail.
    3359   00:CE14  C9                         ret
    3360   00:CE15                      
    3361   00:CE15  DD 7E 01            laser  ld a,(ix+1)         ; direction.
    3362   00:CE18  1F                         rra                 ; left or right?
    3363   00:CE19  30 04                      jr nc,laserl        ; move left.
    3364   00:CE1B  06 08                      ld b,8              ; distance to travel.
    3365   00:CE1D  18 02                      jr laserm           ; move laser.
    3366   00:CE1F  06 F8               laserl ld b,248            ; distance to travel.
    3367   00:CE21  DD 7E 05            laserm ld a,(ix+5)         ; y position.
    3368   00:CE24  80                         add a,b             ; add distance.
    3369   00:CE25  DD 77 05                   ld (ix+5),a         ; set new y coordinate.
    3370   00:CE28                      
    3371   00:CE28                      ; Test new block.
    3372   00:CE28                      
    3373   00:CE28  32 5F C9                   ld (dispy),a        ; set y for block collision detection purposes.
    3374   00:CE2B  DD 7E 03                   ld a,(ix+3)         ; get x.
    3375   00:CE2E  32 5E C9                   ld (dispx),a        ; set coordinate for collision test.
    3376   00:CE31  CD 39 D6                   call tstbl          ; get block type there.
    3377   00:CE34  FE 02                      cp WALL             ; is it solid?
    3378   00:CE36  28 D8                      jr z,trailk         ; yes, it cannot pass.
    3379   00:CE38  FE 04                      cp FODDER           ; is it fodder?
    3380   00:CE3A  C0                         ret nz              ; no, ignore it.
    3381   00:CE3B  CD 7E CC                   call fdchk          ; remove fodder block.
    3382   00:CE3E  18 D0                      jr trailk           ; destroy laser.
    3383   00:CE40                      
    3384   00:CE40                      
    3385   00:CE40                      IF XFLAG = 0
    3386   00:CE40                    ~ dots   defb $c0,$c0,$30,$30,$c,$c,3,3
    3387   00:CE40                    ~ ELSE
    3388   00:CE40                      dots   defb 128,64,32,16,8,4,2,1
    3388   00:CE40  80 40 20 10 08 04 02 01 
    3389   00:CE48                      ENDIF
    3390   00:CE48                      
    3391   00:CE48                      ; Plot, preserving de.
    3392   00:CE48                      
    3393   00:CE48  D5                  plotde push de             ; put de on stack.
    3394   00:CE49  CD 4F CD                   call plot           ; plot pixel.
    3395   00:CE4C  D1                         pop de              ; restore de from stack.
    3396   00:CE4D  C9                         ret
    3397   00:CE4E                      
    3398   00:CE4E                      ; Shoot a laser.
    3399   00:CE4E                      
    3400   00:CE4E  4F                  shoot  ld c,a              ; store direction in c register.
    3401   00:CE4F  DD 7E 08                   ld a,(ix+8)         ; x coordinate.
    3402   00:CE52  C6 07               shoot1 add a,COLDIST/2             ; down 7 pixels.
    3403   00:CE54  6F                         ld l,a              ; put x coordinate in l.
    3404   00:CE55  DD 66 09                   ld h,(ix+9)         ; y coordinate in h.
    3405   00:CE58  DD E5                      push ix             ; store pointer to sprite.
    3406   00:CE5A  CD 1D CF                   call fpslot         ; find particle slot.
    3407   00:CE5D  30 2C                      jr nc,vapou2        ; failed, restore ix.
    3408   00:CE5F  DD 36 00 00                ld (ix+0),0         ; set up a laser.
    3409   00:CE63  DD 71 01                   ld (ix+1),c         ; set the direction.
    3410   00:CE66  DD 75 03                   ld (ix+3),l         ; set x coordinate.
    3411   00:CE69  CB 19                      rr c                ; check direction we want.
    3412   00:CE6B  38 08                      jr c,shootr         ; shoot right.
    3413   00:CE6D  7C                         ld a,h              ; y position.
    3414   00:CE6E                      ;       dec a               ; left a pixel.
    3415   00:CE6E  E6 F8               shoot0 and 248             ; align on character boundary.
    3416   00:CE70  DD 77 05                   ld (ix+5),a         ; set y coordinate.
    3417   00:CE73  18 2D                      jr vapou0           ; draw first image.
    3418   00:CE75  7C                  shootr ld a,h              ; y position.
    3419   00:CE76  C6 0F                      add a,15            ; look right.
    3420   00:CE78  18 F4                      jr shoot0           ; align and continue.
    3421   00:CE7A                      
    3422   00:CE7A                      ; Create a bit of vapour trail.
    3423   00:CE7A                      
    3424   00:CE7A  DD E5               vapour push ix             ; store pointer to sprite.
    3425   00:CE7C  DD 6E 08                   ld l,(ix+8)         ; x coordinate.
    3426   00:CE7F  DD 66 09                   ld h,(ix+9)         ; y coordinate.
    3427   00:CE82  11 07 07            vapou3 ld de,COLDIST/2*256+COLDIST/2       ; mid-point of sprite.
    3428   00:CE85  19                         add hl,de           ; point to centre of sprite.
    3429   00:CE86  CD 1D CF                   call fpslot         ; find particle slot.
    3430   00:CE89  38 03                      jr c,vapou1         ; no, we can use it.
    3431   00:CE8B  DD E1               vapou2 pop ix              ; restore sprite pointer.
    3432   00:CE8D  C9                         ret                 ; out of slots, can't generate anything.
    3433   00:CE8E                      
    3434   00:CE8E  DD 75 03            vapou1 ld (ix+3),l         ; set up x.
    3435   00:CE91  DD 74 05                   ld (ix+5),h         ; set up y coordinate.
    3436   00:CE94  CD 75 CF                   call qrand          ; get quick random number.
    3437   00:CE97  E6 0F                      and 15              ; random time.
    3438   00:CE99  C6 0F                      add a,15            ; minimum time on screen.
    3439   00:CE9B  DD 77 01                   ld (ix+1),a         ; set time on screen.
    3440   00:CE9E  DD 36 00 01                ld (ix+0),1         ; define particle as vapour trail.
    3441   00:CEA2  CD 29 CD            vapou0 call chkxy          ; plot first position.
    3442   00:CEA5  18 E4                      jr vapou2
    3443   00:CEA7                      
    3444   00:CEA7                      ; Create a user particle.
    3445   00:CEA7                      
    3446   00:CEA7  08                  ptusr  ex af,af'           ; store timer.
    3447   00:CEA8  DD 6E 08                   ld l,(ix+8)         ; x coordinate.
    3448   00:CEAB  DD 66 09                   ld h,(ix+9)         ; y coordinate.
    3449   00:CEAE  11 07 07                   ld de,7*256+7       ; mid-point of sprite.
    3450   00:CEB1  19                         add hl,de           ; point to centre of sprite.
    3451   00:CEB2  CD 1D CF                   call fpslot         ; find particle slot.
    3452   00:CEB5  38 01                      jr c,ptusr1         ; free slot.
    3453   00:CEB7  C9                         ret                 ; out of slots, can't generate anything.
    3454   00:CEB8                      
    3455   00:CEB8  DD 75 03            ptusr1 ld (ix+3),l         ; set up x.
    3456   00:CEBB  DD 74 05                   ld (ix+5),h         ; set up y coordinate.
    3457   00:CEBE  08                         ex af,af'           ; restore timer.
    3458   00:CEBF  DD 77 01                   ld (ix+1),a         ; set time on screen.
    3459   00:CEC2  DD 36 00 07                ld (ix+0),7         ; define particle as user particle.
    3460   00:CEC6  C3 29 CD                   jp chkxy            ; plot first position.
    3461   00:CEC9                      
    3462   00:CEC9                      
    3463   00:CEC9                      ; Create a vertical or horizontal star.
    3464   00:CEC9                      
    3465   00:CEC9  DD E5               star   push ix             ; store pointer to sprite.
    3466   00:CECB  CD 1D CF                   call fpslot         ; find particle slot.
    3467   00:CECE  DA D4 CE                   jp c,star7          ; found one we can use.
    3468   00:CED1  DD E1               star0  pop ix              ; restore sprite pointer.
    3469   00:CED3  C9                         ret                 ; out of slots, can't generate anything.
    3470   00:CED4                      
    3471   00:CED4  79                  star7  ld a,c              ; direction.
    3472   00:CED5  E6 03                      and 3               ; is it left?
    3473   00:CED7  28 21                      jr z,star1          ; yes, it's horizontal.
    3474   00:CED9  3D                         dec a               ; is it right?
    3475   00:CEDA  28 2C                      jr z,star2          ; yes, it's horizontal.
    3476   00:CEDC  3D                         dec a               ; is it up?
    3477   00:CEDD  28 36                      jr z,star3          ; yes, it's vertical.
    3478   00:CEDF                      
    3479   00:CEDF                      ; Star down
    3480   00:CEDF                      
    3481   00:CEDF  3A 34 C9                   ld a,(wntopx)       ; get edge of screen.
    3482   00:CEE2  3C                         inc a               ; down one pixel.
    3483   00:CEE3  DD 77 03            star8  ld (ix+3),a         ; set x coord.
    3484   00:CEE6  CD 75 CF                   call qrand          ; get quick random number.
    3485   00:CEE9                      
    3486   00:CEE9  DD 77 05            star9  ld (ix+5),a         ; set y position.
    3487   00:CEEC  79                         ld a,c              ; direction.
    3488   00:CEED  E6 03                      and 3               ; zero to three.
    3489   00:CEEF  C6 03                      add a,3             ; 3 to 6 for starfield.
    3490   00:CEF1  DD 77 00                   ld (ix+0),a         ; define particle as star.
    3491   00:CEF4  CD 29 CD                   call chkxy          ; plot first position.
    3492   00:CEF7  C3 D1 CE                   jp star0
    3493   00:CEFA                      
    3494   00:CEFA                      ; Star left
    3495   00:CEFA                      
    3496   00:CEFA  CD 75 CF            star1  call qrand          ; get quick random number.
    3497   00:CEFD  DD 77 03                   ld (ix+3),a         ; set x coord.
    3498   00:CF00  3A 37 C9                   ld a,(wnrgtx)       ; get edge of screen.
    3499   00:CF03  C6 0E                      add a,14          ; add width of sprite minus 1.
    3500   00:CF05  C3 E9 CE                   jp star9
    3501   00:CF08                      
    3502   00:CF08                      ; Star right
    3503   00:CF08                      
    3504   00:CF08  CD 75 CF            star2  call qrand          ; get quick random number.
    3505   00:CF0B  DD 77 03                   ld (ix+3),a         ; set x coord.
    3506   00:CF0E  3A 35 C9                   ld a,(wnlftx)       ; get edge of screen.
    3507   00:CF11  3C                  	inc a
    3508   00:CF12  C3 E9 CE                   jp star9
    3509   00:CF15                      
    3510   00:CF15                      ; Star up
    3511   00:CF15                      
    3512   00:CF15  3A 36 C9            star3  ld a,(wnbotx)       ; get edge of screen.
    3513   00:CF18  C6 0F                      add a,15            ; height of sprite minus one pixel.
    3514   00:CF1A  C3 E3 CE                   jp star8
    3515   00:CF1D                      
    3516   00:CF1D                      
    3517   00:CF1D                      ; Find particle slot for lasers or vapour trail.
    3518   00:CF1D                      ; Can't use alternate accumulator.
    3519   00:CF1D                      
    3520   00:CF1D  DD 21 B6 F2         fpslot ld ix,SHRAPN        ; shrapnel table.
    3521   00:CF21  11 06 00                   ld de,SHRSIZ        ; size of each particle.
    3522   00:CF24  06 37                      ld b,NUMSHR         ; number of pieces in table.
    3523   00:CF26  DD 7E 00            fpslt0 ld a,(ix+0)         ; get type.
    3524   00:CF29  17                         rla                 ; is this slot in use?
    3525   00:CF2A  D8                         ret c               ; no, we can use it.
    3526   00:CF2B  DD 19                      add ix,de           ; point to more shrapnel.
    3527   00:CF2D  10 F7                      djnz fpslt0         ; repeat for all shrapnel.
    3528   00:CF2F  C9                         ret                 ; out of slots, can't generate anything.
    3529   00:CF30                      
    3530   00:CF30                      ; Create an explosion at sprite position.
    3531   00:CF30                      
    3532   00:CF30  4F                  explod ld c,a              ; particles to create.
    3533   00:CF31  DD E5                      push ix             ; store pointer to sprite.
    3534   00:CF33  DD 6E 08                   ld l,(ix+8)         ; x coordinate.
    3535   00:CF36  DD 66 09                   ld h,(ix+9)         ; y coordinate.
    3536   00:CF39  DD 21 B6 F2                ld ix,SHRAPN        ; shrapnel table.
    3537   00:CF3D  11 06 00                   ld de,SHRSIZ        ; size of each particle.
    3538   00:CF40  06 37                      ld b,NUMSHR         ; number of pieces in table.
    3539   00:CF42  DD 7E 00            expld0 ld a,(ix+0)         ; get type.
    3540   00:CF45  17                         rla                 ; is this slot in use?
    3541   00:CF46  38 07                      jr c,expld1         ; no, we can use it.
    3542   00:CF48  DD 19               expld2 add ix,de           ; point to more shrapnel.
    3543   00:CF4A  10 F6                      djnz expld0         ; repeat for all shrapnel.
    3544   00:CF4C  DD E1               expld3 pop ix              ; restore sprite pointer.
    3545   00:CF4E  C9                         ret                 ; out of slots, can't generate any more.
    3546   00:CF4F  79                  expld1 ld a,c              ; shrapnel counter.
    3547   00:CF50  E6 0F                      and 15              ; 0 to 15.
    3548   00:CF52  85                         add a,l             ; add to x.
    3549   00:CF53  DD 77 03                   ld (ix+3),a         ; x coord.
    3550   00:CF56  3A 82 CF                   ld a,(seed3)        ; crap random number.
    3551   00:CF59  E6 0F                      and 15              ; 0 to 15.
    3552   00:CF5B  84                         add a,h             ; add to y.
    3553   00:CF5C  DD 77 05                   ld (ix+5),a         ; y coord.
    3554   00:CF5F  DD 36 00 02                ld (ix+0),2         ; switch it on.
    3555   00:CF63  D9                         exx                 ; store coordinates.
    3556   00:CF64  CD 29 CD                   call chkxy          ; plot first position.
    3557   00:CF67  CD 75 CF                   call qrand          ; quick random angle.
    3558   00:CF6A  E6 3C                      and 60              ; keep within range.
    3559   00:CF6C  DD 77 01                   ld (ix+1),a         ; angle.
    3560   00:CF6F  D9                         exx                 ; restore coordinates.
    3561   00:CF70  0D                         dec c               ; one piece of shrapnel fewer to generate.
    3562   00:CF71  20 D5                      jr nz,expld2        ; back to main explosion loop.
    3563   00:CF73  18 D7                      jr expld3           ; restore sprite pointer and exit.
    3564   00:CF75  3A 82 CF            qrand  ld a,(seed3)        ; random seed.
    3565   00:CF78  6F                         ld l,a              ; low byte.
    3566   00:CF79  26 00                      ld h,0              ; no high byte.
    3567   00:CF7B  ED 5F                      ld a,r              ; r register.
    3568   00:CF7D  AE                         xor (hl)            ; combine with seed.
    3569   00:CF7E  32 82 CF                   ld (seed3),a        ; new seed.
    3570   00:CF81  C9                         ret
    3571   00:CF82  45                  seed3  defb $45
    3572   00:CF83                      
    3573   00:CF83                      ; Display all shrapnel.
    3574   00:CF83                      
    3575   00:CF83  21 48 CE            dshrp  ld hl,plotde        ; display routine.
    3576   00:CF86  22 B6 CC                   ld (proshx+1),hl    ; modify routine.
    3577   00:CF89  CD A8 CC                   call proshr         ; process shrapnel.
    3578   00:CF8C  21 BF CC                   ld hl,prosh1        ; processing routine.
    3579   00:CF8F  22 B6 CC                   ld (proshx+1),hl    ; modify the call.
    3580   00:CF92  C9                         ret
    3581   00:CF93                      
    3582   00:CF93                      ; Particle engine.
    3583   00:CF93                      
    3584   00:CF93  21 B6 F2            inishr ld hl,SHRAPN        ; table.
    3585   00:CF96  06 37                      ld b,NUMSHR         ; shrapnel pieces to process.
    3586   00:CF98  11 06 00                   ld de,SHRSIZ        ; distance to next.
    3587   00:CF9B  36 FF               inish0 ld (hl),255         ; kill the shrapnel.
    3588   00:CF9D  19                         add hl,de           ; point there.
    3589   00:CF9E  10 FB                      djnz inish0         ; round again.
    3590   00:CFA0  C9                         ret
    3591   00:CFA1                      
    3592   00:CFA1                      ; Check for collision between laser and sprite.
    3593   00:CFA1                      
    3594   00:CFA1  21 B6 F2            lcol   ld hl,SHRAPN        ; shrapnel table.
    3595   00:CFA4  11 06 00                   ld de,SHRSIZ        ; size of each particle.
    3596   00:CFA7  06 37                      ld b,NUMSHR         ; number of pieces in table.
    3597   00:CFA9  7E                  lcol0  ld a,(hl)           ; get type.
    3598   00:CFAA  A7                         and a               ; is this slot a laser?
    3599   00:CFAB  28 04                      jr z,lcol1          ; yes, check collision.
    3600   00:CFAD  19                  lcol3  add hl,de           ; point to more shrapnel.
    3601   00:CFAE  10 F9                      djnz lcol0          ; repeat for all shrapnel.
    3602   00:CFB0  C9                         ret                 ; no collision, carry not set.
    3603   00:CFB1  E5                  lcol1  push hl             ; store pointer to laser.
    3604   00:CFB2  23                         inc hl              ; direction.
    3605   00:CFB3  23                         inc hl              ; not used.
    3606   00:CFB4  23                         inc hl              ; x position.
    3607   00:CFB5  7E                         ld a,(hl)           ; get x.
    3608   00:CFB6  DD 96 08                   sub (ix+X)          ; subtract sprite x.
    3609   00:CFB9  FE 10               lcolh  cp COLDIST+1               ; within range?
    3610   00:CFBB  30 0A                      jr nc,lcol2         ; no, missed.
    3611   00:CFBD  23                         inc hl              ; not used.
    3612   00:CFBE  23                         inc hl              ; y position.
    3613   00:CFBF  7E                         ld a,(hl)           ; get y.
    3614   00:CFC0  DD 96 09                   sub (ix+Y)          ; subtract sprite y.
    3615   00:CFC3  FE 10                      cp 16               ; within range?
    3616   00:CFC5  38 03                      jr c,lcol4          ; yes, collision occurred.
    3617   00:CFC7  E1                  lcol2  pop hl              ; restore laser pointer from stack.
    3618   00:CFC8  18 E3                      jr lcol3
    3619   00:CFCA  E1                  lcol4  pop hl              ; restore laser pointer.
    3620   00:CFCB  C9                         ret                 ; return with carry set for collision.
    3621   00:CFCC                      
    3622   00:CFCC                      ; Main game engine code starts here.
    3623   00:CFCC                      
    3624   00:CFCC  (00:CFCC)           game   equ $
    3625   00:CFCC                      
    3626   00:CFCC                      
    3627   00:CFCC                             ; no screen address table.
    3628   00:CFCC                      
    3629   00:CFCC                      
    3630   00:CFCC                      
    3631   00:CFCC                             ; no palette.
    3632   00:CFCC                      
    3633   00:CFCC                      
    3634   00:CFCC  CD 93 CF            rpblc2 call inishr         ; initialise particle engine.
    3635   00:CFCF  CD 6A 83            evintr call evnt12         ; call intro/menu event.
    3636   00:CFD2                      
    3637   00:CFD2  21 00 F5                   ld hl,MAP           ; block properties.
    3638   00:CFD5  11 01 F5                   ld de,MAP+1         ; next byte.
    3639   00:CFD8  01 FF 17                   ld bc,32 * SCRHGT*8 - 1       ; size of property map.
    3640   00:CFDB  36 02                      ld (hl),WALL        ; write default property.
    3641   00:CFDD  ED B0                      ldir
    3642   00:CFDF  CD 8E CB                   call iniob          ; initialise objects.
    3643   00:CFE2  AF                         xor a               ; put zero in accumulator.
    3644   00:CFE3  32 5D C9                   ld (gamwon),a       ; reset game won flag.
    3645   00:CFE6                      
    3646   00:CFE6  21 71 D2                   ld hl,score         ; score.
    3647   00:CFE9  CD 14 D1                   call inisc          ; init the score.
    3648   00:CFEC  3A 42 7B            mapst  ld a,(stmap)        ; start position on map.
    3649   00:CFEF  32 D3 DE                   ld (roomtb),a       ; set up position in table, if there is one.
    3650   00:CFF2                      
    3651   00:CFF2                      inipbl:
    3652   00:CFF2                          IF AFLAG
    3653   00:CFF2                    ~        ld hl,eop          ; reset blockpointer
    3654   00:CFF2                    ~        ld (pbptr+1),hl
    3655   00:CFF2                    ~     ENDIF
    3656   00:CFF2  CD DE DA                   call initsc         ; set up first screen.
    3657   00:CFF5                      
    3658   00:CFF5  DD 21 C2 DE                ld ix,ssprit        ; default to spare sprite in table.
    3659   00:CFF9  CD 28 84            evini  call evnt13         ; initialisation.
    3660   00:CFFC                      
    3661   00:CFFC                      ; Two restarts.
    3662   00:CFFC                      ; First restart - clear all sprites and initialise everything.
    3663   00:CFFC                      
    3664   00:CFFC  CD CF D0            rstrt  call rsevt          ; restart events.
    3665   00:CFFF  CD 83 CB                   call xspr           ; clear sprite table.
    3666   00:D002  CD 30 DC                   call sprlst         ; fetch pointer to screen sprites.
    3667   00:D005  CD 79 DC                   call ispr           ; initialise sprite table.
    3668   00:D008  18 0C                      jr rstrt0
    3669   00:D00A                      
    3670   00:D00A                      ; Second restart - clear all but player, and don't initialise him.
    3671   00:D00A                      
    3672   00:D00A                      rstrtn
    3673   00:D00A  CD CF D0                   call rsevt          ; restart events.
    3674   00:D00D  CD 47 DC                   call nspr           ; clear all non-player sprites.
    3675   00:D010  CD 30 DC                   call sprlst         ; fetch pointer to screen sprites.
    3676   00:D013  CD 9F DC                   call kspr           ; initialise sprite table, no more players.
    3677   00:D016                      
    3678   00:D016                      
    3679   00:D016                      ; Set up the player and/or enemy sprites.
    3680   00:D016                      
    3681   00:D016                      rstrt0
    3682   00:D016  AF                         xor a               ; zero in accumulator.
    3683   00:D017  32 5A C9                   ld (nexlev),a       ; reset next level flag.
    3684   00:D01A  32 5B C9                   ld (restfl),a       ; reset restart flag.
    3685   00:D01D  32 5C C9                   ld (deadf),a        ; reset dead flag.
    3686   00:D020  CD 69 D4                   call droom          ; show screen layout.
    3687   00:D023                      
    3688   00:D023                      
    3689   00:D023                      rpblc0:
    3690   00:D023                          IF AFLAG
    3691   00:D023                    ~        call rbloc          ; draw blocks for this screen
    3692   00:D023                    ~     ENDIF
    3693   00:D023  CD 93 CF                   call inishr         ; initialise particle engine.
    3694   00:D026                      
    3695   00:D026  CD 41 D1                   call shwob          ; draw objects.
    3696   00:D029  DD 21 F6 DD                ld ix,sprtab        ; address of sprite table, even sprites.
    3697   00:D02D  CD 94 D8                   call dspr           ; display sprites.
    3698   00:D030  DD 21 07 DE                ld ix,sprtab+TABSIZ ; address of first odd sprite.
    3699   00:D034  CD 94 D8                   call dspr           ; display sprites.
    3700   00:D037                      
    3701   00:D037  CD B0 CB            mloop  call vsync          ; synchronise with display.
    3702   00:D03A                      
    3703   00:D03A  DD 21 F6 DD                ld ix,sprtab        ; address of sprite table, even sprites.
    3704   00:D03E  CD 94 D8                   call dspr           ; display even sprites.
    3705   00:D041                      
    3706   00:D041  CD 40 D1                   call plsnd          ; play sounds.
    3707   00:D044  CD B0 CB                   call vsync0          ; synchronise with display.
    3708   00:D047  DD 21 07 DE                ld ix,sprtab+TABSIZ ; address of first odd sprite.
    3709   00:D04B  CD 94 D8                   call dspr           ; display odd sprites.
    3710   00:D04E  DD 21 C2 DE                ld ix,ssprit        ; point to spare sprite for spawning purposes.
    3711   00:D052  CD F2 7F            evlp1  call evnt10         ; called once per main loop.
    3712   00:D055  CD 4F D8                   call pspr           ; process sprites.
    3713   00:D058                      
    3714   00:D058                      ; Main loop events.
    3715   00:D058                      
    3716   00:D058  DD 21 C2 DE                ld ix,ssprit        ; point to spare sprite for spawning purposes.
    3717   00:D05C  CD 69 83            evlp2  call evnt11         ; called once per main loop.
    3718   00:D05F                      
    3719   00:D05F  CD 00 D8            bsortx call bsort          ; sort sprites.
    3720   00:D062  3A 5A C9                   ld a,(nexlev)       ; finished level flag.
    3721   00:D065  A7                         and a               ; has it been set?
    3722   00:D066  20 1D                      jr nz,newlev        ; yes, go to next level.
    3723   00:D068  3A 5D C9                   ld a,(gamwon)       ; finished game flag.
    3724   00:D06B  A7                         and a               ; has it been set?
    3725   00:D06C  20 27                      jr nz,evwon         ; yes, finish the game.
    3726   00:D06E  3A 5B C9                   ld a,(restfl)       ; finished level flag.
    3727   00:D071  3D                         dec a               ; has it been set?
    3728   00:D072  28 88                      jr z,rstrt          ; yes, go to next level.
    3729   00:D074  3D                         dec a               ; has it been set?
    3730   00:D075  28 93                      jr z,rstrtn         ; yes, go to next level.
    3731   00:D077                      
    3732   00:D077  3A 5C C9                   ld a,(deadf)        ; dead flag.
    3733   00:D07A  A7                         and a               ; is it non-zero?
    3734   00:D07B  20 1E                      jr nz,pdead         ; yes, player dead.
    3735   00:D07D                      
    3736   00:D07D  21 22 C9                   ld hl,frmno         ; game frame.
    3737   00:D080  34                         inc (hl)            ; advance the frame.
    3738   00:D081                      
    3739   00:D081                      ; Back to start of main loop.
    3740   00:D081                      
    3741   00:D081  C3 37 D0            qoff   jp mloop            ; switched to a jp nz,mloop during test mode.
    3742   00:D084  C9                         ret
    3743   00:D085                      
    3744   00:D085                      
    3745   00:D085                      ;----------------------------------------------------------
    3746   00:D085                      ; Read blocks from list and update screen accordingly.
    3747   00:D085                      ;----------------------------------------------------------
    3748   00:D085                          IF AFLAG
    3749   00:D085                    ~ rbloc:
    3750   00:D085                    ~ pbbuf  ld de,eop           ; check for last block
    3751   00:D085                    ~ rbloc2 ld hl,(pbptr+1)
    3752   00:D085                    ~        or a
    3753   00:D085                    ~        sbc hl,de
    3754   00:D085                    ~        ret z
    3755   00:D085                    ~ rbloc1 ex de,hl
    3756   00:D085                    ~        ld a,(scno)
    3757   00:D085                    ~        cp (hl)             ; pbbuf
    3758   00:D085                    ~        jr nz,rbloc0
    3759   00:D085                    ~        push hl
    3760   00:D085                    ~        inc hl
    3761   00:D085                    ~        ld de,dispx
    3762   00:D085                    ~        ldi                 ; dispx
    3763   00:D085                    ~        ldi                 ; dispy
    3764   00:D085                    ~        ld a,(hl)
    3765   00:D085                    ~        call pattr2         ; draw block
    3766   00:D085                    ~        pop hl
    3767   00:D085                    ~ rbloc0 ld de,0004h
    3768   00:D085                    ~        add hl,de           ; point to next block
    3769   00:D085                    ~        ex de,hl
    3770   00:D085                    ~        jr rbloc2
    3771   00:D085                    ~     ENDIF
    3772   00:D085                      
    3773   00:D085                      
    3774   00:D085  3A 38 C9            newlev ld a,(scno)         ; current screen.
    3775   00:D088  21 85 9D                   ld hl,numsc         ; total number of screens.
    3776   00:D08B  3C                         inc a               ; next screen.
    3777   00:D08C  BE                         cp (hl)             ; reached the limit?
    3778   00:D08D  30 06                      jr nc,evwon         ; yes, game finished.
    3779   00:D08F  32 38 C9                   ld (scno),a         ; set new level number.
    3780   00:D092  C3 FC CF                   jp rstrt            ; restart, clearing all aliens.
    3781   00:D095  CD FB 86            evwon  call evnt18         ; game completed.
    3782   00:D098  C3 AC D0                   jp tidyup           ; tidy up and return to BASIC/calling routine.
    3783   00:D09B                      
    3784   00:D09B                      ; Player dead.
    3785   00:D09B                      
    3786   00:D09B  AF                  pdead  xor a               ; zeroise accumulator.
    3787   00:D09C  32 5C C9                   ld (deadf),a        ; reset dead flag.
    3788   00:D09F  CD 97 86            evdie  call evnt16         ; death subroutine.
    3789   00:D0A2  3A 39 C9                   ld a,(numlif)       ; number of lives.
    3790   00:D0A5  A7                         and a               ; reached zero yet?
    3791   00:D0A6  C2 FC CF                   jp nz,rstrt         ; restart game.
    3792   00:D0A9  CD A9 86            evfail call evnt17         ; failure event.
    3793   00:D0AC  21 77 D2            tidyup ld hl,hiscor        ; high score.
    3794   00:D0AF  11 71 D2                   ld de,score         ; player's score.
    3795   00:D0B2  06 06                      ld b,6              ; digits to check.
    3796   00:D0B4  1A                  tidyu2 ld a,(de)           ; get score digit.
    3797   00:D0B5  BE                         cp (hl)             ; are we larger than high score digit?
    3798   00:D0B6  38 06                      jr c,tidyu0         ; high score is bigger.
    3799   00:D0B8  20 05                      jr nz,tidyu1        ; score is greater, record new high score.
    3800   00:D0BA  23                         inc hl              ; next digit of high score.
    3801   00:D0BB  13                         inc de              ; next digit of score.
    3802   00:D0BC  10 F6                      djnz tidyu2         ; repeat for all digits.
    3803   00:D0BE                      
    3804   00:D0BE                      ;tidyu0 ld hl,(firmad)      ; firmware interrupt address.
    3805   00:D0BE                      ;       ld ($0038+1),hl     ; restore interrupts.
    3806   00:D0BE                      ;       ld hl,score         ; return pointing to score so programmer can store high-score.
    3807   00:D0BE                      
    3808   00:D0BE                      
    3809   00:D0BE                      
    3810   00:D0BE                      tidyu0
    3811   00:D0BE                      
    3812   00:D0BE                      
    3813   00:D0BE  C9                         ret
    3814   00:D0BF  21 71 D2            tidyu1 ld hl,score         ; score.
    3815   00:D0C2  11 77 D2                   ld de,hiscor        ; high score.
    3816   00:D0C5  01 06 00                   ld bc,6             ; digits to copy.
    3817   00:D0C8  ED B0                      ldir                ; copy score to high score.
    3818   00:D0CA  CD 0A 88            evnewh call evnt19         ; new high score event.
    3819   00:D0CD  18 EF                      jr tidyu0           ; tidy up.
    3820   00:D0CF                      
    3821   00:D0CF                      ; Restart event.
    3822   00:D0CF                      
    3823   00:D0CF  DD 21 C2 DE         rsevt  ld ix,ssprit        ; default to spare element in table.
    3824   00:D0D3  C3 73 86            evrs   jp evnt14           ; call restart event.
    3825   00:D0D6                      
    3826   00:D0D6                      ; Copy number passed in a to string position bc, right-justified.
    3827   00:D0D6                      
    3828   00:D0D6  6F                  num2ch ld l,a              ; put accumulator in l.
    3829   00:D0D7  26 00                      ld h,0              ; blank high byte of hl.
    3830   00:D0D9  3E 20                      ld a,32             ; leading spaces.
    3831   00:D0DB  11 64 00            numdg3 ld de,100           ; hundreds column.
    3832   00:D0DE  CD EC D0                   call numdg          ; show digit.
    3833   00:D0E1  11 0A 00            numdg2 ld de,10            ; tens column.
    3834   00:D0E4  CD EC D0                   call numdg          ; show digit.
    3835   00:D0E7  F6 10                      or 16               ; last digit is always shown.
    3836   00:D0E9  11 01 00                   ld de,1             ; units column.
    3837   00:D0EC  E6 30               numdg  and 48              ; clear carry, clear digit.
    3838   00:D0EE  ED 52               numdg1 sbc hl,de           ; subtract from column.
    3839   00:D0F0  38 05                      jr c,numdg0         ; nothing to show.
    3840   00:D0F2  F6 10                      or 16               ; something to show, make it a digit.
    3841   00:D0F4  3C                         inc a               ; increment digit.
    3842   00:D0F5  18 F7                      jr numdg1           ; repeat until column is zero.
    3843   00:D0F7  19                  numdg0 add hl,de           ; restore total.
    3844   00:D0F8  FE 20                      cp 32               ; leading space?
    3845   00:D0FA  C8                         ret z               ; yes, don't write that.
    3846   00:D0FB  02                         ld (bc),a           ; write digit to buffer.
    3847   00:D0FC  03                         inc bc              ; next buffer position.
    3848   00:D0FD  C9                         ret
    3849   00:D0FE  6F                  num2dd ld l,a              ; put accumulator in l.
    3850   00:D0FF  26 00                      ld h,0              ; blank high byte of hl.
    3851   00:D101  3E 20                      ld a,32             ; leading spaces.
    3852   00:D103  11 64 00                   ld de,100           ; hundreds column.
    3853   00:D106  CD EC D0                   call numdg          ; show digit.
    3854   00:D109  F6 10                      or 16               ; second digit is always shown.
    3855   00:D10B  18 D4                      jr numdg2
    3856   00:D10D  6F                  num2td ld l,a              ; put accumulator in l.
    3857   00:D10E  26 00                      ld h,0              ; blank high byte of hl.
    3858   00:D110  3E 30                      ld a,48             ; leading spaces.
    3859   00:D112  18 C7                      jr numdg3
    3860   00:D114                      
    3861   00:D114  06 06               inisc  ld b,6              ; digits to initialise.
    3862   00:D116  36 30               inisc0 ld (hl),'0'         ; write zero digit.
    3863   00:D118  23                         inc hl              ; next column.
    3864   00:D119  10 FB                      djnz inisc0         ; repeat for all digits.
    3865   00:D11B  C9                         ret
    3866   00:D11C                      
    3867   00:D11C                      
    3868   00:D11C                      ; Multiply h by d and return in hl.
    3869   00:D11C                      
    3870   00:D11C  5A                  imul   ld e,d              ; HL = H * D
    3871   00:D11D  4C                         ld c,h              ; make c first multiplier.
    3872   00:D11E  21 00 00            imul0  ld hl,0             ; zeroise total.
    3873   00:D121  54                         ld d,h              ; zeroise high byte.
    3874   00:D122  06 08                      ld b,8              ; repeat 8 times.
    3875   00:D124  CB 19               imul1  rr c                ; rotate rightmost bit into carry.
    3876   00:D126  30 02                      jr nc,imul2         ; wasn't set.
    3877   00:D128  19                         add hl,de           ; bit was set, so add de.
    3878   00:D129  A7                         and a               ; reset carry.
    3879   00:D12A  CB 13               imul2  rl e                ; shift de 1 bit left.
    3880   00:D12C  CB 12                      rl d
    3881   00:D12E  10 F4                      djnz imul1          ; repeat 8 times.
    3882   00:D130  C9                         ret
    3883   00:D131                      
    3884   00:D131                      ; Divide d by e and return in d, remainder in a.
    3885   00:D131                      
    3886   00:D131  AF                  idiv   xor a
    3887   00:D132  06 08                      ld b,8              ; bits to shift.
    3888   00:D134  CB 22               idiv0  sla d               ; multiply d by 2.
    3889   00:D136  17                         rla                 ; shift carry into remainder.
    3890   00:D137  BB                         cp e                ; test if e is smaller.
    3891   00:D138  38 02                      jr c,idiv1          ; e is greater, no division this time.
    3892   00:D13A  93                         sub e               ; subtract it.
    3893   00:D13B  14                         inc d               ; rotate into d.
    3894   00:D13C  10 F6               idiv1  djnz idiv0
    3895   00:D13E  C9                         ret
    3896   00:D13F                      
    3897   00:D13F                      ; Initialise a sound.
    3898   00:D13F                      
    3899   00:D13F                      isnd
    3900   00:D13F                      ;       ld de,(ch1ptr)      ; first pointer.
    3901   00:D13F                      ;       ld a,(de)           ; get first byte.
    3902   00:D13F                      ;       inc a               ; reached the end?
    3903   00:D13F                      ;       jr z,isnd1          ; that'll do.
    3904   00:D13F                      ;       ld de,(ch2ptr)      ; second pointer.
    3905   00:D13F                      ;       ld a,(de)           ; get first byte.
    3906   00:D13F                      ;       inc a               ; reached the end?
    3907   00:D13F                      ;       jr z,isnd2          ; that'll do.
    3908   00:D13F                      ;       ld de,(ch3ptr)      ; final pointer.
    3909   00:D13F                      ;       ld a,(de)           ; get first byte.
    3910   00:D13F                      ;       inc a               ; reached the end?
    3911   00:D13F                      ;       jr z,isnd3          ; that'll do.
    3912   00:D13F                      ;       ret
    3913   00:D13F                      ;isnd1  ld (ch1ptr),hl      ; set up the sound.
    3914   00:D13F                      ;       ret
    3915   00:D13F                      ;isnd2  ld (ch2ptr),hl      ; set up the sound.
    3916   00:D13F                      ;       ret
    3917   00:D13F                      ;isnd3  ld (ch3ptr),hl      ; set up the sound.
    3918   00:D13F  C9                         ret
    3919   00:D140                      ;
    3920   00:D140                      ;
    3921   00:D140                      ;ch1ptr defw spmask
    3922   00:D140                      ;ch2ptr defw spmask
    3923   00:D140                      ;ch3ptr defw spmask
    3924   00:D140                      ;
    3925   00:D140                      ;plsnd  call plsnd1         ; first channel.
    3926   00:D140                      ;       call plsnd2         ; second one.
    3927   00:D140                      ;       call plsnd3         ; final channel.
    3928   00:D140                      ;
    3929   00:D140                      ;
    3930   00:D140                      plsnd
    3931   00:D140  C9                  	ret
    3932   00:D141                      ;
    3933   00:D141                      ;
    3934   00:D141                      ; Write the contents of our AY buffer to the AY registers.
    3935   00:D141                      ;
    3936   00:D141                      ;w8912  ld hl,snddat        ; start of AY-3-8912 register data.
    3937   00:D141                      ;       ld de,14*256        ; start with register 0, 14 to write.
    3938   00:D141                      ;
    3939   00:D141                      ;w8912a ld a,e              ; AY register to write to.
    3940   00:D141                      ;       out (REG),a         ; select AY register to write to.
    3941   00:D141                      ;       ld a,(hl)           ; value to write.
    3942   00:D141                      ;       out (WR),a          ; write value to selected AY register.
    3943   00:D141                      ;
    3944   00:D141                      ;       inc e               ; next sound chip register.
    3945   00:D141                      ;       inc hl              ; next byte to write.
    3946   00:D141                      ;       dec d               ; decrement loop counter.
    3947   00:D141                      ;       jp nz,w8912a        ; repeat until done.
    3948   00:D141                      ;       ret
    3949   00:D141                      ;
    3950   00:D141                      ;snddat defw 0              ; tone registers, channel A.
    3951   00:D141                      ;       defw 0              ; channel B tone registers.
    3952   00:D141                      ;       defw 0              ; as above, channel C.
    3953   00:D141                      ;sndwnp defb 0              ; white noise period.
    3954   00:D141                      ;
    3955   00:D141                      ;sndmix defb %01111100      ; tone/noise mixer control.
    3956   00:D141                      ;                           ; [%01......] I/O port A and I/O port B configuration for MC-1000.
    3957   00:D141                      ;                           ; [%..1.....] channel C white noise silent.
    3958   00:D141                      ;                           ; [%...1....] channel B white noise silent.
    3959   00:D141                      ;                           ; [%....1...] channel A white noise silent.
    3960   00:D141                      ;                           ; [%.....1..] channel C tone silent.
    3961   00:D141                      ;                           ; [%......0.] channel B tone active.
    3962   00:D141                      ;                           ; [%.......0] channel A tone active.
    3963   00:D141                      ;
    3964   00:D141                      ;sndmix defb %01111100      ; tone/noise mixer control.
    3965   00:D141                      ;
    3966   00:D141                      ; <VZ?> Not sure what to do here. Will take a lot of work
    3967   00:D141                      ;sndv1  defb 0              ; channel A amplitude/envelope generator.
    3968   00:D141                      ;sndv2  defb 0              ; channel B amplitude/envelope.
    3969   00:D141                      ;sndv3  defb 0              ; channel C amplitude/envelope.
    3970   00:D141                      ;       defw 0              ; duration of each note.
    3971   00:D141                      ;       defb 0
    3972   00:D141                      ;
    3973   00:D141                      ;plwn   inc hl              ; next byte of sound.
    3974   00:D141                      ;       and %00111000       ; check if we're bothering with white noise.
    3975   00:D141                      ;       ret nz              ; we're not.
    3976   00:D141                      ;       ld a,(hl)           ; fetch byte.
    3977   00:D141                      ;       ld (sndwnp),a       ; set white noise period.
    3978   00:D141                      ;       ret
    3979   00:D141                      ;
    3980   00:D141                      ;
    3981   00:D141                      ;plsnd2 call cksnd2         ; check sound for second channel.
    3982   00:D141                      ;       cp 255              ; reached end?
    3983   00:D141                      ;       jr z,silen2         ; silence this channel.
    3984   00:D141                      ;       and %00001111       ; sound bits.
    3985   00:D141                      ;       ld (sndv2),a        ; set volume for channel.
    3986   00:D141                      ;       ld a,(sndmix)       ; mixer byte.
    3987   00:D141                      ;       and %11101101       ; remove bits for this channel.
    3988   00:D141                      ;       ld b,a              ; store in b register.
    3989   00:D141                      ;       call plmix          ; fetch mixer details.
    3990   00:D141                      ;       and %00010010       ; mixer bits we want.
    3991   00:D141                      ;       or b                ; combine with mixer bits.
    3992   00:D141                      ;       ld (sndmix),a       ; new mixer value.
    3993   00:D141                      ;       call plwn           ; white noise check.
    3994   00:D141                      ;       inc hl              ; tone low.
    3995   00:D141                      ;       ld e,(hl)           ; fetch value.
    3996   00:D141                      ;       inc hl              ; tone high.
    3997   00:D141                      ;       ld d,(hl)           ; fetch value.
    3998   00:D141                      ;       ld (snddat+2),de    ; set tone.
    3999   00:D141                      ;       inc hl              ; next bit of sound.
    4000   00:D141                      ;       ld (ch2ptr),hl      ; set pointer.
    4001   00:D141                      ;       ret
    4002   00:D141                      ;
    4003   00:D141                      ;plsnd3 call cksnd3         ; check sound for third channel.
    4004   00:D141                      ;       cp 255              ; reached end?
    4005   00:D141                      ;       jr z,silen3         ; silence last channel.
    4006   00:D141                      ;       and %00001111       ; sound bits.
    4007   00:D141                      ;       ld (sndv3),a        ; set volume for channel.
    4008   00:D141                      ;       ld a,(sndmix)       ; mixer byte.
    4009   00:D141                      ;       and %11011011       ; remove bits for this channel.
    4010   00:D141                      ;       ld b,a              ; store in b register.
    4011   00:D141                      ;       call plmix          ; fetch mixer details.
    4012   00:D141                      ;       and %00100100       ; mixer bits we want.
    4013   00:D141                      ;       or b                ; combine with mixer bits.
    4014   00:D141                      ;       ld (sndmix),a       ; new mixer value.
    4015   00:D141                      ;       call plwn           ; white noise check.
    4016   00:D141                      ;       inc hl              ; tone low.
    4017   00:D141                      ;       ld e,(hl)           ; fetch value.
    4018   00:D141                      ;       inc hl              ; tone high.
    4019   00:D141                      ;       ld d,(hl)           ; fetch value.
    4020   00:D141                      ;       ld (snddat+4),de    ; set tone.
    4021   00:D141                      ;       inc hl              ; next bit of sound.
    4022   00:D141                      ;       ld (ch3ptr),hl      ; set pointer.
    4023   00:D141                      ;       ret
    4024   00:D141                      ;
    4025   00:D141                      ;plmix  ld a,(hl)           ; fetch mixer byte.
    4026   00:D141                      ;       and %11000000       ; mix bits are d6 and d7.
    4027   00:D141                      ;       rlca                ; rotate into d0 and d1.
    4028   00:D141                      ;       rlca
    4029   00:D141                      ;       ld e,a              ; displacement in de.
    4030   00:D141                      ;       ld d,0
    4031   00:D141                      ;       push hl             ; store pointer on stack.
    4032   00:D141                      ;       ld hl,mixtab        ; mixer table.
    4033   00:D141                      ;       add hl,de           ; point to mixer byte.
    4034   00:D141                      ;       ld a,(hl)           ; fetch mixer value.
    4035   00:D141                      ;       pop hl              ; restore pointer.
    4036   00:D141                      ;       ret
    4037   00:D141                      ;mixtab defb %00111111,%00111000,%00000111,%00000000 ; mixer byte settings.
    4038   00:D141                      ;
    4039   00:D141                      ;silen1 xor a               ; zero.
    4040   00:D141                      ;       ld (sndv1),a        ; sound off.
    4041   00:D141                      ;       ld a,(sndmix)       ; mixer byte.
    4042   00:D141                      ;       or %00001001        ; mix bits off.
    4043   00:D141                      ;       ld (sndmix),a       ; mixer setting for channel.
    4044   00:D141                      ;       ret
    4045   00:D141                      ;silen2 xor a               ; zero.
    4046   00:D141                      ;       ld (sndv2),a        ; sound off.
    4047   00:D141                      ;       ld a,(sndmix)       ; mixer byte.
    4048   00:D141                      ;       or %00010010        ; mix bits off.
    4049   00:D141                      ;       ld (sndmix),a       ; mixer setting for channel.
    4050   00:D141                      ;       ret
    4051   00:D141                      ;silen3 xor a               ; zero.
    4052   00:D141                      ;       ld (sndv3),a        ; sound off.
    4053   00:D141                      ;       ld a,(sndmix)       ; mixer byte.
    4054   00:D141                      ;       or %00100100        ; mix bits off.
    4055   00:D141                      ;       ld (sndmix),a       ; mixer setting for channel.
    4056   00:D141                      ;       ret
    4057   00:D141                      ;cksnd1 ld hl,(ch1ptr)      ; pointer to sound.
    4058   00:D141                      ;       ld a,(hl)           ; fetch mixer/flag.
    4059   00:D141                      ;       ret
    4060   00:D141                      ;cksnd2 ld hl,(ch2ptr)      ; pointer to sound.
    4061   00:D141                      ;       ld a,(hl)           ; fetch mixer/flag.
    4062   00:D141                      ;       ret
    4063   00:D141                      ;cksnd3 ld hl,(ch3ptr)      ; pointer to sound.
    4064   00:D141                      ;       ld a,(hl)           ; fetch mixer/flag.
    4065   00:D141                      ;       ret
    4066   00:D141                      ;
    4067   00:D141                      ;plsnd1 call cksnd1         ; check sound for first channel.
    4068   00:D141                      ;       cp 255              ; reached end?
    4069   00:D141                      ;       jr z,silen1         ; silence first channel.
    4070   00:D141                      ;       and %00001111       ; sound bits.
    4071   00:D141                      ;       ld (sndv1),a        ; set volume for channel.
    4072   00:D141                      ;       ld a,(sndmix)       ; mixer byte.
    4073   00:D141                      ;       and %11110110       ; remove bits for this channel.
    4074   00:D141                      ;       ld b,a              ; store in b register.
    4075   00:D141                      ;       call plmix          ; fetch mixer details.
    4076   00:D141                      ;       and %00001001       ; mixer bits we want.
    4077   00:D141                      ;       or b                ; combine with mixer bits.
    4078   00:D141                      ;       ld (sndmix),a       ; new mixer value.
    4079   00:D141                      ;       call plwn           ; white noise check.
    4080   00:D141                      ;       inc hl              ; tone low.
    4081   00:D141                      ;       ld e,(hl)           ; fetch value.
    4082   00:D141                      ;       inc hl              ; tone high.
    4083   00:D141                      ;       ld d,(hl)           ; fetch value.
    4084   00:D141                      ;       ld (snddat),de      ; set tone.
    4085   00:D141                      ;       inc hl              ; next bit of sound.
    4086   00:D141                      ;       ld (ch1ptr),hl      ; set pointer.
    4087   00:D141                      ;       ret
    4088   00:D141                      
    4089   00:D141                      
    4090   00:D141                      ; Objects handling.
    4091   00:D141                      ; 32 bytes for image
    4092   00:D141                      ; 1 for colour
    4093   00:D141                      ; 3 for room, x and y
    4094   00:D141                      ; 3 for starting room, x and y.
    4095   00:D141                      ; 254 = disabled.
    4096   00:D141                      ; 255 = object in player's pockets.
    4097   00:D141                      
    4098   00:D141                      ; Show items present.
    4099   00:D141                      
    4100   00:D141  21 E8 C1            shwob  ld hl,objdta        ; objects table.
    4101   00:D144                      ;<zx>
    4102   00:D144                      
    4103   00:D144  11 21 00                   ld de,obj_len+1            ; distance to room number.
    4104   00:D147                      
    4105   00:D147                      ;</zx>
    4106   00:D147  19                         add hl,de           ; point to room data.
    4107   00:D148  3A 33 C9                   ld a,(numob)        ; number of objects in the game.
    4108   00:D14B  47                         ld b,a              ; loop counter.
    4109   00:D14C  C5                  shwob0 push bc             ; store count.
    4110   00:D14D  E5                         push hl             ; store item pointer.
    4111   00:D14E  3A 38 C9                   ld a,(scno)         ; current location.
    4112   00:D151  BE                         cp (hl)             ; same as an item?
    4113   00:D152                      ;<zx>
    4114   00:D152  CC 5E D1                   call z,dobjc        ; yes, display object in colour.
    4115   00:D155                      ;</zx>
    4116   00:D155  E1                         pop hl              ; restore pointer.
    4117   00:D156  C1                         pop bc              ; restore counter.
    4118   00:D157                      ;<zx>
    4119   00:D157  11 27 00                   ld de,obj_len+7            ; distance to next item.
    4120   00:D15A                      ;</zx>
    4121   00:D15A  19                         add hl,de           ; point to it.
    4122   00:D15B  10 EF                      djnz shwob0         ; repeat for others.
    4123   00:D15D  C9                         ret
    4124   00:D15E                      
    4125   00:D15E                      ; Display object.
    4126   00:D15E                      ; hl must point to object's room number.
    4127   00:D15E                      
    4128   00:D15E                      
    4129   00:D15E                      dobjc: ; no object/sprite coloring. just display it.
    4130   00:D15E                      
    4131   00:D15E                      
    4132   00:D15E  23                  dobj   inc hl              ; point to x.
    4133   00:D15F  11 5E C9            dobj0  ld de,dispx         ; coordinates.
    4134   00:D162  ED A0                      ldi                 ; transfer x coord.
    4135   00:D164  ED A0                      ldi                 ; transfer y too.
    4136   00:D166                      ;<zx>
    4137   00:D166  11 DC FF                   ld de,65536-obj_len-4         ; minus 36.
    4138   00:D169                      ;</zx>
    4139   00:D169  19                         add hl,de           ; point to image.
    4140   00:D16A  C3 EC D3            dobj1  jp sprite           ; draw this sprite.
    4141   00:D16D                      
    4142   00:D16D                      
    4143   00:D16D                             ; no object/sprite coloring.
    4144   00:D16D                      
    4145   00:D16D                      
    4146   00:D16D                      ; Remove an object.
    4147   00:D16D                      
    4148   00:D16D  21 33 C9            remob  ld hl,numob         ; number of objects in game.
    4149   00:D170  BE                         cp (hl)             ; are we checking past the end?
    4150   00:D171  D0                         ret nc              ; yes, can't get non-existent item.
    4151   00:D172  F5                         push af             ; remember object.
    4152   00:D173  CD 7D D1                   call getob          ; pick it up if we haven't already got it.
    4153   00:D176  F1                         pop af              ; retrieve object number.
    4154   00:D177  CD A2 D1                   call gotob          ; get its address.
    4155   00:D17A  36 FE                      ld (hl),254         ; remove it.
    4156   00:D17C  C9                         ret
    4157   00:D17D                      
    4158   00:D17D                      ; Pick up object number held in the accumulator.
    4159   00:D17D                      ; hl 7dd8
    4160   00:D17D                      ; de ffdc
    4161   00:D17D                      
    4162   00:D17D  21 33 C9            getob  ld hl,numob         ; number of objects in game.
    4163   00:D180  BE                         cp (hl)             ; are we checking past the end?
    4164   00:D181  D0                         ret nc              ; yes, can't get non-existent item.
    4165   00:D182  CD A2 D1                   call gotob          ; check if we already have it.
    4166   00:D185  C8                         ret z               ; we already do.
    4167   00:D186  EB                         ex de,hl            ; object address in de.
    4168   00:D187  21 38 C9                   ld hl,scno          ; current screen.
    4169   00:D18A  BE                         cp (hl)             ; is it on this screen?
    4170   00:D18B  EB                         ex de,hl            ; object address back in hl.
    4171   00:D18C  20 11                      jr nz,getob0        ; not on screen, so nothing to delete.
    4172   00:D18E  36 FF                      ld (hl),255         ; pick it up.
    4173   00:D190  23                         inc hl              ; point to x coord.
    4174   00:D191  5E                  getob1 ld e,(hl)           ; x coord.
    4175   00:D192  23                         inc hl              ; back to y coord.
    4176   00:D193  56                         ld d,(hl)           ; y coord.
    4177   00:D194  ED 53 5E C9                ld (dispx),de       ; set display coords.
    4178   00:D198                      ;<zx>
    4179   00:D198  11 DD FF                   ld de,65536-obj_len-3        ; minus graphic size.65501 
    4180   00:D19B                      ;</zx>
    4181   00:D19B  19                         add hl,de           ; point to graphics.
    4182   00:D19C  CD 6A D1                   call dobj1          ; delete object sprite.
    4183   00:D19F                      
    4184   00:D19F                             ; no sprite coloring.
    4185   00:D19F                      
    4186   00:D19F  36 FF               getob0 ld (hl),255         ; pick it up.
    4187   00:D1A1  C9                         ret
    4188   00:D1A2                      
    4189   00:D1A2                      ; Got object check.
    4190   00:D1A2                      ; Call with object in accumulator, returns zero set if in pockets.
    4191   00:D1A2                      
    4192   00:D1A2  21 33 C9            gotob  ld hl,numob         ; number of objects in game.
    4193   00:D1A5  BE                         cp (hl)             ; are we checking past the end?
    4194   00:D1A6  30 06                      jr nc,gotob0        ; yes, we can't have a non-existent object.
    4195   00:D1A8  CD B2 D1                   call findob         ; find the object.
    4196   00:D1AB  FE FF               gotob1 cp 255              ; in pockets?
    4197   00:D1AD  C9                         ret
    4198   00:D1AE  3E FE               gotob0 ld a,254            ; missing.
    4199   00:D1B0  18 F9                      jr gotob1
    4200   00:D1B2                      
    4201   00:D1B2  21 E8 C1            findob ld hl,objdta        ; objects.
    4202   00:D1B5                      ;<zx>
    4203   00:D1B5  11 27 00                   ld de,obj_len+7            ; size of each object.
    4204   00:D1B8                      ;</zx>
    4205   00:D1B8  A7                         and a               ; is it zero?
    4206   00:D1B9  28 04                      jr z,fndob1         ; yes, skip loop.
    4207   00:D1BB  47                         ld b,a              ; loop counter in b.
    4208   00:D1BC  19                  fndob2 add hl,de           ; point to next one.
    4209   00:D1BD  10 FD                      djnz fndob2         ; repeat until we find address.
    4210   00:D1BF                      ;<zx>
    4211   00:D1BF  1E 21               fndob1 ld e,obj_len+1             ; distance to room it's in.
    4212   00:D1C1                      ;</zx>
    4213   00:D1C1  19                         add hl,de           ; point to room.
    4214   00:D1C2  7E                         ld a,(hl)           ; fetch status.
    4215   00:D1C3  C9                         ret
    4216   00:D1C4                      
    4217   00:D1C4                      ; Drop object number at (dispx, dispy).
    4218   00:D1C4                      
    4219   00:D1C4  21 33 C9            drpob  ld hl,numob         ; number of objects in game.
    4220   00:D1C7  BE                         cp (hl)             ; are we checking past the end?
    4221   00:D1C8  D0                         ret nc              ; yes, can't drop non-existent item.
    4222   00:D1C9  CD A2 D1                   call gotob          ; make sure object is in inventory.
    4223   00:D1CC  3A 38 C9                   ld a,(scno)         ; screen number.
    4224   00:D1CF  BE                         cp (hl)             ; already on this screen?
    4225   00:D1D0  C8                         ret z               ; yes, nothing to do.
    4226   00:D1D1  77                         ld (hl),a           ; bring onto screen.
    4227   00:D1D2  23                         inc hl              ; point to x coord.
    4228   00:D1D3  3A 5E C9                   ld a,(dispx)        ; sprite x coordinate.
    4229   00:D1D6  77                         ld (hl),a           ; set x coord.
    4230   00:D1D7  23                         inc hl              ; point to object y.
    4231   00:D1D8  3A 5F C9                   ld a,(dispy)        ; sprite y coordinate.
    4232   00:D1DB  77                         ld (hl),a           ; set the y position.
    4233   00:D1DC                      ;<zx>
    4234   00:D1DC  11 DD FF                   ld de,65536-obj_len-3         ; minus graphic size.
    4235   00:D1DF                      ;</zx>
    4236   00:D1DF  19                         add hl,de           ; point to graphics.
    4237   00:D1E0                      
    4238   00:D1E0  C3 6A D1                   jp dobj1            ; delete object sprite.
    4239   00:D1E3                             ; no sprite/object coloring.
    4240   00:D1E3                      
    4241   00:D1E3                      
    4242   00:D1E3                      ; Seek objects at sprite position.
    4243   00:D1E3                      
    4244   00:D1E3  21 E8 C1            skobj  ld hl,objdta        ; pointer to objects.
    4245   00:D1E6  11 21 00                   ld de,obj_len+1            ; distance to room number.
    4246   00:D1E9  19                         add hl,de           ; point to room data.
    4247   00:D1EA  11 27 00                   ld de,obj_len+7            ; size of each object.
    4248   00:D1ED  3A 33 C9                   ld a,(numob)        ; number of objects in game.
    4249   00:D1F0  47                         ld b,a              ; set up the loop counter.
    4250   00:D1F1  3A 38 C9            skobj0 ld a,(scno)         ; current room number.
    4251   00:D1F4  BE                         cp (hl)             ; is object in here?
    4252   00:D1F5  CC FE D1                   call z,skobj1       ; yes, check coordinates.
    4253   00:D1F8  19                         add hl,de           ; point to next object in table.
    4254   00:D1F9  10 F6                      djnz skobj0         ; repeat for all objects.
    4255   00:D1FB  3E FF                      ld a,255            ; end of list and nothing found, return 255.
    4256   00:D1FD  C9                         ret
    4257   00:D1FE  23                  skobj1 inc hl              ; point to x coordinate.
    4258   00:D1FF  7E                         ld a,(hl)           ; get coordinate.
    4259   00:D200  DD 96 08                   sub (ix+8)          ; subtract sprite x.
    4260   00:D203  C6 0F                      add a,COLDIST            ; add sprite height minus one.
    4261   00:D205  FE 1F                      cp 2 * COLDIST + 1              ; within range?
    4262   00:D207  D2 1D D2                   jp nc,skobj2        ; no, ignore object.
    4263   00:D20A  23                         inc hl              ; point to y coordinate now.
    4264   00:D20B  7E                         ld a,(hl)           ; get coordinate.
    4265   00:D20C  DD 96 09                   sub (ix+9)          ; subtract the sprite y.
    4266   00:D20F  C6 0F                      add a,15            ; add sprite width minus one.
    4267   00:D211  FE 1F                      cp 31               ; within range?
    4268   00:D213  D2 1C D2                   jp nc,skobj3        ; no, ignore object.
    4269   00:D216  D1                         pop de              ; remove return address from stack.
    4270   00:D217  3A 33 C9                   ld a,(numob)        ; objects in game.
    4271   00:D21A  90                         sub b               ; subtract loop counter.
    4272   00:D21B  C9                         ret                 ; accumulator now points to object.
    4273   00:D21C  2B                  skobj3 dec hl              ; back to y position.
    4274   00:D21D  2B                  skobj2 dec hl              ; back to room.
    4275   00:D21E  C9                         ret
    4276   00:D21F                      
    4277   00:D21F                      
    4278   00:D21F                      ; Spawn a new sprite.
    4279   00:D21F                      
    4280   00:D21F  21 F6 DD            spawn  ld hl,sprtab        ; sprite table.
    4281   00:D222  3E 0C               numsp1 ld a,NUMSPR         ; number of sprites.
    4282   00:D224  11 11 00                   ld de,TABSIZ        ; size of each entry.
    4283   00:D227  08                  spaw0  ex af,af'           ; store loop counter.
    4284   00:D228  7E                         ld a,(hl)           ; get sprite type.
    4285   00:D229  3C                         inc a               ; is it an unused slot?
    4286   00:D22A  28 05                      jr z,spaw1          ; yes, we can use this one.
    4287   00:D22C  19                         add hl,de           ; point to next sprite in table.
    4288   00:D22D  08                         ex af,af'           ; restore loop counter.
    4289   00:D22E  3D                         dec a               ; one less iteration.
    4290   00:D22F  20 F6                      jr nz,spaw0         ; keep going until we find a slot.
    4291   00:D231                      
    4292   00:D231                      ; Didn't find one but drop through and set up a dummy sprite instead.
    4293   00:D231                      
    4294   00:D231  DD E5               spaw1  push ix             ; existing sprite address on stack.
    4295   00:D233  22 6E D2                   ld (spptr),hl       ; store spawned sprite address.
    4296   00:D236  71                         ld (hl),c           ; set the type.
    4297   00:D237  23                         inc hl              ; point to image.
    4298   00:D238  70                         ld (hl),b           ; set the image.
    4299   00:D239  23                         inc hl              ; next byte.
    4300   00:D23A  36 00                      ld (hl),0           ; frame zero.
    4301   00:D23C  23                         inc hl              ; next byte.
    4302   00:D23D  DD 7E 08                   ld a,(ix+X)         ; x coordinate.
    4303   00:D240  77                         ld (hl),a           ; set sprite coordinate.
    4304   00:D241  23                         inc hl              ; next byte.
    4305   00:D242  DD 7E 09                   ld a,(ix+Y)         ; y coordinate.
    4306   00:D245  77                         ld (hl),a           ; set sprite coordinate.
    4307   00:D246  23                         inc hl              ; next byte.
    4308   00:D247  EB                         ex de,hl            ; swap address into de.
    4309   00:D248  2A 6E D2                   ld hl,(spptr)       ; restore address of details.
    4310   00:D24B  01 05 00                   ld bc,5             ; number of bytes to duplicate.
    4311   00:D24E  ED B0                      ldir                ; copy first version to new version.
    4312   00:D250  EB                         ex de,hl            ; swap address into de.
    4313   00:D251  DD 7E 0A                   ld a,(ix+10)        ; direction of original.
    4314   00:D254  77                         ld (hl),a           ; set the direction.
    4315   00:D255  23                         inc hl              ; next byte.
    4316   00:D256  70                         ld (hl),b           ; reset parameter.
    4317   00:D257  23                         inc hl              ; next byte.
    4318   00:D258  70                         ld (hl),b           ; reset parameter.
    4319   00:D259  23                         inc hl              ; next byte.
    4320   00:D25A  70                         ld (hl),b           ; reset parameter.
    4321   00:D25B  23                         inc hl              ; next byte.
    4322   00:D25C  70                         ld (hl),b           ; reset parameter.
    4323   00:D25D  DD 2A 6E D2         rtssp  ld ix,(spptr)       ; address of new sprite.
    4324   00:D261  CD B4 7F            evis1  call evnt09         ; call sprite initialisation event.
    4325   00:D264  DD 2A 6E D2                ld ix,(spptr)       ; address of new sprite.
    4326   00:D268  CD 6A D9                   call sspria         ; display the new sprite.
    4327   00:D26B  DD E1                      pop ix              ; address of original sprite.
    4328   00:D26D  C9                         ret
    4329   00:D26E                      
    4330   00:D26E  00 00               spptr  defw 0              ; spawned sprite pointer.
    4331   00:D270  00                  seed   defb 0              ; seed for random numbers.
    4332   00:D271  30 30 30 30 30 30   score  defb '000000'       ; player's score.
    4333   00:D277  30 30 30 30 30 30   hiscor defb '000000'       ; high score.
    4334   00:D27D  30 30 30 30 30 30   bonus  defb '000000'       ; bonus.
    4335   00:D283                      
    4336   00:D283  00 00               grbase defw 0              ; graphics base address.
    4337   00:D285                      
    4338   00:D285                      
    4339   00:D285  7B                  checkx ld a,e              ; x position.
    4340   00:D286  FE 18                      cp SCRHGT           ; off screen?
    4341   00:D288  D8                         ret c               ; no, it's okay.
    4342   00:D289  E1                         pop hl              ; remove return address from stack.
    4343   00:D28A  C9                         ret
    4344   00:D28B                      
    4345   00:D28B                      ; Displays the current score.
    4346   00:D28B                      
    4347   00:D28B  CD E4 D7            dscor  call preprt         ; set up font and print position.
    4348   00:D28E  CD 85 D2                   call checkx         ; make sure we're in a printable range.
    4349   00:D291  3A 5F D7                   ld a,(prtmod)       ; get print mode.
    4350   00:D294  A7                         and a               ; standard size text?
    4351   00:D295  C2 B4 D2                   jp nz,bscor0        ; no, show double-height.
    4352   00:D298  C5                  dscor0 push bc             ; place counter onto the stack.
    4353   00:D299  E5                         push hl
    4354   00:D29A  7E                         ld a,(hl)           ; fetch character.
    4355   00:D29B  CD 64 D3                   call pchar          ; display character.
    4356   00:D29E                      
    4357   00:D29E                             ; no attribute.
    4358   00:D29E                      
    4359   00:D29E  21 5F C9                   ld hl,dispy         ; y coordinate.
    4360   00:D2A1  34                         inc (hl)            ; move along one.
    4361   00:D2A2  E1                         pop hl
    4362   00:D2A3  23                         inc hl              ; next score column.
    4363   00:D2A4  C1                         pop bc              ; retrieve character counter.
    4364   00:D2A5  10 F1                      djnz dscor0         ; repeat for all digits.
    4365   00:D2A7  2A 67 C9                   ld hl,(blkptr)      ; blocks.
    4366   00:D2AA  22 83 D2                   ld (grbase),hl      ; set graphics base.
    4367   00:D2AD  2A 5E C9            dscor2 ld hl,(dispx)       ; general coordinates.
    4368   00:D2B0  22 53 C9                   ld (charx),hl       ; set up display coordinates.
    4369   00:D2B3  C9                         ret
    4370   00:D2B4                      
    4371   00:D2B4                      ; Displays the current score in double-height characters.
    4372   00:D2B4                      
    4373   00:D2B4  C5                  bscor0 push bc             ; place counter onto the stack.
    4374   00:D2B5  E5                         push hl
    4375   00:D2B6  7E                         ld a,(hl)           ; fetch character.
    4376   00:D2B7  CD 83 D7                   call bchar          ; display big char.
    4377   00:D2BA  E1                         pop hl
    4378   00:D2BB  23                         inc hl              ; next score column.
    4379   00:D2BC  C1                         pop bc              ; retrieve character counter.
    4380   00:D2BD  10 F5                      djnz bscor0         ; repeat for all digits.
    4381   00:D2BF  C3 AD D2                   jp dscor2           ; tidy up line and column variables.
    4382   00:D2C2                      
    4383   00:D2C2                      ; Adds number in the hl pair to the score.
    4384   00:D2C2                      
    4385   00:D2C2  11 72 D2            addsc  ld de,score+1       ; ten thousands column.
    4386   00:D2C5  01 10 27                   ld bc,10000         ; amount to add each time.
    4387   00:D2C8  CD E4 D2                   call incsc          ; add to score.
    4388   00:D2CB  13                         inc de              ; thousands column.
    4389   00:D2CC  01 E8 03                   ld bc,1000          ; amount to add each time.
    4390   00:D2CF  CD E4 D2                   call incsc          ; add to score.
    4391   00:D2D2  13                         inc de              ; hundreds column.
    4392   00:D2D3  01 64 00                   ld bc,100           ; amount to add each time.
    4393   00:D2D6  CD E4 D2                   call incsc          ; add to score.
    4394   00:D2D9  13                         inc de              ; tens column.
    4395   00:D2DA  01 0A 00                   ld bc,10            ; amount to add each time.
    4396   00:D2DD  CD E4 D2                   call incsc          ; add to score.
    4397   00:D2E0  13                         inc de              ; units column.
    4398   00:D2E1  01 01 00                   ld bc,1             ; units.
    4399   00:D2E4  E5                  incsc  push hl             ; store amount to add.
    4400   00:D2E5  A7                         and a               ; clear the carry flag.
    4401   00:D2E6  ED 42                      sbc hl,bc           ; subtract from amount to add.
    4402   00:D2E8  38 09                      jr c,incsc0         ; too much, restore value.
    4403   00:D2EA  F1                         pop af              ; delete the previous amount from the stack.
    4404   00:D2EB  D5                         push de             ; store column position.
    4405   00:D2EC  CD F5 D2                   call incsc2         ; do the increment.
    4406   00:D2EF  D1                         pop de              ; restore column.
    4407   00:D2F0  C3 E4 D2                   jp incsc            ; repeat until all added.
    4408   00:D2F3  E1                  incsc0 pop hl              ; restore previous value.
    4409   00:D2F4  C9                         ret
    4410   00:D2F5  1A                  incsc2 ld a,(de)           ; get amount.
    4411   00:D2F6  3C                         inc a               ; add one to column.
    4412   00:D2F7  12                         ld (de),a           ; write new column total.
    4413   00:D2F8  FE 3A                      cp '9'+1            ; gone beyond range of digits?
    4414   00:D2FA  D8                         ret c               ; no, carry on.
    4415   00:D2FB  3E 30                      ld a,'0'            ; mae it zero.
    4416   00:D2FD  12                         ld (de),a           ; write new column total.
    4417   00:D2FE  1B                         dec de              ; back one column.
    4418   00:D2FF  18 F4                      jr incsc2
    4419   00:D301                      
    4420   00:D301                      ; Add bonus to score.
    4421   00:D301                      
    4422   00:D301  11 76 D2            addbo  ld de,score+5       ; last score digit.
    4423   00:D304  21 82 D2                   ld hl,bonus+5       ; last bonus digit.
    4424   00:D307  A7                         and a               ; clear carry.
    4425   00:D308  01 30 06                   ld bc,6*256+48      ; 6 digits to add, ASCII '0' in c.
    4426   00:D30B  1A                  addbo0 ld a,(de)           ; get score.
    4427   00:D30C  8E                         adc a,(hl)          ; add bonus.
    4428   00:D30D  91                         sub c               ; 0 to 18.
    4429   00:D30E  71                         ld (hl),c           ; zeroise bonus.
    4430   00:D30F  2B                         dec hl              ; next bonus.
    4431   00:D310  FE 3A                      cp 58               ; carried?
    4432   00:D312  38 02                      jr c,addbo1         ; no, do next one.
    4433   00:D314  D6 0A                      sub 10              ; subtract 10.
    4434   00:D316  12                  addbo1 ld (de),a           ; write new score.
    4435   00:D317  1B                         dec de              ; next score digit.
    4436   00:D318  3F                         ccf                 ; set carry for next digit.
    4437   00:D319  10 F0                      djnz addbo0         ; repeat for all 6 digits.
    4438   00:D31B  C9                         ret
    4439   00:D31C                      
    4440   00:D31C                      ; Swap score and bonus.
    4441   00:D31C                      
    4442   00:D31C  11 71 D2            swpsb  ld de,score         ; first score digit.
    4443   00:D31F  21 7D D2                   ld hl,bonus         ; first bonus digit.
    4444   00:D322  06 06                      ld b,6              ; digits to add.
    4445   00:D324  1A                  swpsb0 ld a,(de)           ; get score and bonus digits.
    4446   00:D325  4E                         ld c,(hl)
    4447   00:D326  EB                         ex de,hl            ; swap pointers.
    4448   00:D327  71                         ld (hl),c           ; write bonus and score digits.
    4449   00:D328  12                         ld (de),a
    4450   00:D329  23                         inc hl              ; next score and bonus.
    4451   00:D32A  13                         inc de
    4452   00:D32B  10 F7                      djnz swpsb0         ; repeat for all 6 digits.
    4453   00:D32D  C9                         ret
    4454   00:D32E                      
    4455   00:D32E                      ; Get print address.
    4456   00:D32E                      ; Returns screen address in DE.
    4457   00:D32E                      
    4458   00:D32E                      
    4459   00:D32E  E5                  gprad  push hl             ; store HL registers.
    4460   00:D32F  2A 5E C9                   ld hl,(dispx)       ; get coordinates.
    4461   00:D332  55                         ld d,l              ; DE = vertical position * 32 * 8...
    4462   00:D333                      
    4463   00:D333                      IF XFLAG = 1 or XFLAG = 2
    4464   00:D333  7D                  	ld a,l
    4465   00:D334  CB 3F               	srl a
    4466   00:D336  CB 3F               	srl a
    4467   00:D338  CB 3F               	srl a
    4468   00:D33A  E6 03               	and 3
    4469   00:D33C  C6 1C               	add a,XMODE
    4470   00:D33E  D3 20               	out (XPORT),a
    4471   00:D340  7D                  	ld a,l
    4472   00:D341  E6 07               	and $07
    4473   00:D343  57                  	ld d,a
    4474   00:D344                      ENDIF
    4475   00:D344                      
    4476   00:D344  5C                         ld e,h              ; + horizontal position...
    4477   00:D345  21 00 70                   ld hl,VRAM          ; + address of start of VRAM.
    4478   00:D348  19                         add hl,de
    4479   00:D349                      
    4480   00:D349  EB                         ex de,hl
    4481   00:D34A  E1                         pop hl              ; restore HL registers.
    4482   00:D34B                      
    4483   00:D34B  C9                         ret
    4484   00:D34C                      
    4485   00:D34C                      ; Get property buffer address of char at (dispx, dispy) in hl.
    4486   00:D34C                      
    4487   00:D34C  3A 5E C9            pradd  ld a,(dispx)        ; x coordinate.
    4488   00:D34F  0F                         rrca                ; multiply by 32.
    4489   00:D350  0F                         rrca
    4490   00:D351  0F                         rrca
    4491   00:D352  6F                         ld l,a              ; store shift in l.
    4492   00:D353  E6 03                      and 3               ; high byte bits.
    4493   00:D355                      
    4494   00:D355  C6 F5                      add a,MAP >> 8      ; start of properties map.
    4495   00:D357                      
    4496   00:D357  67                         ld h,a              ; that's our high byte.
    4497   00:D358  7D                         ld a,l              ; restore shift result.
    4498   00:D359  E6 E0                      and 224             ; only want low bits.
    4499   00:D35B  6F                         ld l,a              ; put into low byte.
    4500   00:D35C  3A 5F C9                   ld a,(dispy)        ; fetch y coordinate.
    4501   00:D35F  E6 1F                      and 31              ; should be in range 0 - 31.
    4502   00:D361  85                         add a,l             ; add to low byte.
    4503   00:D362  6F                         ld l,a              ; new low byte.
    4504   00:D363  C9                         ret
    4505   00:D364                      
    4506   00:D364                      
    4507   00:D364                             ; no attributes.
    4508   00:D364                      
    4509   00:D364                      
    4510   00:D364                      ; Display character block on screen.
    4511   00:D364                      
    4512   00:D364                      
    4513   00:D364  07                  pchar  rlca                ; multiply char by 8.
    4514   00:D365  07                         rlca
    4515   00:D366  07                         rlca
    4516   00:D367  5F                         ld e,a              ; store shift in e.
    4517   00:D368  E6 07                      and %00000111       ; only want high byte bits.
    4518   00:D36A  57                         ld d,a              ; store in d.
    4519   00:D36B  7B                         ld a,e              ; restore shifted value.
    4520   00:D36C  E6 F8                      and %11111000       ; only want low byte bits.
    4521   00:D36E  5F                         ld e,a              ; that's the low byte. (DE=char*8)
    4522   00:D36F  2A 83 D2                   ld hl,(grbase)      ; address of graphics.
    4523   00:D372  19                         add hl,de           ; add displacement, hl=chardata
    4524   00:D373                          IF GFLAG
    4525   00:D373  ED 5B 63 C9                ld de,(bgmask)	; de=fg/bgmask
    4526   00:D377                          ENDIF
    4527   00:D377  D9                         exx		; save de and hl
    4528   00:D378  CD 2E D3                   call gprad          ; get screen address (in DE).
    4529   00:D37B  EB                         ex de,hl            ; hl=scraddr
    4530   00:D37C  11 20 00                   ld de,32            ; de=distance to next line (in bytes).
    4531   00:D37F  06 08                      ld b,8              ; height of character in font.
    4532   00:D381  D9                  pchar0 exx
    4533   00:D382  7E                         ld a,(hl)           ; get image byte.
    4534   00:D383  23                         inc hl              ; next image byte.
    4535   00:D384                          IF GFLAG
    4536   00:D384  A2                         and d               ; apply foreground color.
    4537   00:D385  AB                         xor e               ; apply background color.
    4538   00:D386                          ENDIF
    4539   00:D386                      
    4540   00:D386                      IF IFLAG = 1
    4541   00:D386  EE FF               	xor 255
    4542   00:D388                      ENDIF
    4543   00:D388  D9                         exx
    4544   00:D389  77                         ld (hl),a           ; copy to screen.
    4545   00:D38A  19                         add hl,de           ; next screen row down.
    4546   00:D38B  10 F4                      djnz pchar0         ; repeat until all rows have been copied.
    4547   00:D38D  C9                         ret
    4548   00:D38E                      
    4549   00:D38E  00                  pcnt	defb 0
    4550   00:D38F                      
    4551   00:D38F                      ; Print attributes, properties and pixels.
    4552   00:D38F                      
    4553   00:D38F  00                  colpat defb 0
    4554   00:D390                      
    4555   00:D390                      
    4556   00:D390                      pattr:
    4557   00:D390                          IF AFLAG
    4558   00:D390                    ~        call wbloc          ; save blockinfo
    4559   00:D390                    ~     ENDIF
    4560   00:D390  47                  pattr2 ld b,a              ; store cell in b register for now.
    4561   00:D391                      
    4562   00:D391  5F                         ld e,a              ; displacement in e.
    4563   00:D392  16 00                      ld d,0              ; no high byte.
    4564   00:D394  2A 6B C9                   ld hl,(proptr)      ; pointer to properties.
    4565   00:D397  19                         add hl,de           ; property cell address.
    4566   00:D398  4E                         ld c,(hl)           ; fetch byte.
    4567   00:D399  79                         ld a,c              ; put into accumulator.
    4568   00:D39A  FE 08                      cp COLECT           ; is it a collectable?
    4569   00:D39C  C2 A3 D3                   jp nz,pattr1        ; no, carry on as normal.
    4570   00:D39F  78                         ld a,b              ; restore cell.
    4571   00:D3A0  32 8F D3                   ld (colpat),a
    4572   00:D3A3  CD 4C D3            pattr1 call pradd          ; get property buffer address.
    4573   00:D3A6  71                         ld (hl),c           ; write property.
    4574   00:D3A7  78                         ld a,b              ; get block number.
    4575   00:D3A8                      
    4576   00:D3A8                      ; Print attributes, no properties.
    4577   00:D3A8                      
    4578   00:D3A8                      
    4579   00:D3A8                             ; no attributes.
    4580   00:D3A8                      
    4581   00:D3A8                      
    4582   00:D3A8                      ; Print character pixels, no more.
    4583   00:D3A8  2A 67 C9            	ld hl,(blkptr)      ; address of graphics.
    4584   00:D3AB  22 83 D2            	ld (grbase),hl
    4585   00:D3AE                      
    4586   00:D3AE                      pchr:
    4587   00:D3AE                      ;    IFDEF GFLAG
    4588   00:D3AE                      ;       ld hl,%1111111100000000 ; avoid changing received colors.
    4589   00:D3AE                      ;       ld (bgmask),hl
    4590   00:D3AE                      ;    ENDIF
    4591   00:D3AE                      	
    4592   00:D3AE  CD 64 D3                   call pchar          ; show character in accumulator.
    4593   00:D3B1                      
    4594   00:D3B1  21 5F C9                   ld hl,dispy         ; y coordinate.
    4595   00:D3B4  34                         inc (hl)            ; move along one.
    4596   00:D3B5  C9                         ret
    4597   00:D3B6                      
    4598   00:D3B6                      
    4599   00:D3B6  01                  setfgm defb $01            ; opcode for "LD BC,nn" will interpret next instruction as value: $010e, thus C=14, will cause "DJNZ" below to jump.
    4600   00:D3B7  0E 01               setbgm ld c,1              ; C=1 will cause "DJNZ" below not to jump.
    4601   00:D3B9  41                         ld b,c              ; copy to B.
    4602   00:D3BA  E6 03                      and %00000011       ; limit colour value to the 0 -- 3 range.
    4603   00:D3BC  C6 D4                      add a,cmsktb & $ff  ; get corresponding color mask. (note: this code requires an ALIGNed table.)
    4604   00:D3BE  6F                         ld l,a
    4605   00:D3BF  26 D3                      ld h,cmsktb >> 8
    4606   00:D3C1  7E                         ld a,(hl)
    4607   00:D3C2  2A 63 C9                   ld hl,(bgmask)      ; get previous background (L) and foreground (H) masks.
    4608   00:D3C5  10 04                      djnz calfgm         ; B is not 1 (setfgm)? jump forward to calculate only foreground mask.
    4609   00:D3C7  4F                         ld c,a              ; store background mask to set.
    4610   00:D3C8  7C                         ld a,h              ; calculate previous non-XORed foreground mask.
    4611   00:D3C9  AD                         xor l
    4612   00:D3CA  69                         ld l,c              ; store new background mask in L.
    4613   00:D3CB  AD                  calfgm xor l               ; calculate new XORed foreground mask.
    4614   00:D3CC  67                         ld h,a              ; store new foreground mask in H.
    4615   00:D3CD  22 63 C9                   ld (bgmask),hl      ; set variables.
    4616   00:D3D0  C9                         ret
    4617   00:D3D1  (0003)                  ALIGN 4
    4618   00:D3D4  00                  cmsktb defb %00000000      ; color masks for colors 0 -- 3.
    4619   00:D3D5  55                         defb %01010101
    4620   00:D3D6  AA                         defb %10101010
    4621   00:D3D7  FF                         defb %11111111
    4622   00:D3D8                      
    4623   00:D3D8                      
    4624   00:D3D8                      
    4625   00:D3D8                      ;----------------------------------------------
    4626   00:D3D8                      ; Write block
    4627   00:D3D8                      ;----------------------------------------------
    4628   00:D3D8                          IF AFLAG
    4629   00:D3D8                    ~ wbloc:
    4630   00:D3D8                    ~ pbptr  ld de,0000h
    4631   00:D3D8                    ~        ld hl,scno
    4632   00:D3D8                    ~        ldi                 ; write screen.
    4633   00:D3D8                    ~        ld hl,dispx
    4634   00:D3D8                    ~        ldi                 ; write x position of block.
    4635   00:D3D8                    ~        ldi                 ; write y position of block.
    4636   00:D3D8                    ~        ld (de),a           ; store block number
    4637   00:D3D8                    ~        inc de
    4638   00:D3D8                    ~        ld (pbptr+1),de     ; auto-modifying code
    4639   00:D3D8                    ~        ret
    4640   00:D3D8                    ~     ENDIF
    4641   00:D3D8                      
    4642   00:D3D8                      
    4643   00:D3D8                      ; Shifter sprite routine for objects.
    4644   00:D3D8                      
    4645   00:D3D8  EE 07               sprit7 xor 7
    4646   00:D3DA  3C                         inc a
    4647   00:D3DB  CB 15               sprit3 rl l                ; shift into position.
    4648   00:D3DD  CB 11                      rl c
    4649   00:D3DF  CB 14                      rl h
    4650   00:D3E1  3D                         dec a               ; one less iteration.
    4651   00:D3E2  C2 DB D3                   jp nz,sprit3
    4652   00:D3E5  7D                         ld a,l
    4653   00:D3E6  69                         ld l,c
    4654   00:D3E7  4C                         ld c,h
    4655   00:D3E8  67                         ld h,a
    4656   00:D3E9  C3 14 D4                   jp sprit0           ; now apply to screen.
    4657   00:D3EC                      
    4658   00:D3EC                      ; Sprite routine for objects.
    4659   00:D3EC                      
    4660   00:D3EC  E5                  sprite push hl             ; store sprite graphic address.
    4661   00:D3ED  CD 44 D9                   call scadd          ; get screen address in hl.
    4662   00:D3F0  EB                         ex de,hl            ; switch to de.
    4663   00:D3F1  E1                         pop hl              ; restore graphic address.
    4664   00:D3F2  3A 5F C9                   ld a,(dispy)        ; y position.
    4665   00:D3F5  E6 07                      and 7               ; position straddling cells.
    4666   00:D3F7  47                         ld b,a              ; store in b register.
    4667   00:D3F8  3E 10                      ld a,COLDIST + 1             ; pixel height.
    4668   00:D3FA  08                  sprit1 ex af,af'
    4669   00:D3FB  4E                         ld c,(hl)           ; fetch first byte.
    4670   00:D3FC  23                         inc hl              ; next byte.
    4671   00:D3FD  E5                         push hl             ; store source address.
    4672   00:D3FE  6E                         ld l,(hl)
    4673   00:D3FF  26 00                      ld h,0
    4674   00:D401  78                         ld a,b              ; position straddling cells.
    4675   00:D402  A7                         and a               ; is it zero?
    4676   00:D403  28 0F                      jr z,sprit0         ; yes, apply to screen.
    4677   00:D405  FE 05                      cp 5
    4678   00:D407  30 CF                      jr nc,sprit7
    4679   00:D409  A7                         and a               ; clear carry.
    4680   00:D40A  CB 19               sprit2 rr c
    4681   00:D40C  CB 1D                      rr l
    4682   00:D40E  CB 1C                      rr h
    4683   00:D410  3D                         dec a
    4684   00:D411  C2 0A D4                   jp nz,sprit2
    4685   00:D414                      sprit0 
    4686   00:D414                      
    4687   00:D414                      ;       ld a,(MODBUF)       ; get video mode with bit 0 = 0 to bank-switch VRAM on.
    4688   00:D414                      ;       out (COL32),a       ; (set video mode and) bank-switch VRAM on.
    4689   00:D414                      
    4690   00:D414                      
    4691   00:D414                      IF XFLAG = 1 or XFLAG = 2
    4692   00:D414  D5                  	push de
    4693   00:D415  7A                  	ld a,d
    4694   00:D416  D6 70               	sub $70
    4695   00:D418  CB 3F               	srl a
    4696   00:D41A  CB 3F               	srl a
    4697   00:D41C  CB 3F               	srl a
    4698   00:D41E  E6 03               	and 3
    4699   00:D420  C6 1C               	add a,XMODE
    4700   00:D422  D3 20               	out (XPORT),a
    4701   00:D424  7A                  	ld a,d
    4702   00:D425  E6 07               	and $07
    4703   00:D427  F6 70               	or $70
    4704   00:D429  57                  	ld d,a
    4705   00:D42A                      ENDIF
    4706   00:D42A                      
    4707   00:D42A  1A                         ld a,(de)           ; fetch screen image.
    4708   00:D42B  A9                         xor c               ; merge with graphic.
    4709   00:D42C  12                         ld (de),a           ; write to screen.
    4710   00:D42D  1C                         inc e               ; next screen byte.
    4711   00:D42E  1A                         ld a,(de)           ; fetch screen image.
    4712   00:D42F  AD                         xor l               ; combine with graphic.
    4713   00:D430  12                         ld (de),a           ; write to screen.
    4714   00:D431  13                         inc de              ; next screen address.
    4715   00:D432  1A                         ld a,(de)           ; fetch screen image.
    4716   00:D433  AC                         xor h               ; combine with graphic.
    4717   00:D434  12                         ld (de),a           ; write to screen.
    4718   00:D435                      
    4719   00:D435                      
    4720   00:D435                      IF XFLAG = 1 or XFLAG = 2
    4721   00:D435  D1                  	pop de
    4722   00:D436                      ENDIF
    4723   00:D436                      
    4724   00:D436                      ;       ld a,(MODBUF)       ; get video mode with bit 0 = 0.
    4725   00:D436                      ;       inc a               ; set bit 0 = 1 to bank-switch VRAM off.
    4726   00:D436                      ;       out (COL32),a       ; (set video mode and) bank-switch VRAM off.
    4727   00:D436                      
    4728   00:D436                      
    4729   00:D436                      IF XFLAG = 0
    4730   00:D436                    ~        ld a,-2+32          ; back to start byte and down to next line.
    4731   00:D436                    ~ ENDIF
    4732   00:D436                      
    4733   00:D436                      IF XFLAG = 1 or XFLAG = 2
    4734   00:D436  3E 20                      ld a,+32          ; back to start byte and down to next line.
    4735   00:D438                      ENDIF
    4736   00:D438                      
    4737   00:D438  83                         add a,e
    4738   00:D439  5F                         ld e,a
    4739   00:D43A  3E 00                      ld a,0
    4740   00:D43C  8A                         adc a,d
    4741   00:D43D  57                         ld d,a
    4742   00:D43E  E1                  sprit6 pop hl              ; restore source address.
    4743   00:D43F  23                         inc hl              ; next source byte.
    4744   00:D440  08                         ex af,af'
    4745   00:D441  3D                         dec a
    4746   00:D442  C2 FA D3                   jp nz,sprit1
    4747   00:D445  C9                         ret
    4748   00:D446                      
    4749   00:D446                      ; Get room address.
    4750   00:D446                      
    4751   00:D446  3A 38 C9            groom  ld a,(scno)         ; screen number.
    4752   00:D449  11 00 00            groomx ld de,0             ; start at zero.
    4753   00:D44C  2A 6D C9                   ld hl,(scrptr)      ; pointer to screens.
    4754   00:D44F  A7                         and a               ; is it the first one?
    4755   00:D450  28 0A               groom1 jr z,groom0         ; no more screens to skip.
    4756   00:D452  4E                         ld c,(hl)           ; low byte of screen size.
    4757   00:D453  23                         inc hl              ; point to high byte.
    4758   00:D454  46                         ld b,(hl)           ; high byte of screen size.
    4759   00:D455  23                         inc hl              ; next address.
    4760   00:D456  EB                         ex de,hl            ; put total in hl, pointer in de.
    4761   00:D457  09                         add hl,bc           ; skip a screen.
    4762   00:D458  EB                         ex de,hl            ; put total in de, pointer in hl.
    4763   00:D459  3D                         dec a               ; one less iteration.
    4764   00:D45A  18 F4                      jr groom1           ; loop until we reach the end.
    4765   00:D45C  2A 6D C9            groom0 ld hl,(scrptr)      ; pointer to screens.
    4766   00:D45F  19                         add hl,de           ; add displacement.
    4767   00:D460  3A 85 9D                   ld a,(numsc)        ; number of screens.
    4768   00:D463  16 00                      ld d,0              ; zeroise high byte.
    4769   00:D465  5F                         ld e,a              ; displacement in de.
    4770   00:D466  19                         add hl,de           ; add double displacement to address.
    4771   00:D467  19                         add hl,de
    4772   00:D468  C9                         ret
    4773   00:D469                      
    4774   00:D469                      ; Draw present room.
    4775   00:D469                      
    4776   00:D469  3A 2F C9            droom  ld a,(wintop)       ; window top.
    4777   00:D46C  32 5E C9                   ld (dispx),a        ; set x coordinate.
    4778   00:D46F  2A 67 C9            droom2 ld hl,(blkptr)      ; blocks.
    4779   00:D472  22 83 D2                   ld (grbase),hl      ; set graphics base.
    4780   00:D475  CD 46 D4                   call groom          ; get address of current room.
    4781   00:D478  AF                         xor a               ; zero in accumulator.
    4782   00:D479  32 BD D4                   ld (comcnt),a       ; reset compression counter.
    4783   00:D47C  3A 31 C9                   ld a,(winhgt)       ; height of window.
    4784   00:D47F  F5                  droom0 push af             ; store row counter.
    4785   00:D480  3A 30 C9                   ld a,(winlft)       ; window left edge.
    4786   00:D483  32 5F C9                   ld (dispy),a        ; set cursor position.
    4787   00:D486  3A 32 C9                   ld a,(winwid)       ; width of window.
    4788   00:D489  F5                  droom1 push af             ; store column counter.
    4789   00:D48A  CD A2 D4                   call flbyt          ; decompress next byte on the fly.
    4790   00:D48D  E5                         push hl             ; store address of cell.
    4791   00:D48E                      
    4792   00:D48E  CD 90 D3                   call pattr2         ; show attributes and block.
    4793   00:D491                      
    4794   00:D491  E1                         pop hl              ; restore cell address.
    4795   00:D492  F1                         pop af              ; restore loop counter.
    4796   00:D493  3D                         dec a               ; one less column.
    4797   00:D494  20 F3                      jr nz,droom1        ; repeat for entire line.
    4798   00:D496  3A 5E C9                   ld a,(dispx)        ; x coord.
    4799   00:D499  3C                         inc a               ; move down one line.
    4800   00:D49A  32 5E C9                   ld (dispx),a        ; set new position.
    4801   00:D49D  F1                         pop af              ; restore row counter.
    4802   00:D49E  3D                         dec a               ; one less row.
    4803   00:D49F  20 DE                      jr nz,droom0        ; repeat for all rows.
    4804   00:D4A1  C9                         ret
    4805   00:D4A2                      
    4806   00:D4A2                      ; Decompress bytes on-the-fly.
    4807   00:D4A2                      
    4808   00:D4A2  3A BD D4            flbyt  ld a,(comcnt)       ; compression counter.
    4809   00:D4A5  A7                         and a               ; any more to decompress?
    4810   00:D4A6  20 0C                      jr nz,flbyt1        ; yes.
    4811   00:D4A8  7E                         ld a,(hl)           ; fetch next byte.
    4812   00:D4A9  23                         inc hl              ; point to next cell.
    4813   00:D4AA  FE FF                      cp 255              ; is this byte a control code?
    4814   00:D4AC  C0                         ret nz              ; no, this byte is uncompressed.
    4815   00:D4AD  7E                         ld a,(hl)           ; fetch byte type.
    4816   00:D4AE  32 BC D4                   ld (combyt),a       ; set up the type.
    4817   00:D4B1  23                         inc hl              ; point to quantity.
    4818   00:D4B2  7E                         ld a,(hl)           ; get quantity.
    4819   00:D4B3  23                         inc hl              ; point to next byte.
    4820   00:D4B4  3D                  flbyt1 dec a               ; one less.
    4821   00:D4B5  32 BD D4                   ld (comcnt),a       ; store new quantity.
    4822   00:D4B8  3A BC D4                   ld a,(combyt)       ; byte to expand.
    4823   00:D4BB  C9                         ret
    4824   00:D4BC                      
    4825   00:D4BC  00                  combyt defb 0              ; byte type compressed.
    4826   00:D4BD  00                  comcnt defb 0              ; compression counter.
    4827   00:D4BE                      
    4828   00:D4BE                      ; Ladder down check.
    4829   00:D4BE                      
    4830   00:D4BE  DD 7E 08            laddd  ld a,(ix+8)         ; x coordinate.
    4831   00:D4C1                      ;       and %11111110       ; make it even.
    4832   00:D4C1                      ;       ld (ix+8),a         ; reset it.
    4833   00:D4C1  DD 66 09                   ld h,(ix+9)         ; y coordinate.
    4834   00:D4C4  C6 10                      add a,COLDIST +1            ; look down 16 pixels.
    4835   00:D4C6  6F                         ld l,a              ; coords in hl.
    4836   00:D4C7  18 0E                      jr laddv
    4837   00:D4C9                      
    4838   00:D4C9                      ; Ladder up check.
    4839   00:D4C9                      
    4840   00:D4C9  DD 7E 08            laddu  ld a,(ix+8)         ; x coordinate.
    4841   00:D4CC  E6 FE                      and %11111110       ; make it even.
    4842   00:D4CE  DD 77 08                   ld (ix+8),a         ; reset it.
    4843   00:D4D1  DD 66 09                   ld h,(ix+9)         ; y coordinate.
    4844   00:D4D4  C6 0E                      add a,COLDIST - 1            ; look 2 pixels above feet.
    4845   00:D4D6  6F                         ld l,a              ; coords in hl.
    4846   00:D4D7  22 5E C9            laddv  ld (dispx),hl       ; set up test coordinates.
    4847   00:D4DA  CD 39 D6                   call tstbl          ; get map address.
    4848   00:D4DD  CD 8A D5                   call ldchk          ; standard ladder check.
    4849   00:D4E0  C0                         ret nz              ; no way through.
    4850   00:D4E1  23                         inc hl              ; look right one cell.
    4851   00:D4E2  CD 8A D5                   call ldchk          ; do the check.
    4852   00:D4E5  C0                         ret nz              ; impassable.
    4853   00:D4E6  3A 5F C9                   ld a,(dispy)        ; y coordinate.
    4854   00:D4E9  E6 07                      and %00000111       ; position straddling block cells.
    4855   00:D4EB  C8                         ret z               ; no more checks needed.
    4856   00:D4EC                      ;       inc hl              ; look to third cell.
    4857   00:D4EC                      ;       call ldchk          ; do the check.
    4858   00:D4EC  C9                         ret                 ; return with zero flag set accordingly.
    4859   00:D4ED                      
    4860   00:D4ED                      ; Can go up check.
    4861   00:D4ED                      
    4862   00:D4ED  DD 7E 08            cangu  ld a,(ix+8)         ; x coordinate.
    4863   00:D4F0  DD 66 09                   ld h,(ix+9)         ; y coordinate.
    4864   00:D4F3  D6 01                      sub 1               ; look up 2 pixels.
    4865   00:D4F5  6F                         ld l,a              ; coords in hl.
    4866   00:D4F6  22 5E C9                   ld (dispx),hl       ; set up test coordinates.
    4867   00:D4F9  CD 39 D6                   call tstbl          ; get map address.
    4868   00:D4FC  CD 60 D5                   call lrchk          ; standard left/right check.
    4869   00:D4FF  C0                         ret nz              ; no way through.
    4870   00:D500  23                         inc hl              ; look right one cell.
    4871   00:D501  CD 60 D5                   call lrchk          ; do the check.
    4872   00:D504  C0                         ret nz              ; impassable.
    4873   00:D505  3A 5F C9                   ld a,(dispy)        ; y coordinate.
    4874   00:D508  E6 07                      and %00000111       ; position straddling block cells.
    4875   00:D50A  C8                         ret z               ; no more checks needed.
    4876   00:D50B  23                         inc hl              ; look to third cell.
    4877   00:D50C  CD 60 D5                   call lrchk          ; do the check.
    4878   00:D50F  C9                         ret                 ; return with zero flag set accordingly.
    4879   00:D510                      
    4880   00:D510                      ; Can go down check.
    4881   00:D510                      
    4882   00:D510  DD 7E 08            cangd  ld a,(ix+8)         ; x coordinate.
    4883   00:D513  DD 66 09                   ld h,(ix+9)         ; y coordinate.
    4884   00:D516  C6 10                      add a,COLDIST + 1            ; look down 16 pixels.
    4885   00:D518  6F                         ld l,a              ; coords in hl.
    4886   00:D519  22 5E C9                   ld (dispx),hl       ; set up test coordinates.
    4887   00:D51C  CD 39 D6                   call tstbl          ; get map address.
    4888   00:D51F  CD 6E D5                   call plchk          ; block, platform check.
    4889   00:D522  C0                         ret nz              ; no way through.
    4890   00:D523  23                         inc hl              ; look right one cell.
    4891   00:D524  CD 6E D5                   call plchk          ; block, platform check.
    4892   00:D527  C0                         ret nz              ; impassable.
    4893   00:D528  3A 5F C9                   ld a,(dispy)        ; y coordinate.
    4894   00:D52B  E6 07                      and %00000111       ; position straddling block cells.
    4895   00:D52D  C8                         ret z               ; no more checks needed.
    4896   00:D52E  23                         inc hl              ; look to third cell.
    4897   00:D52F  CD 6E D5                   call plchk          ; block, platform check.
    4898   00:D532  C9                         ret                 ; return with zero flag set accordingly.
    4899   00:D533                      
    4900   00:D533                      ; Can go left check.
    4901   00:D533                      
    4902   00:D533  DD 6E 08            cangl  ld l,(ix+8)         ; x coordinate.
    4903   00:D536  DD 7E 09                   ld a,(ix+9)         ; y coordinate.
    4904   00:D539  D6 02                      sub 2               ; look left 2 pixels.
    4905   00:D53B  67                         ld h,a              ; coords in hl.
    4906   00:D53C  18 09                      jr cangh            ; test if we can go there.
    4907   00:D53E                      
    4908   00:D53E                      ; Can go right check.
    4909   00:D53E                      
    4910   00:D53E  DD 6E 08            cangr  ld l,(ix+8)         ; x coordinate.
    4911   00:D541  DD 7E 09                   ld a,(ix+9)         ; y coordinate.
    4912   00:D544  C6 10                      add a,16            ; look right 16 pixels.
    4913   00:D546  67                         ld h,a              ; coords in hl.
    4914   00:D547                      
    4915   00:D547  22 5E C9            cangh  ld (dispx),hl       ; set up test coordinates.
    4916   00:D54A                      
    4917   00:D54A                      IF MFLAG = 1
    4918   00:D54A                    ~ cangh2 ld b,2              ; default rows to write.
    4919   00:D54A                    ~ ELSE
    4920   00:D54A  06 03               cangh2 ld b,3              ; default rows to write.
    4921   00:D54C                      ENDIF
    4922   00:D54C                      
    4923   00:D54C  7D                         ld a,l              ; x position.
    4924   00:D54D  E6 07                      and %00000111       ; does x straddle cells?
    4925   00:D54F  20 01                      jr nz,cangh0        ; yes, loop counter is good.
    4926   00:D551  05                         dec b               ; one less row to write.
    4927   00:D552  CD 39 D6            cangh0 call tstbl          ; get map address.
    4928   00:D555  11 20 00                   ld de,32            ; distance to next cell.
    4929   00:D558  CD 60 D5            cangh1 call lrchk          ; standard left/right check.
    4930   00:D55B  C0                         ret nz              ; no way through.
    4931   00:D55C  19                         add hl,de           ; look down.
    4932   00:D55D  10 F9                      djnz cangh1
    4933   00:D55F  C9                         ret
    4934   00:D560                      
    4935   00:D560                      ; Check left/right movement is okay.
    4936   00:D560                      
    4937   00:D560  7E                  lrchk  ld a,(hl)           ; fetch map cell.
    4938   00:D561  FE 02                      cp WALL             ; is it passable?
    4939   00:D563  28 06                      jr z,lrchkx         ; no.
    4940   00:D565  FE 04                      cp FODDER           ; fodder has to be dug.
    4941   00:D567  28 02                      jr z,lrchkx         ; not passable.
    4942   00:D569  AF                  always xor a               ; report it as okay.
    4943   00:D56A  C9                         ret
    4944   00:D56B  AF                  lrchkx xor a               ; reset all bits.
    4945   00:D56C  3C                         inc a
    4946   00:D56D  C9                         ret
    4947   00:D56E                      
    4948   00:D56E                      ; Check platform or solid item is not in way.
    4949   00:D56E                      
    4950   00:D56E  7E                  plchk  ld a,(hl)           ; fetch map cell.
    4951   00:D56F  FE 02                      cp WALL             ; is it passable?
    4952   00:D571  28 F8                      jr z,lrchkx         ; no.
    4953   00:D573  FE 04                      cp FODDER           ; fodder has to be dug.
    4954   00:D575  28 F4                      jr z,lrchkx         ; not passable.
    4955   00:D577  FE 01                      cp PLATFM           ; platform is solid.
    4956   00:D579  28 06                      jr z,plchkx         ; not passable.
    4957   00:D57B  FE 03                      cp LADDER           ; is it a ladder?
    4958   00:D57D  28 EC                      jr z,lrchkx         ; on ladder, deny movement.
    4959   00:D57F                      plchk0
    4960   00:D57F                      
    4961   00:D57F                      IF CRFLAG = 1
    4962   00:D57F                    ~ 	cp 9
    4963   00:D57F                    ~ ;	jr nc,lrchkx 
    4964   00:D57F                    ~ 	jr nc,plchkx 
    4965   00:D57F                    ~ ENDIF
    4966   00:D57F                      
    4967   00:D57F  AF                         xor a               ; report it as okay.
    4968   00:D580  C9                         ret
    4969   00:D581                      
    4970   00:D581  3A 5E C9            plchkx ld a,(dispx)        ; x coordinate.
    4971   00:D584  E6 07                      and 7               ; position straddling blocks.
    4972   00:D586  28 E3                      jr z,lrchkx         ; on platform, deny movement.
    4973   00:D588  18 F5                      jr plchk0
    4974   00:D58A                      
    4975   00:D58A                      ; Check ladder is available.
    4976   00:D58A                      
    4977   00:D58A  7E                  ldchk  ld a,(hl)           ; fetch cell.
    4978   00:D58B  FE 03                      cp LADDER           ; is it a ladder?
    4979   00:D58D  C9                         ret                 ; return with zero flag set accordingly.
    4980   00:D58E                      
    4981   00:D58E                      ; Get collectables.
    4982   00:D58E                      
    4983   00:D58E  06 08               getcol ld b,COLECT         ; collectable blocks.
    4984   00:D590  CD F1 D5                   call tded           ; test for collectable blocks.
    4985   00:D593  B8                         cp b                ; did we find one?
    4986   00:D594  C0                         ret nz              ; none were found, job done.
    4987   00:D595  CD 9D D5                   call gtblk          ; get block.
    4988   00:D598  CD 0B 88                   call evnt20         ; collected block event.
    4989   00:D59B  18 F1                      jr getcol           ; repeat until none left.
    4990   00:D59D                      
    4991   00:D59D                      ; Get collectable block.
    4992   00:D59D                      
    4993   00:D59D  36 00               gtblk  ld (hl),0           ; make it empty now.
    4994   00:D59F  11 00 F5                   ld de,MAP           ; map address.
    4995   00:D5A2  A7                         and a               ; clear carry.
    4996   00:D5A3  ED 52                      sbc hl,de           ; find cell number.
    4997   00:D5A5  7D                         ld a,l              ; get low byte of cell number.
    4998   00:D5A6  E6 1F                      and 31              ; 0 - 31 is column.
    4999   00:D5A8  57                         ld d,a              ; store y in d register.
    5000   00:D5A9  29                         add hl,hl           ; multiply by 8.
    5001   00:D5AA  29                         add hl,hl
    5002   00:D5AB  29                         add hl,hl           ; x is now in h.
    5003   00:D5AC  5C                         ld e,h              ; put x in e.
    5004   00:D5AD  ED 53 5E C9                ld (dispx),de       ; set display coordinates.
    5005   00:D5B1                      
    5006   00:D5B1  3A 8F D3                   ld a,(colpat)
    5007   00:D5B4  07                         rlca                ; multiply char by 8.
    5008   00:D5B5  07                         rlca
    5009   00:D5B6  07                         rlca
    5010   00:D5B7  5F                         ld e,a              ; store shift in e.
    5011   00:D5B8  E6 07                      and %00000111       ; only want high byte bits.
    5012   00:D5BA  57                         ld d,a              ; store in d.
    5013   00:D5BB  7B                         ld a,e              ; restore shifted value.
    5014   00:D5BC  E6 F8                      and %11111000       ; only want low byte bits.
    5015   00:D5BE  5F                         ld e,a              ; that's the low byte.
    5016   00:D5BF  2A 67 C9                   ld hl,(blkptr)      ; address of graphics.
    5017   00:D5C2  19                         add hl,de           ; add displacement.
    5018   00:D5C3  CD 2E D3                   call gprad          ; get screen address.
    5019   00:D5C6                      
    5020   00:D5C6                      
    5021   00:D5C6                      ;       ld a,(MODBUF)       ; get video mode with bit 0 = 0 to bank-switch VRAM on.
    5022   00:D5C6                      ;       out (COL32),a       ; (set video mode and) bank-switch VRAM on.
    5023   00:D5C6  EB                         ex de,hl            ; screen address in hl, image address in de
    5024   00:D5C7  01 20 00                   ld bc,32            ; distance to next screen row.
    5025   00:D5CA                      
    5026   00:D5CA  1A                         ld a,(de)           ; get image byte.
    5027   00:D5CB  AE                         xor (hl)            ; erase in screen.
    5028   00:D5CC  77                         ld (hl),a
    5029   00:D5CD  13                         inc de              ; next image byte.
    5030   00:D5CE  09                         add hl,bc           ; next screen row down.
    5031   00:D5CF                      
    5032   00:D5CF  1A                         ld a,(de)           ; get image byte.
    5033   00:D5D0  AE                         xor (hl)            ; erase in screen.
    5034   00:D5D1  77                         ld (hl),a
    5035   00:D5D2  13                         inc de              ; next image byte.
    5036   00:D5D3  09                         add hl,bc           ; next screen row down.
    5037   00:D5D4                      
    5038   00:D5D4  1A                         ld a,(de)           ; get image byte.
    5039   00:D5D5  AE                         xor (hl)            ; erase in screen.
    5040   00:D5D6  77                         ld (hl),a
    5041   00:D5D7  13                         inc de              ; next image byte.
    5042   00:D5D8  09                         add hl,bc           ; next screen row down.
    5043   00:D5D9                      
    5044   00:D5D9  1A                         ld a,(de)           ; get image byte.
    5045   00:D5DA  AE                         xor (hl)            ; erase in screen.
    5046   00:D5DB  77                         ld (hl),a
    5047   00:D5DC  13                         inc de              ; next image byte.
    5048   00:D5DD  09                         add hl,bc           ; next screen row down.
    5049   00:D5DE                      
    5050   00:D5DE  1A                         ld a,(de)           ; get image byte.
    5051   00:D5DF  AE                         xor (hl)            ; erase in screen.
    5052   00:D5E0  77                         ld (hl),a
    5053   00:D5E1  13                         inc de              ; next image byte.
    5054   00:D5E2  09                         add hl,bc           ; next screen row down.
    5055   00:D5E3                      
    5056   00:D5E3  1A                         ld a,(de)           ; get image byte.
    5057   00:D5E4  AE                         xor (hl)            ; erase in screen.
    5058   00:D5E5  77                         ld (hl),a
    5059   00:D5E6  13                         inc de              ; next image byte.
    5060   00:D5E7  09                         add hl,bc           ; next screen row down.
    5061   00:D5E8                      
    5062   00:D5E8  1A                         ld a,(de)           ; get image byte.
    5063   00:D5E9  AE                         xor (hl)            ; erase in screen.
    5064   00:D5EA  77                         ld (hl),a
    5065   00:D5EB  13                         inc de              ; next image byte.
    5066   00:D5EC  09                         add hl,bc           ; next screen row down.
    5067   00:D5ED                      
    5068   00:D5ED  1A                         ld a,(de)           ; get image byte.
    5069   00:D5EE  AE                         xor (hl)            ; erase in screen.
    5070   00:D5EF  77                         ld (hl),a
    5071   00:D5F0                      
    5072   00:D5F0                      ;       ld a,(MODBUF)       ; get video mode with bit 0 = 0.
    5073   00:D5F0                      ;       inc a               ; set bit 0 = 1 to bank-switch VRAM off.
    5074   00:D5F0                      ;       out (COL32),a       ; (set video mode and) bank-switch VRAM off.
    5075   00:D5F0                      
    5076   00:D5F0  C9                         ret
    5077   00:D5F1                      
    5078   00:D5F1                      ; Touched deadly block check.
    5079   00:D5F1                      ; Returns with DEADLY (must be non-zero) in accumulator if true.
    5080   00:D5F1                      
    5081   00:D5F1  DD 6E 08            tded   ld l,(ix+8)         ; x coordinate.
    5082   00:D5F4  DD 66 09                   ld h,(ix+9)         ; y coordinate.
    5083   00:D5F7  22 5E C9                   ld (dispx),hl       ; set up test coordinates.
    5084   00:D5FA  CD 39 D6                   call tstbl          ; get map address.
    5085   00:D5FD  11 1F 00                   ld de,31            ; default distance to next line down.
    5086   00:D600  B8                         cp b                ; is tl this the required block?
    5087   00:D601  C8                         ret z               ; yes.
    5088   00:D602                      
    5089   00:D602  23                         inc hl              ; next cell.
    5090   00:D603  7E                         ld a,(hl)           ; fetch type.
    5091   00:D604  B8                         cp b                ; is ml this deadly/custom?
    5092   00:D605  C8                         ret z               ; yes.
    5093   00:D606                      
    5094   00:D606  3A 5F C9                   ld a,(dispy)        ; horizontal position.
    5095   00:D609  4F                         ld c,a              ; store column in c register.
    5096   00:D60A  E6 07                      and %00000111       ; is it straddling cells?
    5097   00:D60C  28 05                      jr z,tded0          ; no.
    5098   00:D60E  23                         inc hl              ; last cell.
    5099   00:D60F  7E                         ld a,(hl)           ; fetch type.
    5100   00:D610  B8                         cp b                ; is tr this the block?
    5101   00:D611  C8                         ret z               ; yes.
    5102   00:D612                      
    5103   00:D612  1B                         dec de              ; one less cell to next row down.
    5104   00:D613                      tded0
    5105   00:D613                      
    5106   00:D613                      IF MFLAG = 0
    5107   00:D613  19                         add hl,de           ; point to next row.
    5108   00:D614  7E                         ld a,(hl)           ; fetch left cell block.
    5109   00:D615  B8                         cp b                ; is this fatal?
    5110   00:D616  C8                         ret z               ; yes.
    5111   00:D617                      
    5112   00:D617  23                         inc hl              ; next cell.
    5113   00:D618  7E                         ld a,(hl)           ; fetch type.
    5114   00:D619  B8                         cp b                ; is this fatal?
    5115   00:D61A  C8                         ret z               ; yes.
    5116   00:D61B                      
    5117   00:D61B  79                         ld a,c              ; horizontal position.
    5118   00:D61C  E6 07                      and %00000111       ; is it straddling cells?
    5119   00:D61E  28 04                      jr z,tded1          ; no.
    5120   00:D620  23                         inc hl              ; last cell.
    5121   00:D621  7E                         ld a,(hl)           ; fetch type.
    5122   00:D622  B8                         cp b                ; is this fatal?
    5123   00:D623  C8                         ret z               ; yes.
    5124   00:D624                      ENDIF
    5125   00:D624                      
    5126   00:D624  3A 5E C9            tded1  ld a,(dispx)        ; vertical position.
    5127   00:D627  E6 07                      and 7               ; is it straddling cells?
    5128   00:D629  C8                         ret z               ; no, job done.
    5129   00:D62A  19                         add hl,de           ; point to next row.
    5130   00:D62B  7E                         ld a,(hl)           ; fetch left cell block.
    5131   00:D62C  B8                         cp b                ; is this fatal?
    5132   00:D62D  C8                         ret z               ; yes.
    5133   00:D62E                      
    5134   00:D62E  23                         inc hl              ; next cell.
    5135   00:D62F  7E                         ld a,(hl)           ; fetch type.
    5136   00:D630  B8                         cp b                ; is this fatal?
    5137   00:D631  C8                         ret z               ; yes.
    5138   00:D632                      
    5139   00:D632  79                         ld a,c              ; horizontal position.
    5140   00:D633  E6 07                      and %00000111       ; is it straddling cells?
    5141   00:D635  C8                         ret z               ; no.
    5142   00:D636  23                         inc hl              ; last cell.
    5143   00:D637  7E                         ld a,(hl)           ; fetch final type.
    5144   00:D638  C9                         ret                 ; return with final type in accumulator.
    5145   00:D639                      
    5146   00:D639                      
    5147   00:D639                      ; Fetch block type at (dispx, dispy).
    5148   00:D639                      
    5149   00:D639  3A 5E C9            tstbl  ld a,(dispx)        ; fetch x coord.
    5150   00:D63C  07                         rlca                ; divide by 8,
    5151   00:D63D  07                         rlca                ; and multiply by 32.
    5152   00:D63E  57                         ld d,a              ; store in d.
    5153   00:D63F  E6 E0                      and 224             ; mask off high bits.
    5154   00:D641  5F                         ld e,a              ; low byte.
    5155   00:D642  7A                         ld a,d              ; restore shift result.
    5156   00:D643  E6 03                      and 3               ; high bits.
    5157   00:D645  57                         ld d,a              ; got displacement in de.
    5158   00:D646  3A 5F C9                   ld a,(dispy)        ; y coord.
    5159   00:D649  1F                         rra                 ; divide by 8.
    5160   00:D64A  1F                         rra
    5161   00:D64B  1F                         rra
    5162   00:D64C  E6 1F                      and 31              ; only want 0 - 31.
    5163   00:D64E  83                         add a,e             ; add to displacement.
    5164   00:D64F  5F                         ld e,a              ; displacement in de.
    5165   00:D650  21 00 F5                   ld hl,MAP           ; position of dummy screen.
    5166   00:D653  19                         add hl,de           ; point to address.
    5167   00:D654  7E                         ld a,(hl)           ; fetch byte there.
    5168   00:D655  C9                         ret
    5169   00:D656                      
    5170   00:D656                      ; Jump - if we can.
    5171   00:D656                      ; Requires initial speed to be set up in accumulator prior to call.
    5172   00:D656                      
    5173   00:D656  ED 44               jump   neg                 ; switch sign so we jump up.
    5174   00:D658  4F                         ld c,a              ; store in c register.
    5175   00:D659                      ;       ld a,(ix+8)         ; x coordinate.
    5176   00:D659                      ;       ld h,(ix+9)         ; y coordinate.
    5177   00:D659                      ;numsp4 add a,16            ; look down 16 pixels.
    5178   00:D659                      ;       ld l,a              ; coords in hl.
    5179   00:D659                      ;       and 7               ; are we on platform boundary?
    5180   00:D659                      ;       ret nz              ; no, cannot jump.
    5181   00:D659                      ;       ld (dispx),hl       ; set up test coordinates.
    5182   00:D659                      ;       ld b,a              ; copy to b register.
    5183   00:D659                      ;       call tstbl          ; get map address.
    5184   00:D659                      ;       call plchk          ; block, platform check.
    5185   00:D659                      ;       jr nz,jump0         ; it's solid, we can jump.
    5186   00:D659                      ;       inc hl              ; look right one cell.
    5187   00:D659                      ;       call plchk          ; block, platform check.
    5188   00:D659                      ;       jr nz,jump0         ; it's solid, we can jump.
    5189   00:D659                      ;       ld a,b              ; y coordinate.
    5190   00:D659                      ;       call rem5           ; position straddling block cells.
    5191   00:D659                      ;       ret z               ; no more checks needed.
    5192   00:D659                      ;       inc hl              ; look to third cell.
    5193   00:D659                      ;       call plchk          ; block, platform check.
    5194   00:D659                      ;       ret z               ; not solid, don't jump.
    5195   00:D659  DD 7E 0D            jump0  ld a,(ix+13)        ; jumping flag.
    5196   00:D65C  A7                         and a               ; is it set?
    5197   00:D65D  C0                         ret nz              ; already in the air.
    5198   00:D65E  DD 34 0D                   inc (ix+13)         ; set it.
    5199   00:D661  DD 71 0E                   ld (ix+14),c        ; set jump height.
    5200   00:D664  C9                         ret
    5201   00:D665                      
    5202   00:D665  DD 7E 0D            hop    ld a,(ix+13)        ; jumping flag.
    5203   00:D668  A7                         and a               ; is it set?
    5204   00:D669  C0                         ret nz              ; already in the air.
    5205   00:D66A  DD 36 0D FF                ld (ix+13),255      ; set it.
    5206   00:D66E  DD 36 0E 00                ld (ix+14),0        ; set jump table displacement.
    5207   00:D672  C9                         ret
    5208   00:D673                      
    5209   00:D673                      
    5210   00:D673                      ; Random numbers code.
    5211   00:D673                      ; Pseudo-random number generator, 8-bit.
    5212   00:D673                      
    5213   00:D673  21 70 D2            random ld hl,seed          ; set up seed pointer.
    5214   00:D676  7E                         ld a,(hl)           ; get last random number.
    5215   00:D677  47                         ld b,a              ; copy to b register.
    5216   00:D678  0F                         rrca                ; multiply by 32.
    5217   00:D679  0F                         rrca
    5218   00:D67A  0F                         rrca
    5219   00:D67B  EE 1F                      xor 31
    5220   00:D67D  80                         add a,b
    5221   00:D67E  DE FF                      sbc a,255
    5222   00:D680  77                         ld (hl),a           ; store new seed.
    5223   00:D681  32 56 C9                   ld (varrnd),a       ; return number in variable.
    5224   00:D684  C9                         ret
    5225   00:D685                      
    5226   00:D685                      ; Joystick and keyboard reading routines.
    5227   00:D685                      
    5228   00:D685                      ; Keyboard test routine.
    5229   00:D685                      
    5230   00:D685  06 01               kget	ld b,1		; reset row
    5231   00:D687                      
    5232   00:D687  21 FE 68            	ld hl,$68fe	; high byte of port to read.
    5233   00:D68A  7D                  	ld a,l		; low byte
    5234   00:D68B  0F                  kget0	rrca		; rotate '0' into position.
    5235   00:D68C  6F                  	ld l,a		; set low byte
    5236   00:D68D                      
    5237   00:D68D  7E                  	ld a,(hl)	; read key
    5238   00:D68E  FE FF               	cp $ff		; No key pressed?
    5239   00:D690  20 08               	jr nz,kget1	; Key pressed, skip
    5240   00:D692  04                  	inc b		; Increment row counter
    5241   00:D693  78                  	ld a,b		; last row?
    5242   00:D694  FE 08               	cp 8
    5243   00:D696  20 F3               	jr nz,kget0	; no, repeat
    5244   00:D698  18 06               	jr kget2	; yes, end
    5245   00:D69A                      
    5246   00:D69A  0E 01               kget1	ld c,1		; reset column
    5247   00:D69C  1F                  kget3	rra		; rotate bit out
    5248   00:D69D  30 01               	jr nc,kget2	; if key pressed, end
    5249   00:D69F  0C                  	inc c		; increment column counter
    5250   00:D6A0                      
    5251   00:D6A0                      ;	cp c,6		; end of row?
    5252   00:D6A0                      ;	jr z,kget2	; yes, end
    5253   00:D6A0                      ;        jr kget3	; if key pressed, end
    5254   00:D6A0                      ;kget2	inc b		; next row
    5255   00:D6A0                      ;	cp b,8		; all rows read?
    5256   00:D6A0                      ;	jr nz kget0	; no, repeat
    5257   00:D6A0                      ;	jr kget		; no key pressed, scan again
    5258   00:D6A0                      ;
    5259   00:D6A0                      ;kget3	sla b		; key pressed, high nibble=row
    5260   00:D6A0                      ;	sla b
    5261   00:D6A0                      ;	sla b
    5262   00:D6A0                      ;	sla b
    5263   00:D6A0                      ;	ld a,c
    5264   00:D6A0                      ;	add a,b		; low nibble=column
    5265   00:D6A0  C9                  kget2	ret
    5266   00:D6A1                      
    5267   00:D6A1                      ; Keyboard test routine
    5268   00:D6A1                      ; Input:  A = keycode, bit0-3 = row, bit4-7 = column
    5269   00:D6A1                      ; Output: Carry set = key not pressed, Carry clear = key pressed
    5270   00:D6A1                      
    5271   00:D6A1                      
    5272   00:D6A1                      ktest
    5273   00:D6A1  E5                         push hl
    5274   00:D6A2  4F                         ld c,a              ; key to test in c.
    5275   00:D6A3  E6 07                      and 7               ; mask bits d0-d2 for row.
    5276   00:D6A5  47                         ld b,a              ; place in b.
    5277   00:D6A6                      
    5278   00:D6A6  CB 39                      srl c               ; divide c by 8
    5279   00:D6A8  CB 39                      srl c               ; to find position within row.
    5280   00:D6AA  CB 39                      srl c               ; column
    5281   00:D6AC  CB 39                      srl c
    5282   00:D6AE                      
    5283   00:D6AE  21 FE 68                   ld hl,$68fe         ; high byte of port to read.
    5284   00:D6B1  7D                         ld a,l
    5285   00:D6B2  0F                  ktest0 rrca                ; rotate into position.
    5286   00:D6B3  10 FD                      djnz ktest0         ; repeat until we've found relevant row.
    5287   00:D6B5  6F                         ld l,a
    5288   00:D6B6  7E                         ld a,(hl)           ; read key
    5289   00:D6B7  1F                  ktest1 rra                 ; rotate bit out of result.
    5290   00:D6B8  0D                         dec c               ; loop counter.
    5291   00:D6B9  C2 B7 D6                   jp nz,ktest1        ; repeat until bit for position in carry.
    5292   00:D6BC  E1                         pop hl
    5293   00:D6BD  C9                         ret
    5294   00:D6BE                      ;--------------------------------------------------------
    5295   00:D6BE                      ; Keys
    5296   00:D6BE                      ;
    5297   00:D6BE                      ; Out: joyval=x65FUDLR (bit cleared if key pressed)
    5298   00:D6BE                      ;             ||||||||
    5299   00:D6BE                      ;             |||||||+> Right    KEY 0  - X
    5300   00:D6BE                      ;             ||||||+-> Left     KEY 1  - Z
    5301   00:D6BE                      ;             |||||+--> Down     KEY 2  - .
    5302   00:D6BE                      ;             ||||+---> Up       KEY 3  - ;
    5303   00:D6BE                      ;             |||+----> Fire1    KEY 4  - SPC
    5304   00:D6BE                      ;             ||+-----> Fire2    KEY 5  - Q
    5305   00:D6BE                      ;             |+------> Fire3    KEY 6  - P
    5306   00:D6BE                      ;             +-------> Not used
    5307   00:D6BE                      ;
    5308   00:D6BE                      ;                       Option1  KEY 7  - 1
    5309   00:D6BE                      ;                       Option2  KEY 8  - 2
    5310   00:D6BE                      ;                       Option3  KEY 9  - 3
    5311   00:D6BE                      ;                       Option4  KEY 10 - 4
    5312   00:D6BE                      ;--------------------------------------------------------
    5313   00:D6BE                      ; Joystick and keyboard reading routines.
    5314   00:D6BE                      ; The two Joystick units are connected to a plug-in module that
    5315   00:D6BE                      ; contains I/O address decoding and switch matrix encoding.
    5316   00:D6BE                      ; IC U2 (74LS138) enables I/O reads between 20 - 2F Hex.
    5317   00:D6BE                      ; Address lines AO - A3 are used separately to generate active LOW signals
    5318   00:D6BE                      ; on the joystick or switch to be read.
    5319   00:D6BE                      ; Switch state is then read at the resultant address from Data bits DO - D4.
    5320   00:D6BE                      ; When a switch is ON it provides an active-low Data bit. 
    5321   00:D6BE                      ;
    5322   00:D6BE                      ; JOY1 0x2E    JOY2 0x2B
    5323   00:D6BE                      ; U    0xFE    U    0xFE   1111 1110	
    5324   00:D6BE                      ; D    0xFD    D    0xFD   1111 1101   
    5325   00:D6BE                      ; L    0xFB    L    0xFB   1111 1011   
    5326   00:D6BE                      ; R    0xF7    R    0xF7   1111 0111   
    5327   00:D6BE                      ; FIRE 0xEF    FIRE 0xEF   1110 1111   
    5328   00:D6BE                      
    5329   00:D6BE                      ; 'Arm'0x2D (joy1 button 2)
    5330   00:D6BE                      ; FIRE 0xEF                1110 1111   
    5331   00:D6BE                      
    5332   00:D6BE                      ; 'Arm'0x27 (joy2 button 2)
    5333   00:D6BE                      ;              FIRE 0xEF   1110 1111 
    5334   00:D6BE                      
    5335   00:D6BE                      joykey
    5336   00:D6BE  3A 52 C9                   ld a,(contrl)       ; control flag.
    5337   00:D6C1  3D                         dec a               ; is it joystick 1?
    5338   00:D6C2  28 1B                      jr z,joy1           ; yes, read it.
    5339   00:D6C4  3D                         dec a               ; is it joystick 2?
    5340   00:D6C5  28 21                      jr z,joy2           ; yes, read it.
    5341   00:D6C7                      
    5342   00:D6C7                      ; Keyboard controls.
    5343   00:D6C7                      
    5344   00:D6C7  21 EC C8                   ld hl,keys+6        ; address of last key.
    5345   00:D6CA  1E 00                      ld e,0              ; zero reading.
    5346   00:D6CC  16 07                      ld d,7              ; keys to read.
    5347   00:D6CE  7E                  joyke0 ld a,(hl)           ; get key from table.
    5348   00:D6CF  CD A1 D6                   call ktest          ; is key pressed?
    5349   00:D6D2  3F                         ccf                 ; complement the result (0=not pressed,1=pressed).
    5350   00:D6D3  CB 13                      rl e                ; rotate into reading.
    5351   00:D6D5  2B                         dec hl
    5352   00:D6D6  15                         dec d
    5353   00:D6D7  C2 CE D6                   jp nz,joyke0         ; repeat for all keys.
    5354   00:D6DA  7B                  joyke1 ld a,e              ; copy e register to accumulator.
    5355   00:D6DB  32 21 C9                   ld (joyval),a       ; remember value.
    5356   00:D6DE  C9                         ret
    5357   00:D6DF                      
    5358   00:D6DF                      ; Joystick 1.
    5359   00:D6DF                      
    5360   00:D6DF  DB 2E               joy1	in a,($2e)	; read joystick1
    5361   00:D6E1  CD F1 D6            	call readjoy	; convert to joyval
    5362   00:D6E4  DB 2D               	in a,($2d)	; Read arm button joystick1
    5363   00:D6E6  18 1D               	jr readarm
    5364   00:D6E8                      
    5365   00:D6E8                      ; Joystick 2.
    5366   00:D6E8                      
    5367   00:D6E8  DB 2B               joy2	in a,($2b)	; read joystick2
    5368   00:D6EA  CD F1 D6            	call readjoy	; convert to joyval
    5369   00:D6ED  DB 27               	in a,($27)	; Read arm button joystick1
    5370   00:D6EF  18 14               	jr readarm
    5371   00:D6F1                      
    5372   00:D6F1  06 05               readjoy	ld b,5		; read 5 bits from joystick
    5373   00:D6F3  CB 2F               read0	sra a	
    5374   00:D6F5  3F                  	ccf		; complement the result (0=not pressed,1=pressed).
    5375   00:D6F6  CB 13               	rl e
    5376   00:D6F8  10 F9               	djnz read0
    5377   00:D6FA  CB 0B               	rrc e		; convert VZ values to Kempston
    5378   00:D6FC  30 04               	jr nc,rstfire
    5379   00:D6FE  CB E3               	set 4,e
    5380   00:D700  18 02               	jr joyexit
    5381   00:D702  CB A3               rstfire res 4,e
    5382   00:D704  C9                  joyexit ret
    5383   00:D705                      
    5384   00:D705  E6 10               readarm	and $10		; read arm button
    5385   00:D707  28 04               	jr z, joy1a
    5386   00:D709  CB AB               	res 5,e		; Not pressed, carry clear
    5387   00:D70B  18 02               	jr joy1b
    5388   00:D70D  CB EB               joy1a	set 5,e		; Pressed, carry set
    5389   00:D70F                      
    5390   00:D70F  21 EC C8            joy1b	ld hl,keys+6	; Read FIRE3 key
    5391   00:D712  7E                  	ld a,(hl)
    5392   00:D713  CD A1 D6            	call ktest
    5393   00:D716  38 04               	jr c,joy1c
    5394   00:D718  CB F3               	set 6,e
    5395   00:D71A  18 02               	jr joy1d
    5396   00:D71C  CB B3               joy1c	res 6,e
    5397   00:D71E  18 BA               joy1d	jr joyke1
    5398   00:D720                      
    5399   00:D720                      ; Display message.
    5400   00:D720                      
    5401   00:D720  21 0D 88            dmsg   ld hl,msgdat        ; pointer to messages.
    5402   00:D723  CD F4 D7                   call getwrd         ; get message number.
    5403   00:D726  CD E4 D7            dmsg3  call preprt         ; pre-printing stuff.
    5404   00:D729  CD 85 D2                   call checkx         ; make sure we're in a printable range.
    5405   00:D72C  3A 5F D7                   ld a,(prtmod)       ; print mode.
    5406   00:D72F  A7                         and a               ; standard size?
    5407   00:D730  C2 60 D7                   jp nz,bmsg1         ; no, double-height text.
    5408   00:D733  E5                  dmsg0  push hl             ; store string pointer.
    5409   00:D734  7E                         ld a,(hl)           ; fetch byte to display.
    5410   00:D735  E6 7F                      and 127             ; remove any end marker.
    5411   00:D737  FE 0D                      cp 13               ; newline character?
    5412   00:D739  28 14                      jr z,dmsg1
    5413   00:D73B  CD 64 D3                   call pchar          ; display character.
    5414   00:D73E                      
    5415   00:D73E                             ; no attribute.
    5416   00:D73E                      
    5417   00:D73E  CD D2 D7                   call nexpos         ; display position.
    5418   00:D741  20 03                      jr nz,dmsg2         ; not on a new line.
    5419   00:D743  CD DC D7                   call nexlin         ; next line down.
    5420   00:D746  E1                  dmsg2  pop hl
    5421   00:D747  7E                         ld a,(hl)           ; fetch last character.
    5422   00:D748  17                         rla                 ; was it the end?
    5423   00:D749  DA AD D2                   jp c,dscor2         ; yes, job done.
    5424   00:D74C  23                         inc hl              ; next character to display.
    5425   00:D74D  18 E4                      jr dmsg0
    5426   00:D74F  21 5E C9            dmsg1  ld hl,dispx         ; x coordinate.
    5427   00:D752  34                         inc (hl)            ; newline.
    5428   00:D753  7E                         ld a,(hl)           ; fetch position.
    5429   00:D754  FE 18                      cp SCRHGT               ; past screen edge?
    5430   00:D756  38 02                      jr c,dmsg4          ; no, it's okay.
    5431   00:D758  36 00                      ld (hl),0           ; restart at top.
    5432   00:D75A  23                  dmsg4  inc hl              ; y coordinate.
    5433   00:D75B  36 00                      ld (hl),0           ; carriage return.
    5434   00:D75D  18 E7                      jr dmsg2
    5435   00:D75F  00                  prtmod defb 0              ; print mode, 0 = standard, 1 = double-height.
    5436   00:D760                      
    5437   00:D760                      ; Display message in big text.
    5438   00:D760                      
    5439   00:D760  7E                  bmsg1  ld a,(hl)           ; get character to display.
    5440   00:D761  E5                         push hl             ; store pointer to message.
    5441   00:D762  E6 7F                      and 127             ; only want 7 bits.
    5442   00:D764  FE 0D                      cp 13               ; newline character?
    5443   00:D766  28 0A                      jr z,bmsg2          ; newline instead.
    5444   00:D768  CD 83 D7                   call bchar          ; display big char.
    5445   00:D76B  E1                  bmsg3  pop hl              ; retrieve message pointer.
    5446   00:D76C  7E                         ld a,(hl)           ; look at last character.
    5447   00:D76D  23                         inc hl              ; next character in list.
    5448   00:D76E  17                         rla                 ; was terminator flag set?
    5449   00:D76F  30 EF                      jr nc,bmsg1         ; no, keep going.
    5450   00:D771  C9                         ret
    5451   00:D772  21 53 C9            bmsg2  ld hl,charx         ; x coordinate.
    5452   00:D775  34                         inc (hl)            ; newline.
    5453   00:D776  34                         inc (hl)            ; newline.
    5454   00:D777  7E                         ld a,(hl)           ; fetch position.
    5455   00:D778  FE 17                      cp 23               ; past screen edge?
    5456   00:D77A  38 EF                      jr c,bmsg3          ; no, it's okay.
    5457   00:D77C  36 00                      ld (hl),0           ; restart at top.
    5458   00:D77E  23                         inc hl              ; y coordinate.
    5459   00:D77F  36 00                      ld (hl),0           ; carriage return.
    5460   00:D781  18 E8                      jr bmsg3
    5461   00:D783                      
    5462   00:D783                      ; Big character display.
    5463   00:D783                      
    5464   00:D783                      
    5465   00:D783  07                  bchar  rlca                ; multiply char by 8.
    5466   00:D784  07                         rlca
    5467   00:D785  07                         rlca
    5468   00:D786  5F                         ld e,a              ; store shift in e.
    5469   00:D787  E6 07                      and %00000111       ; only want high byte bits.
    5470   00:D789  57                         ld d,a              ; store in d.
    5471   00:D78A  7B                         ld a,e              ; restore shifted value.
    5472   00:D78B  E6 F8                      and %11111000       ; only want low byte bits.
    5473   00:D78D  5F                         ld e,a              ; that's the low byte. (DE=char*8).
    5474   00:D78E  2A 83 D2                   ld hl,(grbase)      ; address of graphics.
    5475   00:D791  19                         add hl,de           ; add displacement.
    5476   00:D792                          IF GFLAG
    5477   00:D792  ED 5B 63 C9                ld de,(bgmask)
    5478   00:D796                          ENDIF
    5479   00:D796  D9                         exx
    5480   00:D797  CD 2E D3                   call gprad          ; get screen address (in DE).
    5481   00:D79A  EB                         ex de,hl            ; (in HL).
    5482   00:D79B  11 20 00                   ld de,32            ; distance to next line.
    5483   00:D79E  06 08                      ld b,8              ; height of character in font.
    5484   00:D7A0                      
    5485   00:D7A0                      ;       ld a,(MODBUF)       ; get current screen mode. (bit 0 = 0 to bank-switch VRAM on.)
    5486   00:D7A0                      ;       out (COL32),a       ; (set screen mode and) bank-switch VRAM on.
    5487   00:D7A0                      ;       ld c,a              ; store screen mode.
    5488   00:D7A0                      
    5489   00:D7A0  D9                  bchar0 exx
    5490   00:D7A1  7E                         ld a,(hl)           ; get a byte of the font.
    5491   00:D7A2  23                         inc hl              ; next line of font.
    5492   00:D7A3                          IF GFLAG
    5493   00:D7A3  A2                         and d               ; apply foreground color.
    5494   00:D7A4  AB                         xor e               ; apply background color.
    5495   00:D7A5                          ENDIF
    5496   00:D7A5                      
    5497   00:D7A5                      IF IFLAG = 1
    5498   00:D7A5  EE FF               	xor 255
    5499   00:D7A7                      ENDIF
    5500   00:D7A7                      
    5501   00:D7A7  D9                         exx
    5502   00:D7A8  77                         ld (hl),a           ; write to screen.
    5503   00:D7A9  19                         add hl,de           ; down a line.
    5504   00:D7AA  77                         ld (hl),a           ; write to screen.
    5505   00:D7AB  19                         add hl,de           ; next line down.
    5506   00:D7AC  7C                         ld a,h
    5507   00:D7AD                      
    5508   00:D7AD  FE 88                      cp (VRAM + SCRHGT * 8 * 32) >>> 8 ; past lower edge of screen?
    5509   00:D7AF  30 02                      jr nc,bchar1        ; yes, stop copying.
    5510   00:D7B1  10 ED                      djnz bchar0         ; repeat.
    5511   00:D7B3                      bchar1
    5512   00:D7B3                      
    5513   00:D7B3                      ;       ld a,c              ; restore screen mode.
    5514   00:D7B3                      ;       inc a               ; set bit 0 to bank-switch VRAM off.
    5515   00:D7B3                      ;       out (COL32),a       ; (set screen mode and) bank-switch VRAM off.
    5516   00:D7B3                      
    5517   00:D7B3  CD D2 D7                   call nexpos         ; display position.
    5518   00:D7B6  C2 BD D7                   jp nz,bchar2        ; not on a new line.
    5519   00:D7B9  34                  bchar3 inc (hl)            ; newline.
    5520   00:D7BA  CD DC D7                   call nexlin         ; next line check.
    5521   00:D7BD  C3 AD D2            bchar2 jp dscor2           ; tidy up line and column variables.
    5522   00:D7C0                      
    5523   00:D7C0                      ; Display a character.
    5524   00:D7C0                      
    5525   00:D7C0  47                  achar  ld b,a              ; copy to b.
    5526   00:D7C1  CD E4 D7                   call preprt         ; get ready to print.
    5527   00:D7C4  3A 5F D7                   ld a,(prtmod)       ; print mode.
    5528   00:D7C7  A7                         and a               ; standard size?
    5529   00:D7C8  78                         ld a,b              ; character in accumulator.
    5530   00:D7C9  C2 83 D7                   jp nz,bchar         ; no, double-height text.
    5531   00:D7CC  CD 64 D3                   call pchar          ; display character.
    5532   00:D7CF                      
    5533   00:D7CF  C3 B3 D7                   jp bchar1            ; advance position.
    5534   00:D7D2                      
    5535   00:D7D2                      
    5536   00:D7D2                      ; Get next print column position.
    5537   00:D7D2                      
    5538   00:D7D2  21 5F C9            nexpos ld hl,dispy         ; display position.
    5539   00:D7D5  7E                         ld a,(hl)           ; get coordinate.
    5540   00:D7D6  3C                         inc a               ; move along one position.
    5541   00:D7D7  E6 1F                      and 31              ; reached edge of screen?
    5542   00:D7D9  77                         ld (hl),a           ; set new position.
    5543   00:D7DA  2B                         dec hl              ; point to x now.
    5544   00:D7DB  C9                         ret                 ; return with status in zero flag.
    5545   00:D7DC                      
    5546   00:D7DC                      ; Get next print line position.
    5547   00:D7DC                      
    5548   00:D7DC  34                  nexlin inc (hl)            ; newline.
    5549   00:D7DD  7E                         ld a,(hl)           ; vertical position.
    5550   00:D7DE  FE 40                      cp 64               ; past screen edge?
    5551   00:D7E0  D8                         ret c               ; no, still okay.
    5552   00:D7E1  36 00                      ld (hl),0           ; restart at top.
    5553   00:D7E3  C9                         ret
    5554   00:D7E4                      
    5555   00:D7E4                      ; Pre-print preliminaries.
    5556   00:D7E4                      
    5557   00:D7E4                      
    5558   00:D7E4  11 D0 C4            preprt ld de,font-256      ; font pointer.
    5559   00:D7E7  ED 53 83 D2                ld (grbase),de      ; set up graphics base.
    5560   00:D7EB  ED 5B 53 C9         prescr ld de,(charx)       ; display coordinates.
    5561   00:D7EF                      
    5562   00:D7EF  ED 53 5E C9                ld (dispx),de       ; set up general coordinates.
    5563   00:D7F3  C9                         ret
    5564   00:D7F4                      
    5565   00:D7F4                      ; On entry: hl points to word list
    5566   00:D7F4                      ;           a contains word number.
    5567   00:D7F4                      
    5568   00:D7F4  A7                  getwrd and a               ; first word in list?
    5569   00:D7F5  C8                         ret z               ; yep, don't search.
    5570   00:D7F6  47                         ld b,a
    5571   00:D7F7  7E                  getwd0 ld a,(hl)
    5572   00:D7F8  23                         inc hl
    5573   00:D7F9  FE 80                      cp %10000000        ; found end?
    5574   00:D7FB  38 FA                      jr c,getwd0         ; no, carry on.
    5575   00:D7FD  10 F8                      djnz getwd0         ; until we have right number.
    5576   00:D7FF  C9                         ret
    5577   00:D800                      
    5578   00:D800                      
    5579   00:D800                      ; Bubble sort.
    5580   00:D800                      
    5581   00:D800  06 0B               bsort  ld b,NUMSPR - 1     ; sprites to swap.
    5582   00:D802  DD 21 F6 DD                ld ix,sprtab        ; sprite table.
    5583   00:D806  C5                  bsort0 push bc             ; store loop counter for now.
    5584   00:D807                      
    5585   00:D807  DD 7E 00                   ld a,(ix+0)         ; first sprite type.
    5586   00:D80A  3C                         inc a               ; is it switched off?
    5587   00:D80B  28 22                      jr z,swemp          ; yes, may need to switch another in here.
    5588   00:D80D                      
    5589   00:D80D  DD 7E 11                   ld a,(ix+TABSIZ)    ; check next slot exists.
    5590   00:D810  3C                         inc a               ; is it enabled?
    5591   00:D811  28 08                      jr z,bsort2         ; no, nothing to swap.
    5592   00:D813                      
    5593   00:D813  DD 7E 14                   ld a,(ix+(3+TABSIZ)); fetch next sprite's coordinate.
    5594   00:D816  DD BE 03                   cp (ix+3)           ; compare with this x coordinate.
    5595   00:D819  38 09                      jr c,bsort1         ; next sprite is higher - may need to switch.
    5596   00:D81B  11 11 00            bsort2 ld de,TABSIZ        ; distance to next odd/even entry.
    5597   00:D81E  DD 19                      add ix,de           ; next sprite.
    5598   00:D820  C1                         pop bc              ; retrieve loop counter.
    5599   00:D821  10 E3                      djnz bsort0         ; repeat for remaining sprites.
    5600   00:D823  C9                         ret
    5601   00:D824                      
    5602   00:D824  DD 7E 11            bsort1 ld a,(ix+TABSIZ)    ; sprite on/off flag.
    5603   00:D827  3C                         inc a               ; is it enabled?
    5604   00:D828  28 F1                      jr z,bsort2         ; no, nothing to swap.
    5605   00:D82A  CD 3A D8                   call swspr          ; swap positions.
    5606   00:D82D  18 EC                      jr bsort2
    5607   00:D82F                      
    5608   00:D82F  DD 7E 11            swemp  ld a,(ix+TABSIZ)    ; next table entry.
    5609   00:D832  3C                         inc a               ; is that one on?
    5610   00:D833  28 E6                      jr z,bsort2         ; no, nothing to swap.
    5611   00:D835  CD 3A D8                   call swspr          ; swap positions.
    5612   00:D838  18 E1                      jr bsort2
    5613   00:D83A                      
    5614   00:D83A                      ; Swap sprites.
    5615   00:D83A                      
    5616   00:D83A  DD E5               swspr  push ix             ; table address on stack.
    5617   00:D83C  E1                         pop hl              ; pop into hl pair.
    5618   00:D83D  54                         ld d,h              ; copy to de pair.
    5619   00:D83E  5D                         ld e,l
    5620   00:D83F  01 11 00                   ld bc,TABSIZ        ; distance to second entry.
    5621   00:D842  09                         add hl,bc           ; point to second sprite entry.
    5622   00:D843  06 11                      ld b,TABSIZ         ; bytes to swap.
    5623   00:D845  4E                  swspr0 ld c,(hl)           ; fetch second byte.
    5624   00:D846  1A                         ld a,(de)           ; fetch first byte.
    5625   00:D847  77                         ld (hl),a           ; copy to second.
    5626   00:D848  79                         ld a,c              ; second byte in accumulator.
    5627   00:D849  12                         ld (de),a           ; copy to first sprite entry.
    5628   00:D84A  13                         inc de              ; next byte.
    5629   00:D84B  23                         inc hl              ; next byte.
    5630   00:D84C  10 F7                      djnz swspr0         ; swap all bytes in table entry.
    5631   00:D84E  C9                         ret
    5632   00:D84F                      
    5633   00:D84F                      
    5634   00:D84F                      ; Process sprites.
    5635   00:D84F                      
    5636   00:D84F  06 0C               pspr   ld b,NUMSPR         ; sprites to process.
    5637   00:D851  DD 21 F6 DD                ld ix,sprtab        ; sprite table.
    5638   00:D855  C5                  pspr1  push bc             ; store loop counter for now.
    5639   00:D856  DD 7E 00                   ld a,(ix+0)         ; fetch sprite type.
    5640   00:D859  FE 09                      cp 9                ; within range of sprite types?
    5641   00:D85B  DC 67 D8                   call c,pspr2        ; yes, process this one.
    5642   00:D85E  11 11 00                   ld de,TABSIZ        ; distance to next odd/even entry.
    5643   00:D861  DD 19                      add ix,de           ; next sprite.
    5644   00:D863  C1                         pop bc              ; retrieve loop counter.
    5645   00:D864  10 EF                      djnz pspr1          ; repeat for remaining sprites.
    5646   00:D866  C9                         ret
    5647   00:D867  DD 22 80 D8         pspr2  ld (ogptr),ix       ; store original sprite pointer.
    5648   00:D86B  CD 73 D8                   call pspr3          ; do the routine.
    5649   00:D86E  DD 2A 80 D8         rtorg  ld ix,(ogptr)       ; restore original pointer to sprite.
    5650   00:D872  C9                  rtorg0 ret
    5651   00:D873  21 82 D8            pspr3  ld hl,evtyp0        ; sprite type events list.
    5652   00:D876  87                  pspr4  add a,a             ; double accumulator.
    5653   00:D877  5F                         ld e,a              ; copy to de.
    5654   00:D878  16 00                      ld d,0              ; no high byte.
    5655   00:D87A  19                         add hl,de           ; point to address of routine.
    5656   00:D87B  5E                         ld e,(hl)           ; address low.
    5657   00:D87C  23                         inc hl              ; next byte of address.
    5658   00:D87D  56                         ld d,(hl)           ; address high.
    5659   00:D87E  EB                         ex de,hl            ; swap address into hl.
    5660   00:D87F  E9                         jp (hl)             ; go there.
    5661   00:D880  00 00               ogptr  defw 0              ; original sprite pointer.
    5662   00:D882                      
    5663   00:D882                      ; Address of each sprite type's routine.
    5664   00:D882                      
    5665   00:D882  43 7B               evtyp0 defw evnt00
    5666   00:D884  B1 7C               evtyp1 defw evnt01
    5667   00:D886  5F 7D               evtyp2 defw evnt02
    5668   00:D888  D0 7D               evtyp3 defw evnt03
    5669   00:D88A  43 7E               evtyp4 defw evnt04
    5670   00:D88C  44 7E               evtyp5 defw evnt05
    5671   00:D88E  49 7E               evtyp6 defw evnt06
    5672   00:D890  08 7F               evtyp7 defw evnt07
    5673   00:D892  84 7F               evtyp8 defw evnt08
    5674   00:D894                      
    5675   00:D894                      
    5676   00:D894                      ; Display sprites.
    5677   00:D894                      
    5678   00:D894  06 06               dspr   ld b,NUMSPR/2       ; number of sprites to display.
    5679   00:D896  C5                  dspr0  push bc             ; store loop counter for now.
    5680   00:D897  DD 7E 00                   ld a,(ix+0)         ; get sprite type.
    5681   00:D89A  3C                         inc a               ; is it enabled?
    5682   00:D89B  20 21                      jr nz,dspr1         ; yes, it needs deleting.
    5683   00:D89D  DD 7E 05            dspr5  ld a,(ix+5)         ; new type.
    5684   00:D8A0  3C                         inc a               ; is it enabled?
    5685   00:D8A1  20 4E                      jr nz,dspr3         ; yes, it needs drawing.
    5686   00:D8A3                      
    5687   00:D8A3  DD E5               dspr2  push ix             ; put ix on stack.
    5688   00:D8A5  E1                         pop hl              ; pop into hl.
    5689   00:D8A6  5D                         ld e,l              ; copy to de.
    5690   00:D8A7  54                         ld d,h
    5691   00:D8A8                      
    5692   00:D8A8                      ;dspr2  ld e,ixl            ; copy ix to de.
    5693   00:D8A8                      ;       ld d,ixh
    5694   00:D8A8                      ;       ld l,e              ; copy to hl.
    5695   00:D8A8                      ;       ld h,d
    5696   00:D8A8  01 05 00                   ld bc,5             ; distance to new type.
    5697   00:D8AB  09                         add hl,bc           ; point to new properties.
    5698   00:D8AC  ED A0                      ldi                 ; copy to old positions.
    5699   00:D8AE  ED A0                      ldi
    5700   00:D8B0  ED A0                      ldi
    5701   00:D8B2  ED A0                      ldi
    5702   00:D8B4  ED A0                      ldi
    5703   00:D8B6  0E 22                      ld c,TABSIZ*2       ; distance to next odd/even entry.
    5704   00:D8B8  DD 09                      add ix,bc           ; next sprite.
    5705   00:D8BA  C1                         pop bc              ; retrieve loop counter.
    5706   00:D8BB  10 D9                      djnz dspr0          ; repeat for remaining sprites.
    5707   00:D8BD  C9                         ret
    5708   00:D8BE                      
    5709   00:D8BE                      ;dspr1  ld a,(ix+3)         ; old x coord.
    5710   00:D8BE                      ;       cp 177              ; beyond maximum?
    5711   00:D8BE                      ;       jr nc,dspr5         ; yes, don't delete it.
    5712   00:D8BE  DD 7E 05            dspr1  ld a,(ix+5)         ; type of new sprite.
    5713   00:D8C1  3C                         inc a               ; is this enabled?
    5714   00:D8C2  20 06                      jr nz,dspr4         ; yes, display both.
    5715   00:D8C4  CD 6A D9            dspr6  call sspria         ; show single sprite.
    5716   00:D8C7  C3 A3 D8                   jp dspr2
    5717   00:D8CA                      
    5718   00:D8CA                      ; Displaying two sprites.  Don't bother redrawing if nothing has changed.
    5719   00:D8CA                      
    5720   00:D8CA  DD 7E 04            dspr4  ld a,(ix+4)         ; old y.
    5721   00:D8CD  DD BE 09                   cp (ix+9)           ; compare with new value.
    5722   00:D8D0  20 19                      jr nz,dspr7         ; they differ, need to redraw.
    5723   00:D8D2  DD 7E 03                   ld a,(ix+3)         ; old x.
    5724   00:D8D5  DD BE 08                   cp (ix+8)           ; compare against new value.
    5725   00:D8D8  20 11                      jr nz,dspr7         ; they differ, need to redraw.
    5726   00:D8DA  DD 7E 02                   ld a,(ix+2)         ; old frame.
    5727   00:D8DD  DD BE 07                   cp (ix+7)           ; compare against new value.
    5728   00:D8E0  20 09                      jr nz,dspr7         ; they differ, need to redraw.
    5729   00:D8E2  DD 7E 01                   ld a,(ix+1)         ; old image.
    5730   00:D8E5  DD BE 06                   cp (ix+6)           ; compare against new value.
    5731   00:D8E8  CA A3 D8                   jp z,dspr2          ; everything is the same, don't redraw.
    5732   00:D8EB  CD 7F D9            dspr7  call sspric         ; delete old sprite, draw new one simultaneously.
    5733   00:D8EE  C3 A3 D8                   jp dspr2
    5734   00:D8F1  CD 79 D9            dspr3  call ssprib         ; show single sprite.
    5735   00:D8F4  C3 A3 D8                   jp dspr2
    5736   00:D8F7                      
    5737   00:D8F7                      
    5738   00:D8F7                      ; Get sprite address calculations.
    5739   00:D8F7                      ; gspran = new sprite, gsprad = old sprite.
    5740   00:D8F7                      
    5741   00:D8F7  DD 6E 08            gspran ld l,(ix+8)         ; new x coordinate.
    5742   00:D8FA  DD 66 09                   ld h,(ix+9)         ; new y coordinate.
    5743   00:D8FD  22 5E C9                   ld (dispx),hl       ; set display coordinates.
    5744   00:D900  DD 7E 06                   ld a,(ix+6)         ; new sprite image.
    5745   00:D903  CD 27 DC                   call gfrm           ; fetch start frame for this sprite.
    5746   00:D906  7E                         ld a,(hl)           ; frame in accumulator.
    5747   00:D907  DD 86 07                   add a,(ix+7)        ; new add frame number.
    5748   00:D90A  C3 20 D9                   jp gspra0
    5749   00:D90D                      
    5750   00:D90D  DD 6E 03            gsprad ld l,(ix+3)         ; x coordinate.
    5751   00:D910  DD 66 04                   ld h,(ix+4)         ; y coordinate.
    5752   00:D913  22 5E C9                   ld (dispx),hl       ; set display coordinates.
    5753   00:D916  DD 7E 01                   ld a,(ix+1)         ; sprite image.
    5754   00:D919  CD 27 DC                   call gfrm           ; fetch start frame for this sprite.
    5755   00:D91C  7E                         ld a,(hl)           ; frame in accumulator.
    5756   00:D91D  DD 86 02                   add a,(ix+2)        ; add frame number.
    5757   00:D920                      
    5758   00:D920                      gspra0
    5759   00:D920                      
    5760   00:D920                      IF MFLAG = 0
    5761   00:D920  0F                         rrca                ; multiply by 128.
    5762   00:D921  57                         ld d,a              ; store in d.
    5763   00:D922  E6 80                      and 128             ; low byte bit.
    5764   00:D924  5F                         ld e,a              ; got low byte.
    5765   00:D925  7A                         ld a,d              ; restore result.
    5766   00:D926  E6 7F                      and 127             ; high byte bits.
    5767   00:D928  57                         ld d,a              ; displacement high byte.
    5768   00:D929                      ELSE
    5769   00:D929                    ~        rrca                ; multiply by 64.
    5770   00:D929                    ~        rrca                ; .
    5771   00:D929                    ~        ld d,a              ; store in d.
    5772   00:D929                    ~        and $c0             ; low byte bit 0,1
    5773   00:D929                    ~        ld e,a              ; got low byte.
    5774   00:D929                    ~        ld a,d              ; restore result.
    5775   00:D929                    ~        and $3f             ; high byte bits.
    5776   00:D929                    ~        ld d,a              ; displacement high byte.
    5777   00:D929                    ~ ENDIF
    5778   00:D929                      
    5779   00:D929  21 0A A1                   ld hl,sprgfx        ; address of play sprites.
    5780   00:D92C  19                         add hl,de           ; point to frame.
    5781   00:D92D                      
    5782   00:D92D  3A 5F C9                   ld a,(dispy)        ; y coordinate.
    5783   00:D930  E6 06                      and 6               ; position within byte boundary.
    5784   00:D932  4F                         ld c,a              ; low byte of table displacement.
    5785   00:D933                      
    5786   00:D933                      IF MFLAG = 0
    5787   00:D933  07                         rlca                ; multiply by 32.
    5788   00:D934                      ENDIF
    5789   00:D934  07                         rlca                ; already a multiple
    5790   00:D935  07                         rlca                ; of 2, so just 4
    5791   00:D936  07                         rlca                ; shifts needed.
    5792   00:D937  5F                         ld e,a              ; put displacement in low byte of de.
    5793   00:D938  16 00                      ld d,0              ; zero the high byte.
    5794   00:D93A  42                         ld b,d              ; no high byte for mask displacement either.
    5795   00:D93B  19                         add hl,de           ; add to sprite address.
    5796   00:D93C  EB                         ex de,hl            ; need it in de for now.
    5797   00:D93D  21 62 D9                   ld hl,spmask        ; pointer to mask table.
    5798   00:D940  09                         add hl,bc           ; add displacement to pointer.
    5799   00:D941  4E                         ld c,(hl)           ; left mask.
    5800   00:D942  23                         inc hl
    5801   00:D943  46                         ld b,(hl)           ; right mask.
    5802   00:D944                      
    5803   00:D944                      ; Drop into screen address routine.
    5804   00:D944                      ; This routine returns a screen address for (dispx, dispy) in hl.
    5805   00:D944                      
    5806   00:D944                      
    5807   00:D944                      scadd
    5808   00:D944  2A 5E C9                   ld hl,(dispx)       ; get vertical pixel coordinate in L, horizontal in H.
    5809   00:D947                      
    5810   00:D947  7C                         ld a,h              ; copy horizontal coordinate in A.
    5811   00:D948  CB 3D                      srl l               ; shift the pair LA 3 times to the right, inserting zeroes to the left.
    5812   00:D94A  1F                         rra                 ; (making LA = 32 * vertical coordinate + horizontal coordinate / 8)
    5813   00:D94B  CB 3D                      srl l
    5814   00:D94D  1F                         rra
    5815   00:D94E  CB 3D                      srl l
    5816   00:D950  1F                         rra
    5817   00:D951  65                         ld h,l              ; copy the result in LA to HL.
    5818   00:D952  6F                         ld l,a
    5819   00:D953  3E 70                      ld a,VRAM >> 8      ; Add address of start of VRAM to HL.
    5820   00:D955  84                         add a,h
    5821   00:D956  67                         ld h,a
    5822   00:D957                      
    5823   00:D957  3A 5E C9            	ld a,(dispx)
    5824   00:D95A  FE BF               	cp 191
    5825   00:D95C  D8                  	ret c
    5826   00:D95D                      
    5827   00:D95D  7C                  	ld a,h
    5828   00:D95E  D6 20               	sub $20
    5829   00:D960  67                  	ld h,a
    5830   00:D961                      
    5831   00:D961  C9                         ret
    5832   00:D962                      
    5833   00:D962                      
    5834   00:D962  FF 00               spmask defb %11111111,%00000000
    5835   00:D964  3F C0                      defb %00111111,%11000000
    5836   00:D966  0F F0                      defb %00001111,%11110000
    5837   00:D968  03 FC                      defb %00000011,%11111100
    5838   00:D96A                      
    5839   00:D96A                      
    5840   00:D96A                      ; These are the sprite routines.
    5841   00:D96A                      ; sspria = single sprite, old (ix).
    5842   00:D96A                      ; ssprib = single sprite, new (ix+5).
    5843   00:D96A                      ; sspric = both sprites, old (ix) and new (ix+5).
    5844   00:D96A                      
    5845   00:D96A  CD 0D D9            sspria call gsprad         ; get old sprite address.
    5846   00:D96D  3E 10               sspri2 ld a,COLDIST + 1             ; vertical lines
    5847   00:D96F  08                  sspri0 ex af,af'           ; store line counter away in alternate registers.
    5848   00:D970  CD 02 DA                   call dline          ; draw a line.
    5849   00:D973  08                         ex af,af'           ; restore line counter.
    5850   00:D974  3D                         dec a               ; one less to go.
    5851   00:D975  C2 6F D9                   jp nz,sspri0
    5852   00:D978  C9                         ret
    5853   00:D979                      
    5854   00:D979  CD F7 D8            ssprib call gspran         ; get new sprite address.
    5855   00:D97C  C3 6D D9                   jp sspri2
    5856   00:D97F                      
    5857   00:D97F  CD 0D D9            sspric call gsprad         ; get old sprite address.
    5858   00:D982  D9                         exx                 ; store addresses.
    5859   00:D983  CD F7 D8                   call gspran         ; get new sprite addresses.
    5860   00:D986  CD 02 DA                   call dline          ; draw a line.
    5861   00:D989  D9                         exx                 ; restore old addresses.
    5862   00:D98A  CD 02 DA                   call dline          ; delete a line.
    5863   00:D98D  D9                         exx                 ; flip to new sprite addresses.
    5864   00:D98E  CD 02 DA                   call dline          ; draw a line.
    5865   00:D991  D9                         exx                 ; restore old addresses.
    5866   00:D992  CD 02 DA                   call dline          ; delete a line.
    5867   00:D995  D9                         exx                 ; flip to new sprite addresses.
    5868   00:D996  CD 02 DA                   call dline          ; draw a line.
    5869   00:D999  D9                         exx                 ; restore old addresses.
    5870   00:D99A  CD 02 DA                   call dline          ; delete a line.
    5871   00:D99D  D9                         exx                 ; flip to new sprite addresses.
    5872   00:D99E  CD 02 DA                   call dline          ; draw a line.
    5873   00:D9A1  D9                         exx                 ; restore old addresses.
    5874   00:D9A2  CD 02 DA                   call dline          ; delete a line.
    5875   00:D9A5  D9                         exx                 ; flip to new sprite addresses.
    5876   00:D9A6  CD 02 DA                   call dline          ; draw a line.
    5877   00:D9A9  D9                         exx                 ; restore old addresses.
    5878   00:D9AA  CD 02 DA                   call dline          ; delete a line.
    5879   00:D9AD  D9                         exx                 ; flip to new sprite addresses.
    5880   00:D9AE  CD 02 DA                   call dline          ; draw a line.
    5881   00:D9B1  D9                         exx                 ; restore old addresses.
    5882   00:D9B2  CD 02 DA                   call dline          ; delete a line.
    5883   00:D9B5  D9                         exx                 ; flip to new sprite addresses.
    5884   00:D9B6  CD 02 DA                   call dline          ; draw a line.
    5885   00:D9B9  D9                         exx                 ; restore old addresses.
    5886   00:D9BA  CD 02 DA                   call dline          ; delete a line.
    5887   00:D9BD  D9                         exx                 ; flip to new sprite addresses.
    5888   00:D9BE  CD 02 DA                   call dline          ; draw a line.
    5889   00:D9C1  D9                         exx                 ; restore old addresses.
    5890   00:D9C2                      
    5891   00:D9C2                      IF MFLAG = 0
    5892   00:D9C2  CD 02 DA                   call dline          ; delete a line.
    5893   00:D9C5  D9                         exx                 ; flip to new sprite addresses.
    5894   00:D9C6  CD 02 DA                   call dline          ; draw a line.
    5895   00:D9C9  D9                         exx                 ; restore old addresses.
    5896   00:D9CA  CD 02 DA                   call dline          ; delete a line.
    5897   00:D9CD  D9                         exx                 ; flip to new sprite addresses.
    5898   00:D9CE  CD 02 DA                   call dline          ; draw a line.
    5899   00:D9D1  D9                         exx                 ; restore old addresses.
    5900   00:D9D2  CD 02 DA                   call dline          ; delete a line.
    5901   00:D9D5  D9                         exx                 ; flip to new sprite addresses.
    5902   00:D9D6  CD 02 DA                   call dline          ; draw a line.
    5903   00:D9D9  D9                         exx                 ; restore old addresses.
    5904   00:D9DA  CD 02 DA                   call dline          ; delete a line.
    5905   00:D9DD  D9                         exx                 ; flip to new sprite addresses.
    5906   00:D9DE  CD 02 DA                   call dline          ; draw a line.
    5907   00:D9E1  D9                         exx                 ; restore old addresses.
    5908   00:D9E2  CD 02 DA                   call dline          ; delete a line.
    5909   00:D9E5  D9                         exx                 ; flip to new sprite addresses.
    5910   00:D9E6  CD 02 DA                   call dline          ; draw a line.
    5911   00:D9E9  D9                         exx                 ; restore old addresses.
    5912   00:D9EA  CD 02 DA                   call dline          ; delete a line.
    5913   00:D9ED  D9                         exx                 ; flip to new sprite addresses.
    5914   00:D9EE  CD 02 DA                   call dline          ; draw a line.
    5915   00:D9F1  D9                         exx                 ; restore old addresses.
    5916   00:D9F2  CD 02 DA                   call dline          ; delete a line.
    5917   00:D9F5  D9                         exx                 ; flip to new sprite addresses.
    5918   00:D9F6  CD 02 DA                   call dline          ; draw a line.
    5919   00:D9F9  D9                         exx                 ; restore old addresses.
    5920   00:D9FA  CD 02 DA                   call dline          ; delete a line.
    5921   00:D9FD  D9                         exx                 ; flip to new sprite addresses.
    5922   00:D9FE  CD 02 DA                   call dline          ; draw a line.
    5923   00:DA01  D9                         exx                 ; restore old addresses.
    5924   00:DA02                      ENDIF
    5925   00:DA02                      
    5926   00:DA02                      ; Drop through.
    5927   00:DA02                      ; Line drawn, now work out next target address.
    5928   00:DA02                      
    5929   00:DA02                      
    5930   00:DA02                      dline
    5931   00:DA02                      IF XFLAG = 1 or XFLAG = 2
    5932   00:DA02  E5                  	push hl
    5933   00:DA03                      ENDIF
    5934   00:DA03  7C                  	ld a,h
    5935   00:DA04  FE 70               	cp $70
    5936   00:DA06  30 04               	jr nc,goon
    5937   00:DA08  13                  	inc de
    5938   00:DA09  13                  	inc de
    5939   00:DA0A  18 29               	jr skipline
    5940   00:DA0C                      goon
    5941   00:DA0C                      IF XFLAG = 1 or XFLAG = 2
    5942   00:DA0C  D6 70               	sub $70
    5943   00:DA0E  CB 3F               	srl a
    5944   00:DA10  CB 3F               	srl a
    5945   00:DA12  CB 3F               	srl a
    5946   00:DA14  E6 03               	and 3
    5947   00:DA16  FE 03               	cp 3
    5948   00:DA18  28 1B               	jr z,skipline
    5949   00:DA1A  C6 1C               	add a,XMODE
    5950   00:DA1C  D3 20               	out (XPORT),a
    5951   00:DA1E  7C                  	ld a,h
    5952   00:DA1F  E6 07               	and $07
    5953   00:DA21  F6 70               	or $70
    5954   00:DA23  67                  	ld h,a
    5955   00:DA24                      ENDIF
    5956   00:DA24                      
    5957   00:DA24  1A                         ld a,(de)           ; graphic data.
    5958   00:DA25                      
    5959   00:DA25  A1                         and c               ; mask away what's not needed.
    5960   00:DA26  AE                         xor (hl)            ; XOR with what's there.
    5961   00:DA27  77                         ld (hl),a           ; bung it in.
    5962   00:DA28  2C                         inc l               ; next screen address.
    5963   00:DA29  2C                         inc l               ; next screen address.
    5964   00:DA2A  1A                         ld a,(de)           ; fetch data.
    5965   00:DA2B  A0                         and b               ; mask away unwanted bits.
    5966   00:DA2C  AE                         xor (hl)            ; XOR with what's there.
    5967   00:DA2D  77                         ld (hl),a           ; bung it in.
    5968   00:DA2E  13                         inc de              ; next graphic.
    5969   00:DA2F  2D                         dec l               ; one character cell to the left.
    5970   00:DA30  1A                         ld a,(de)           ; second bit of data.
    5971   00:DA31  AE                         xor (hl)            ; XOR with what's there.
    5972   00:DA32  77                         ld (hl),a           ; bung it in.
    5973   00:DA33  13                         inc de              ; point to next line of data.
    5974   00:DA34  2D                         dec l               ; another char left.
    5975   00:DA35                      
    5976   00:DA35                      skipline
    5977   00:DA35                      IF XFLAG = 1 or XFLAG = 2
    5978   00:DA35  E1                  	pop hl
    5979   00:DA36                      ENDIF
    5980   00:DA36                      
    5981   00:DA36                      ;       ld a,(MODBUF)       ; get video mode with bit 0 = 0.
    5982   00:DA36                      ;       inc a               ; set bit 0 = 1 to bank-switch VRAM off.
    5983   00:DA36                      ;       out (COL32),a       ; (set video mode and) bank-switch VRAM off.
    5984   00:DA36                      
    5985   00:DA36                      
    5986   00:DA36                      ; Line drawn, now work out next target address.
    5987   00:DA36                      
    5988   00:DA36                      
    5989   00:DA36  3E 20               nline  ld a,32             ; next screen line.
    5990   00:DA38  85                         add a,l
    5991   00:DA39  6F                         ld l,a
    5992   00:DA3A  3E 00                      ld a,0
    5993   00:DA3C  8C                         adc a,h
    5994   00:DA3D  67                         ld h,a
    5995   00:DA3E                      
    5996   00:DA3E                      IF XFLAG = 0
    5997   00:DA3E                    ~        cp (VRAM + SCRHGT * 8 * 32) >> 8 ; reached end of screen?
    5998   00:DA3E                    ~        ret c               ; not yet.
    5999   00:DA3E                    ~        ld h,ROM >> 8       ; take a ROM address, so next tries to write sprite bytes into VRAM will be lost.
    6000   00:DA3E                    ~ ENDIF
    6001   00:DA3E                      
    6002   00:DA3E  C9                         ret
    6003   00:DA3F                      
    6004   00:DA3F                      ; Animates a sprite.
    6005   00:DA3F                      
    6006   00:DA3F  21 22 C9            animsp ld hl,frmno         ; game frame.
    6007   00:DA42  A6                         and (hl)            ; is it time to change the frame?
    6008   00:DA43  C0                         ret nz              ; not this frame.
    6009   00:DA44  DD 7E 06                   ld a,(ix+6)         ; sprite image.
    6010   00:DA47  CD 27 DC                   call gfrm           ; get frame data.
    6011   00:DA4A  23                         inc hl              ; point to frames.
    6012   00:DA4B  DD 7E 07                   ld a,(ix+7)         ; sprite frame.
    6013   00:DA4E  3C                         inc a               ; next one along.
    6014   00:DA4F  BE                         cp (hl)             ; reached the last frame?
    6015   00:DA50  38 01                      jr c,anims0         ; no, not yet.
    6016   00:DA52  AF                         xor a               ; start at first frame.
    6017   00:DA53  DD 77 07            anims0 ld (ix+7),a         ; new frame.
    6018   00:DA56  C9                         ret
    6019   00:DA57                      
    6020   00:DA57  21 22 C9            animbk ld hl,frmno         ; game frame.
    6021   00:DA5A  A6                         and (hl)            ; is it time to change the frame?
    6022   00:DA5B  C0                         ret nz              ; not this frame.
    6023   00:DA5C  DD 7E 06                   ld a,(ix+6)         ; sprite image.
    6024   00:DA5F  CD 27 DC                   call gfrm           ; get frame data.
    6025   00:DA62  23                         inc hl              ; point to frames.
    6026   00:DA63  DD 7E 07                   ld a,(ix+7)         ; sprite frame.
    6027   00:DA66  A7                         and a               ; first one?
    6028   00:DA67  20 01                      jr nz,rtanb0        ; yes, start at end.
    6029   00:DA69  7E                         ld a,(hl)           ; last sprite.
    6030   00:DA6A  3D                  rtanb0 dec a               ; next one along.
    6031   00:DA6B  18 E6                      jr anims0           ; set new frame.
    6032   00:DA6D                      
    6033   00:DA6D                      ; Check for collision with other sprite, strict enforcement.
    6034   00:DA6D                      
    6035   00:DA6D  21 F6 DD            sktyp  ld hl,sprtab        ; sprite table.
    6036   00:DA70                      ;<zx>
    6037   00:DA70  3E 0C               numsp2 ld a,NUMSPR         ; number of sprites.
    6038   00:DA72  08                  sktyp0 ex af,af'           ; store loop counter.
    6039   00:DA73  22 8E DA                   ld (skptr),hl       ; store pointer to sprite.
    6040   00:DA76  7E                         ld a,(hl)           ; get sprite type.
    6041   00:DA77  B8                         cp b                ; is it the type we seek?
    6042   00:DA78  28 16                      jr z,coltyp         ; yes, we can use this one.
    6043   00:DA7A  2A 8E DA            sktyp1 ld hl,(skptr)       ; retrieve sprite pointer.
    6044   00:DA7D  11 11 00                   ld de,TABSIZ        ; size of each entry.
    6045   00:DA80  19                         add hl,de           ; point to next sprite in table.
    6046   00:DA81  08                         ex af,af'           ; restore loop counter.
    6047   00:DA82  3D                         dec a               ; one less iteration.
    6048   00:DA83  C2 72 DA                   jp nz,sktyp0        ; keep going until we find a slot.
    6049   00:DA86  21 00 00                   ld hl,0             ; default to ROM address - no sprite.
    6050   00:DA89  22 8E DA                   ld (skptr),hl       ; store pointer to sprite.
    6051   00:DA8C  B4                         or h                ; don't return with zero flag set.
    6052   00:DA8D  C9                         ret                 ; didn't find one.
    6053   00:DA8E  00 00               skptr  defw 0              ; search pointer.
    6054   00:DA90                      
    6055   00:DA90  DD 7E 00            coltyp ld a,(ix+0)         ; current sprite type.
    6056   00:DA93  B8                         cp b                ; seeking sprite of same type?
    6057   00:DA94  28 27                      jr z,colty1         ; yes, need to check we're not detecting ourselves.
    6058   00:DA96  11 08 00            colty0 ld de,X             ; distance to x position in table.
    6059   00:DA99  19                         add hl,de           ; point to coords.
    6060   00:DA9A  5E                         ld e,(hl)           ; fetch x coordinate.
    6061   00:DA9B  23                         inc hl              ; now point to y.
    6062   00:DA9C  56                         ld d,(hl)           ; that's y coordinate.
    6063   00:DA9D                      
    6064   00:DA9D                      ; Drop into collision detection.
    6065   00:DA9D                      
    6066   00:DA9D  DD 7E 08            colc16 ld a,(ix+X)         ; x coord.
    6067   00:DAA0  93                         sub e               ; subtract x.
    6068   00:DAA1  30 02                      jr nc,colc1a        ; result is positive.
    6069   00:DAA3  ED 44                      neg                 ; make negative positive.
    6070   00:DAA5  FE 10               colc1a cp COLDIST +1              ; within x range?
    6071   00:DAA7  30 D1                      jr nc,sktyp1        ; no - they've missed.
    6072   00:DAA9  4F                         ld c,a              ; store difference.
    6073   00:DAAA  DD 7E 09                   ld a,(ix+Y)         ; y coord.
    6074   00:DAAD  92                         sub d               ; subtract y.
    6075   00:DAAE  30 02                      jr nc,colc1b        ; result is positive.
    6076   00:DAB0  ED 44                      neg                 ; make negative positive.
    6077   00:DAB2  FE 10               colc1b cp 16               ; within y range?
    6078   00:DAB4  30 C4                      jr nc,sktyp1        ; no - they've missed.
    6079   00:DAB6  81                         add a,c             ; add x difference.
    6080   00:DAB7  FE 1A                      cp 26               ; only 5 corner pixels touching?
    6081   00:DAB9  D8                         ret c               ; carry set if there's a collision.
    6082   00:DABA  C3 7A DA                   jp sktyp1           ; try next sprite in table.
    6083   00:DABD                      
    6084   00:DABD  DD E5               colty1 push ix             ; base sprite address onto stack.
    6085   00:DABF  D1                         pop de              ; pop it into de.
    6086   00:DAC0  EB                         ex de,hl            ; flip hl into de.
    6087   00:DAC1  ED 52                      sbc hl,de           ; compare the two.
    6088   00:DAC3  EB                         ex de,hl            ; restore hl.
    6089   00:DAC4  28 B4                      jr z,sktyp1         ; addresses are identical.
    6090   00:DAC6  C3 96 DA                   jp colty0
    6091   00:DAC9                      
    6092   00:DAC9                      ; Display number.
    6093   00:DAC9                      
    6094   00:DAC9  01 DA DA            disply ld bc,displ0        ; display workspace.
    6095   00:DACC  CD D6 D0                   call num2ch         ; convert accumulator to string.
    6096   00:DACF  0B                  displ1 dec bc              ; back one character.
    6097   00:DAD0  0A                         ld a,(bc)           ; fetch digit.
    6098   00:DAD1  F6 80                      or 128              ; insert end marker.
    6099   00:DAD3  02                         ld (bc),a           ; new value.
    6100   00:DAD4  21 DA DA                   ld hl,displ0        ; display space.
    6101   00:DAD7  C3 26 D7                   jp dmsg3            ; display the string.
    6102   00:DADA  00 00 00 8D         displ0 defb 0,0,0,13+128
    6103   00:DADE                      
    6104   00:DADE                      
    6105   00:DADE                      ; Initialise screen.
    6106   00:DADE                      
    6107   00:DADE  3A D3 DE            initsc ld a,(roomtb)       ; whereabouts in the map are we?
    6108   00:DAE1  CD EB DA                   call tstsc          ; find displacement.
    6109   00:DAE4  FE FF                      cp 255              ; is it valid?
    6110   00:DAE6  C8                         ret z               ; no, it's rubbish.
    6111   00:DAE7  32 38 C9                   ld (scno),a         ; store new room number.
    6112   00:DAEA  C9                         ret
    6113   00:DAEB                      
    6114   00:DAEB                      ; Test screen.
    6115   00:DAEB                      
    6116   00:DAEB  21 03 7B            tstsc  ld hl,mapdat-MAPWID ; start of map data, subtract width for negative.
    6117   00:DAEE  47                         ld b,a              ; store room in b for now.
    6118   00:DAEF  C6 09                      add a,MAPWID        ; add width in case we're negative.
    6119   00:DAF1  5F                         ld e,a              ; screen into e.
    6120   00:DAF2  16 00                      ld d,0              ; zeroise d.
    6121   00:DAF4  19                         add hl,de           ; add displacement to map data.
    6122   00:DAF5  7E                         ld a,(hl)           ; find room number there.
    6123   00:DAF6  C9                         ret
    6124   00:DAF7                      
    6125   00:DAF7                      ; Screen left.
    6126   00:DAF7                      
    6127   00:DAF7  3A D3 DE            scrl   ld a,(roomtb)       ; present room table pointer.
    6128   00:DAFA  3D                         dec a               ; room left.
    6129   00:DAFB  CD EB DA            scrl0  call tstsc          ; test screen.
    6130   00:DAFE  3C                         inc a               ; is there a screen this way?
    6131   00:DAFF  C8                         ret z               ; no, return to loop.
    6132   00:DB00  78                         ld a,b              ; restore room displacement.
    6133   00:DB01  32 D3 DE                   ld (roomtb),a       ; new room table position.
    6134   00:DB04  CD DE DA            scrl1  call initsc         ; set new screen.
    6135   00:DB07  21 5B C9                   ld hl,restfl        ; restart screen flag.
    6136   00:DB0A  36 02                      ld (hl),2           ; set it.
    6137   00:DB0C  C9                         ret
    6138   00:DB0D  3A D3 DE            scrr   ld a,(roomtb)       ; room table pointer.
    6139   00:DB10  3C                         inc a               ; room right.
    6140   00:DB11  18 E8                      jr scrl0
    6141   00:DB13  3A D3 DE            scru   ld a,(roomtb)       ; room table pointer.
    6142   00:DB16  D6 09                      sub MAPWID          ; room up.
    6143   00:DB18  18 E1                      jr scrl0
    6144   00:DB1A  3A D3 DE            scrd   ld a,(roomtb)       ; room table pointer.
    6145   00:DB1D  C6 09                      add a,MAPWID        ; room down.
    6146   00:DB1F  18 DA                      jr scrl0
    6147   00:DB21                      
    6148   00:DB21                      ; Jump to new screen.
    6149   00:DB21                      
    6150   00:DB21  21 0C 7B            nwscr  ld hl,mapdat        ; start of map data.
    6151   00:DB24  01 00 50                   ld bc,256*80        ; zero room count, 80 to search.
    6152   00:DB27  BE                  nwscr0 cp (hl)             ; have we found a match for screen?
    6153   00:DB28  28 05                      jr z,nwscr1         ; yes, set new point in map.
    6154   00:DB2A  23                         inc hl              ; next room.
    6155   00:DB2B  0C                         inc c               ; count rooms.
    6156   00:DB2C  10 F9                      djnz nwscr0         ; keep looking.
    6157   00:DB2E  C9                         ret
    6158   00:DB2F  79                  nwscr1 ld a,c              ; room displacement.
    6159   00:DB30  32 D3 DE                   ld (roomtb),a       ; set the map position.
    6160   00:DB33  18 CF                      jr scrl1            ; draw new room.
    6161   00:DB35                      
    6162   00:DB35                      
    6163   00:DB35                      ; Gravity processing.
    6164   00:DB35                      
    6165   00:DB35  DD 7E 0D            grav   ld a,(ix+13)        ; in-air flag.
    6166   00:DB38  A7                         and a               ; are we in the air?
    6167   00:DB39  C8                         ret z               ; no we are not.
    6168   00:DB3A  3C                         inc a               ; increment it.
    6169   00:DB3B  CA 85 DB                   jp z,ogrv           ; set to 255, use old gravity.
    6170   00:DB3E  DD 77 0D                   ld (ix+13),a        ; write new setting.
    6171   00:DB41  1F                         rra                 ; every other frame.
    6172   00:DB42  30 0A                      jr nc,grav0         ; don't apply gravity this time.
    6173   00:DB44  DD 7E 0E                   ld a,(ix+14)        ; pixels to move.
    6174   00:DB47  FE 10                      cp 16               ; reached maximum?
    6175   00:DB49  28 03                      jr z,grav0          ; yes, continue.
    6176   00:DB4B  DD 34 0E                   inc (ix+14)         ; slow down ascent/speed up fall.
    6177   00:DB4E  DD 7E 0E            grav0  ld a,(ix+14)        ; get distance to move.
    6178   00:DB51  CB 2F                      sra a               ; divide by 2.
    6179   00:DB53  A7                         and a               ; any movement required?
    6180   00:DB54  C8                         ret z               ; no, not this time.
    6181   00:DB55  FE 80                      cp 128              ; is it up or down?
    6182   00:DB57  30 0C                      jr nc,gravu         ; it's up.
    6183   00:DB59  47                  gravd  ld b,a              ; set pixels to move.
    6184   00:DB5A  CD 10 D5            gravd0 call cangd          ; can we go down?
    6185   00:DB5D  20 15                      jr nz,gravst        ; can't move down, so stop.
    6186   00:DB5F  DD 34 08                   inc (ix+8)          ; adjust new x coord.
    6187   00:DB62  10 F6                      djnz gravd0
    6188   00:DB64  C9                         ret
    6189   00:DB65  ED 44               gravu  neg                 ; flip the sign so it's positive.
    6190   00:DB67  47                         ld b,a              ; set pixels to move.
    6191   00:DB68  CD ED D4            gravu0 call cangu          ; can we go up?
    6192   00:DB6B  C2 0C DC                   jp nz,ifalls        ; can't move up, go down next.
    6193   00:DB6E  DD 35 08                   dec (ix+8)          ; adjust new x coord.
    6194   00:DB71  10 F5                      djnz gravu0
    6195   00:DB73  C9                         ret
    6196   00:DB74  DD 7E 0E            gravst ld a,(ix+14)        ; jump pointer high.
    6197   00:DB77  DD 36 0D 00                ld (ix+13),0        ; reset falling flag.
    6198   00:DB7B  DD 36 0E 00                ld (ix+14),0        ; store new speed.
    6199   00:DB7F  FE 08                      cp 8                ; was speed the maximum?
    6200   00:DB81  CA 8A 86            evftf  jp z,evnt15         ; yes, fallen too far.
    6201   00:DB84  C9                         ret
    6202   00:DB85                      
    6203   00:DB85                      ; Old gravity processing for compatibility with Spectrum versions 4.6 and 4.7.
    6204   00:DB85                      
    6205   00:DB85  DD 5E 0E            ogrv   ld e,(ix+14)        ; get index to table.
    6206   00:DB88  16 00                      ld d,0              ; no high byte.
    6207   00:DB8A  21 D0 C8                   ld hl,jtab          ; jump table.
    6208   00:DB8D  19                         add hl,de           ; hl points to jump value.
    6209   00:DB8E  7E                         ld a,(hl)           ; pixels to move.
    6210   00:DB8F  FE 63                      cp 99               ; reached the end?
    6211   00:DB91  20 04                      jr nz,ogrv0         ; no, continue.
    6212   00:DB93  2B                         dec hl              ; go back to previous value.
    6213   00:DB94  7E                         ld a,(hl)           ; fetch that from table.
    6214   00:DB95  18 03                      jr ogrv1
    6215   00:DB97  DD 34 0E            ogrv0  inc (ix+14)         ; point to next table entry.
    6216   00:DB9A  A7                  ogrv1  and a               ; any movement required?
    6217   00:DB9B  C8                         ret z               ; no, not this time.
    6218   00:DB9C  FE 80                      cp 128              ; is it up or down?
    6219   00:DB9E  30 0C                      jr nc,ogrvu         ; it's up.
    6220   00:DBA0  47                  ogrvd  ld b,a              ; set pixels to move.
    6221   00:DBA1  CD 10 D5            ogrvd0 call cangd          ; can we go down?
    6222   00:DBA4  20 14                      jr nz,ogrvst        ; can't move down, so stop.
    6223   00:DBA6  DD 34 08                   inc (ix+8)          ; adjust new x coord.
    6224   00:DBA9  10 F6                      djnz ogrvd0
    6225   00:DBAB  C9                         ret
    6226   00:DBAC  ED 44               ogrvu  neg                 ; flip the sign so it's positive.
    6227   00:DBAE  47                         ld b,a              ; set pixels to move.
    6228   00:DBAF  CD ED D4            ogrvu0 call cangu          ; can we go up?
    6229   00:DBB2  20 1D                      jr nz,ogrv2         ; can't move up, go down next.
    6230   00:DBB4  DD 35 08                   dec (ix+8)          ; adjust new x coord.
    6231   00:DBB7  10 F6                      djnz ogrvu0
    6232   00:DBB9  C9                         ret
    6233   00:DBBA  DD 5E 0E            ogrvst ld e,(ix+14)        ; get index to table.
    6234   00:DBBD  16 00                      ld d,0              ; no high byte.
    6235   00:DBBF  21 D0 C8                   ld hl,jtab          ; jump table.
    6236   00:DBC2  19                         add hl,de           ; hl points to jump value.
    6237   00:DBC3  7E                         ld a,(hl)           ; fetch byte from table.
    6238   00:DBC4  FE 63                      cp 99               ; is it the end marker?
    6239   00:DBC6  DD 36 0D 00                ld (ix+13),0        ; reset jump flag.
    6240   00:DBCA  DD 36 0E 00                ld (ix+14),0        ; reset pointer.
    6241   00:DBCE  C3 81 DB                   jp evftf
    6242   00:DBD1  21 D0 C8            ogrv2  ld hl,jtab          ; jump table.
    6243   00:DBD4  06 00                      ld b,0              ; offset into table.
    6244   00:DBD6  7E                  ogrv4  ld a,(hl)           ; fetch table byte.
    6245   00:DBD7  FE 64                      cp 100              ; hit end or downward move?
    6246   00:DBD9  38 04                      jr c,ogrv3          ; yes.
    6247   00:DBDB  23                         inc hl              ; next byte of table.
    6248   00:DBDC  04                         inc b               ; next offset.
    6249   00:DBDD  18 F7                      jr ogrv4            ; keep going until we find crest/end of table.
    6250   00:DBDF  DD 70 0E            ogrv3  ld (ix+14),b        ; set next table offset.
    6251   00:DBE2  C9                         ret
    6252   00:DBE3                      
    6253   00:DBE3                      ; Initiate fall check.
    6254   00:DBE3                      
    6255   00:DBE3  DD 7E 0D            ifall  ld a,(ix+13)        ; jump pointer flag.
    6256   00:DBE6  A7                         and a               ; are we in the air?
    6257   00:DBE7  C0                         ret nz              ; if set, we're already in the air.
    6258   00:DBE8  DD 66 09                   ld h,(ix+9)         ; y coordinate.
    6259   00:DBEB  3E 10                      ld a,COLDIST + 1            ; look down 16 pixels.
    6260   00:DBED  DD 86 08                   add a,(ix+8)        ; add x coordinate.
    6261   00:DBF0  6F                         ld l,a              ; coords in hl.
    6262   00:DBF1  22 5E C9                   ld (dispx),hl       ; set up test coordinates.
    6263   00:DBF4  CD 39 D6                   call tstbl          ; get map address.
    6264   00:DBF7  CD 6E D5                   call plchk          ; block, platform check.
    6265   00:DBFA  C0                         ret nz              ; it's solid, don't fall.
    6266   00:DBFB  23                         inc hl              ; look right one cell.
    6267   00:DBFC  CD 6E D5                   call plchk          ; block, platform check.
    6268   00:DBFF  C0                         ret nz              ; it's solid, don't fall.
    6269   00:DC00  3A 5F C9                   ld a,(dispy)        ; y coordinate.
    6270   00:DC03  E6 07                      and 7               ; position straddling block cells.
    6271   00:DC05  28 05                      jr z,ifalls         ; no more checks needed.
    6272   00:DC07  23                         inc hl              ; look to third cell.
    6273   00:DC08  CD 6E D5                   call plchk          ; block, platform check.
    6274   00:DC0B  C0                         ret nz              ; it's solid, don't fall.
    6275   00:DC0C  DD 34 0D            ifalls inc (ix+13)         ; set in air flag.
    6276   00:DC0F  DD 36 0E 00                ld (ix+14),0        ; initial speed = 0.
    6277   00:DC13  C9                         ret
    6278   00:DC14  DD 7E 0D            tfall  ld a,(ix+13)        ; jump pointer flag.
    6279   00:DC17  A7                         and a               ; are we in the air?
    6280   00:DC18  C0                         ret nz              ; if set, we're already in the air.
    6281   00:DC19  CD E3 DB                   call ifall          ; do fall test.
    6282   00:DC1C  DD 7E 0D                   ld a,(ix+13)        ; get falling flag.
    6283   00:DC1F  A7                         and a               ; is it set?
    6284   00:DC20  C8                         ret z               ; no.
    6285   00:DC21  DD 36 0D FF                ld (ix+13),255      ; we're using the table.
    6286   00:DC25  18 AA                      jr ogrv2            ; find position in table.
    6287   00:DC27                      
    6288   00:DC27                      
    6289   00:DC27                      ; Get frame data for a particular sprite.
    6290   00:DC27                      
    6291   00:DC27  07                  gfrm   rlca                ; multiple of 2.
    6292   00:DC28  5F                         ld e,a              ; copy to de.
    6293   00:DC29  16 00                      ld d,0              ; no high byte as max sprite is 128.
    6294   00:DC2B  2A 65 C9                   ld hl,(frmptr)      ; frames used by game.
    6295   00:DC2E  19                         add hl,de           ; point to frame start.
    6296   00:DC2F  C9                         ret
    6297   00:DC30                      
    6298   00:DC30                      ; Find sprite list for current room.
    6299   00:DC30                      
    6300   00:DC30  3A 38 C9            sprlst ld a,(scno)         ; screen number.
    6301   00:DC33  2A 6F C9            sprls2 ld hl,(nmeptr)      ; pointer to enemies.
    6302   00:DC36  47                         ld b,a              ; loop counter in b register.
    6303   00:DC37  A7                         and a               ; is it the first screen?
    6304   00:DC38  C8                         ret z               ; yes, don't need to search data.
    6305   00:DC39  11 04 00                   ld de,NMESIZ        ; bytes to skip.
    6306   00:DC3C  7E                  sprls1 ld a,(hl)           ; fetch type of sprite.
    6307   00:DC3D  3C                         inc a               ; is it an end marker?
    6308   00:DC3E  28 03                      jr z,sprls0         ; yes, end of this room.
    6309   00:DC40  19                         add hl,de           ; point to next sprite in list.
    6310   00:DC41  18 F9                      jr sprls1           ; continue until end of room.
    6311   00:DC43  23                  sprls0 inc hl              ; point to start of next screen.
    6312   00:DC44  10 F6                      djnz sprls1         ; continue until room found.
    6313   00:DC46  C9                         ret
    6314   00:DC47                      
    6315   00:DC47                      
    6316   00:DC47                      ; Clear all but a single player sprite.
    6317   00:DC47                      
    6318   00:DC47  06 0C               nspr   ld b,NUMSPR         ; sprite slots in table.
    6319   00:DC49  DD 21 F6 DD                ld ix,sprtab        ; sprite table.
    6320   00:DC4D  11 11 00                   ld de,TABSIZ        ; distance to next odd/even entry.
    6321   00:DC50  DD 7E 00            nspr0  ld a,(ix+0)         ; fetch sprite type.
    6322   00:DC53  A7                         and a               ; is it a player?
    6323   00:DC54  28 0D                      jr z,nspr1          ; yes, keep this one.
    6324   00:DC56  DD 36 00 FF                ld (ix+0),255       ; delete sprite.
    6325   00:DC5A  DD 36 05 FF                ld (ix+5),255       ; remove next type.
    6326   00:DC5E  DD 19                      add ix,de           ; next sprite.
    6327   00:DC60  10 EE                      djnz nspr0          ; one less space in the table.
    6328   00:DC62  C9                         ret
    6329   00:DC63  DD 36 00 FF         nspr1  ld (ix+0),255       ; delete sprite.
    6330   00:DC67  DD 19                      add ix,de           ; point to next sprite.
    6331   00:DC69  10 01                      djnz nspr2          ; one less to do.
    6332   00:DC6B  C9                         ret
    6333   00:DC6C  DD 36 00 FF         nspr2  ld (ix+0),255       ; delete sprite.
    6334   00:DC70  DD 36 05 FF                ld (ix+5),255       ; remove next type.
    6335   00:DC74  DD 19                      add ix,de           ; next sprite.
    6336   00:DC76  10 F4                      djnz nspr2          ; one less space in the table.
    6337   00:DC78  C9                         ret
    6338   00:DC79                      
    6339   00:DC79                      
    6340   00:DC79                      ; Two initialisation routines.
    6341   00:DC79                      ; Initialise sprites - copy everything from list to table.
    6342   00:DC79                      
    6343   00:DC79  06 0C               ispr   ld b,NUMSPR         ; sprite slots in table.
    6344   00:DC7B  DD 21 F6 DD                ld ix,sprtab        ; sprite table.
    6345   00:DC7F  7E                  ispr2  ld a,(hl)           ; fetch byte.
    6346   00:DC80  FE FF                      cp 255              ; is it an end marker?
    6347   00:DC82  C8                         ret z               ; yes, no more to do.
    6348   00:DC83  DD 7E 00            ispr1  ld a,(ix+0)         ; fetch sprite type.
    6349   00:DC86  FE FF                      cp 255              ; is it enabled yet?
    6350   00:DC88  20 07                      jr nz,ispr4         ; yes, try another slot.
    6351   00:DC8A  DD 7E 05                   ld a,(ix+5)         ; next type.
    6352   00:DC8D  FE FF                      cp 255              ; is it enabled yet?
    6353   00:DC8F  28 08                      jr z,ispr3          ; no, process this one.
    6354   00:DC91  11 11 00            ispr4  ld de,TABSIZ        ; distance to next odd/even entry.
    6355   00:DC94  DD 19                      add ix,de           ; next sprite.
    6356   00:DC96  10 EB                      djnz ispr1          ; repeat for remaining sprites.
    6357   00:DC98  C9                         ret                 ; no more room in table.
    6358   00:DC99  CD CE DC            ispr3  call cpsp           ; initialise a sprite.
    6359   00:DC9C  10 E1                      djnz ispr2          ; one less space in the table.
    6360   00:DC9E  C9                         ret
    6361   00:DC9F                      
    6362   00:DC9F                      ; Initialise sprites - but not player, we're keeping the old one.
    6363   00:DC9F                      
    6364   00:DC9F  06 0C               kspr   ld b,NUMSPR         ; sprite slots in table.
    6365   00:DCA1  DD 21 F6 DD                ld ix,sprtab        ; sprite table.
    6366   00:DCA5  7E                  kspr2  ld a,(hl)           ; fetch byte.
    6367   00:DCA6  FE FF                      cp 255              ; is it an end marker?
    6368   00:DCA8  C8                         ret z               ; yes, no more to do.
    6369   00:DCA9  A7                         and a               ; is it a player sprite?
    6370   00:DCAA  20 06                      jr nz,kspr1         ; no, add to table as normal.
    6371   00:DCAC  11 04 00                   ld de,NMESIZ        ; distance to next item in list.
    6372   00:DCAF  19                         add hl,de           ; point to next one.
    6373   00:DCB0  18 F3                      jr kspr2
    6374   00:DCB2  DD 7E 00            kspr1  ld a,(ix+0)         ; fetch sprite type.
    6375   00:DCB5  FE FF                      cp 255              ; is it enabled yet?
    6376   00:DCB7  20 07                      jr nz,kspr4         ; yes, try another slot.
    6377   00:DCB9  DD 7E 05                   ld a,(ix+5)         ; next type.
    6378   00:DCBC  FE FF                      cp 255              ; is it enabled yet?
    6379   00:DCBE  28 08                      jr z,kspr3          ; no, process this one.
    6380   00:DCC0  11 11 00            kspr4  ld de,TABSIZ        ; distance to next odd/even entry.
    6381   00:DCC3  DD 19                      add ix,de           ; next sprite.
    6382   00:DCC5  10 EB                      djnz kspr1          ; repeat for remaining sprites.
    6383   00:DCC7  C9                         ret                 ; no more room in table.
    6384   00:DCC8  CD CE DC            kspr3  call cpsp           ; copy sprite to table.
    6385   00:DCCB  10 D8                      djnz kspr2          ; one less space in the table.
    6386   00:DCCD  C9                         ret
    6387   00:DCCE                      
    6388   00:DCCE                      ; Copy sprite from list to table.
    6389   00:DCCE                      
    6390   00:DCCE  7E                  cpsp   ld a,(hl)           ; fetch byte from table.
    6391   00:DCCF  DD 77 00                   ld (ix+0),a         ; set up type.
    6392   00:DCD2  DD 77 05                   ld (ix+PAM1ST),a    ; set up type.
    6393   00:DCD5  23                         inc hl              ; move to next byte.
    6394   00:DCD6  7E                         ld a,(hl)           ; fetch byte from table.
    6395   00:DCD7  DD 77 06                   ld (ix+6),a         ; set up image.
    6396   00:DCDA  23                         inc hl              ; move to next byte.
    6397   00:DCDB  7E                         ld a,(hl)           ; fetch byte from table.
    6398   00:DCDC  DD 36 03 C8                ld (ix+3),200       ; set initial coordinate off screen.
    6399   00:DCE0  DD 77 08                   ld (ix+8),a         ; set up coordinate.
    6400   00:DCE3  23                         inc hl              ; move to next byte.
    6401   00:DCE4  7E                         ld a,(hl)           ; fetch byte from table.
    6402   00:DCE5  DD 77 09                   ld (ix+9),a         ; set up coordinate.
    6403   00:DCE8  23                         inc hl              ; move to next byte.
    6404   00:DCE9  AF                         xor a               ; zeroes in accumulator.
    6405   00:DCEA  DD 77 07                   ld (ix+7),a         ; reset frame number.
    6406   00:DCED  DD 77 0A                   ld (ix+10),a        ; reset direction.
    6407   00:DCF0                      ;       ld (ix+12),a        ; reset parameter B.
    6408   00:DCF0  DD 77 0D                   ld (ix+13),a        ; reset jump pointer low.
    6409   00:DCF3  DD 77 0E                   ld (ix+14),a        ; reset jump pointer high.
    6410   00:DCF6  DD 36 10 FF                ld (ix+16),255      ; reset data pointer to auto-restore.
    6411   00:DCFA  DD E5                      push ix             ; store ix pair.
    6412   00:DCFC  E5                         push hl             ; store hl pair.
    6413   00:DCFD  C5                         push bc
    6414   00:DCFE  CD B4 7F            evis0  call evnt09         ; perform event.
    6415   00:DD01  C1                         pop bc
    6416   00:DD02  E1                         pop hl              ; restore hl.
    6417   00:DD03  DD E1                      pop ix              ; restore ix.
    6418   00:DD05  11 11 00                   ld de,TABSIZ        ; distance to next odd/even entry.
    6419   00:DD08  DD 19                      add ix,de           ; next sprite.
    6420   00:DD0A  C9                         ret
    6421   00:DD0B                      
    6422   00:DD0B                      ; Clear the play area window.
    6423   00:DD0B                      
    6424   00:DD0B  2A 2F C9            clw    ld hl,(wintop)      ; get top-left coordinates of window.
    6425   00:DD0E  22 5F C9                   ld (dispy),hl       ; put into dispx for calculation.
    6426   00:DD11                      
    6427   00:DD11  CD 2E D3                   call gprad          ; get address of top-left byte of window in VRAM.
    6428   00:DD14  EB                         ex de,hl            ; store in HL.
    6429   00:DD15  3A 31 C9                   ld a,(winhgt)       ; get height of window...
    6430   00:DD18  87                         add a,a             ; ...in pixels (winhgt * 8).
    6431   00:DD19  87                         add a,a
    6432   00:DD1A  87                         add a,a
    6433   00:DD1B  47                         ld b,a              ; initialize vertical counter.
    6434   00:DD1C  3A 32 C9                   ld a,(winwid)       ; get width of window in bytes.
    6435   00:DD1F  4F                         ld c,a              ; store initial value for horizontal counter.
    6436   00:DD20  C5                  clw0   push bc             ; store vertical counter and initial value for horizontal counter.
    6437   00:DD21  41                         ld b,c              ; initialize horizontal counter.
    6438   00:DD22  5D                         ld e,l              ; store address of leftmost byte of window in RAM.
    6439   00:DD23  54                         ld d,h
    6440   00:DD24                      clw1
    6441   00:DD24                      IF XFLAG = 1 OR XFLAG = 2
    6442   00:DD24  E5                  	push hl
    6443   00:DD25  7C                  	ld a,h
    6444   00:DD26  D6 70               	sub $70
    6445   00:DD28  CB 3F               	srl a
    6446   00:DD2A  CB 3F               	srl a
    6447   00:DD2C  CB 3F               	srl a
    6448   00:DD2E  E6 03               	and 3
    6449   00:DD30  C6 1C               	add a,XMODE
    6450   00:DD32  D3 20               	out (XPORT),a
    6451   00:DD34  7C                  	ld a,h
    6452   00:DD35  E6 07               	and $07
    6453   00:DD37  F6 70               	or $70
    6454   00:DD39  67                  	ld h,a
    6455   00:DD3A                      ENDIF
    6456   00:DD3A  3E FF                      ld a,FILL       ; get background color.
    6457   00:DD3C  77                         ld (hl),a           ; write background color to VRAM.
    6458   00:DD3D                      
    6459   00:DD3D                      IF XFLAG = 1 OR XFLAG = 2
    6460   00:DD3D  E1                  	pop hl
    6461   00:DD3E                      ENDIF
    6462   00:DD3E                      
    6463   00:DD3E  23                         inc hl              ; advance 1 byte to the right.
    6464   00:DD3F  10 E3                      djnz clw1           ; repeat until window row filled.
    6465   00:DD41  21 20 00                   ld hl,32            ; advance to leftmost byte of next row of window.
    6466   00:DD44  19                         add hl,de
    6467   00:DD45  C1                         pop bc              ; restore vertical counter and initial value for horizontal counter.
    6468   00:DD46  10 D8                      djnz clw0           ; repeat until all window rows filled.
    6469   00:DD48                      
    6470   00:DD48  2A 2F C9                   ld hl,(wintop)      ; get coordinates of window.
    6471   00:DD4B  22 53 C9                   ld (charx),hl       ; put into display position.
    6472   00:DD4E  C9                         ret
    6473   00:DD4F                      
    6474   00:DD4F                      ;<cpc>
    6475   00:DD4F                      ;; Redefine key.
    6476   00:DD4F                      ;; Go through table of 80 keys testing each one.
    6477   00:DD4F                      ;; Return code for first detected keypress.
    6478   00:DD4F                      ;
    6479   00:DD4F                      ;redky  call debkey         ; debounce previous key.
    6480   00:DD4F                             ;ld b,80             ; codes to check.
    6481   00:DD4F                      ;redky0 ld a,b              ; put code in accumulator.
    6482   00:DD4F                             ;dec a               ; test 0 - 79, not 1 - 80.
    6483   00:DD4F                             ;call 47902          ; check if key pressed.
    6484   00:DD4F                             ;jr nz,redky1        ; pressed.
    6485   00:DD4F                             ;djnz redky0         ; repeat until we've scanned them all.
    6486   00:DD4F                             ;jr redky            ; repeat until something is pressed.
    6487   00:DD4F                      ;redky1 dec b               ; always one less.
    6488   00:DD4F                             ;ret
    6489   00:DD4F                      ;</cpc>
    6490   00:DD4F                      
    6491   00:DD4F                      ; Effects code.
    6492   00:DD4F                      ; Ticker routine is called 25 times per second.
    6493   00:DD4F                      
    6494   00:DD4F  C9                  scrly	ret
    6495   00:DD50  A6 CC                      defw txtscr         ; get screen address.
    6496   00:DD52                      
    6497   00:DD52                      ; Scroll 8 lines txtwid
    6498   00:DD52                      
    6499   00:DD52  06 08               	ld b,8		; 8 pixel rows.
    6500   00:DD54  E5                  	push hl		; store screen address.
    6501   00:DD55  C5                  scrly1	push bc		; store rows on stack.
    6502   00:DD56  E5                  	push hl		; store screen address.
    6503   00:DD57                      
    6504   00:DD57                      ; Scroll 1 line txtwid
    6505   00:DD57                      
    6506   00:DD57  3A A1 CC            	ld a,(txtwid)	; characters wide.
    6507   00:DD5A  47                  	ld b,a		; put into the loop counter.
    6508   00:DD5B                      
    6509   00:DD5B                      ;	IF GFLAG
    6510   00:DD5B                      ;	  xor a		; reset carry flag and msbit of accumulator.
    6511   00:DD5B                      ;	ELSE
    6512   00:DD5B  A7                  	  and a		; reset carry flag.
    6513   00:DD5C                      ;	ENDIF
    6514   00:DD5C                      
    6515   00:DD5C                      scrly0
    6516   00:DD5C  CB 16               	rl (hl)		; rotate left.
    6517   00:DD5E                      
    6518   00:DD5E                      	IF GFLAG
    6519   00:DD5E  17                  	  rla		; in color mode, there are two bits to be transfered.
    6520   00:DD5F  CB 16               	  rl (hl)
    6521   00:DD61  1F                  	  rra
    6522   00:DD62                      	ENDIF
    6523   00:DD62                      
    6524   00:DD62  2D                  	dec l		; char left.
    6525   00:DD63  10 F7               	djnz scrly0	; repeat for width of ticker message.
    6526   00:DD65                      
    6527   00:DD65  E1                  	pop hl		; retrieve screen address from stack.
    6528   00:DD66  11 20 00            	ld de,32	; next row down.
    6529   00:DD69  19                  	add hl,de
    6530   00:DD6A  C1                  	pop bc		; retrieve row counter from stack.
    6531   00:DD6B  10 E8               	djnz scrly1	; repeat for all rows.
    6532   00:DD6D                      
    6533   00:DD6D                      ; Calculate character address
    6534   00:DD6D                      
    6535   00:DD6D  2A A2 CC            	ld hl,(txtpos)	; get text pointer.
    6536   00:DD70  7E                  	ld a,(hl)	; find character we're displaying.
    6537   00:DD71  E6 7F               	and %01111111	; remove end marker bit if applicable.
    6538   00:DD73  FE 0D               	cp 13		; is it newline?
    6539   00:DD75  20 02               	jr nz,scrly5	; no, it's okay.
    6540   00:DD77  3E 20               	ld a,32		; convert to a space instead.
    6541   00:DD79                      scrly5
    6542   00:DD79  07                  	rlca
    6543   00:DD7A  07                  	rlca
    6544   00:DD7B  07                  	rlca		; multiply by 8 to find char.
    6545   00:DD7C  47                  	ld b,a		; store shift in b.
    6546   00:DD7D  E6 03               	and 3		; keep within 768-byte range of font.
    6547   00:DD7F  57                  	ld d,a		; that's our high byte.
    6548   00:DD80                      
    6549   00:DD80  78                  	ld a,b		; restore the shift.
    6550   00:DD81  E6 F8               	and %11111000
    6551   00:DD83  5F                  	ld e,a
    6552   00:DD84                      
    6553   00:DD84  21 D0 C4            	ld hl,font-256	; font address.
    6554   00:DD87  19                  	add hl,de	; point to image of character.
    6555   00:DD88  EB                  	ex de,hl	; need the address in de.
    6556   00:DD89  E1                  	pop hl		; restore screen address.
    6557   00:DD8A                      
    6558   00:DD8A                      ; Add pixelrow on right side scroller
    6559   00:DD8A                      
    6560   00:DD8A  3A A0 CC            	ld a,(txtbit)
    6561   00:DD8D  4F                  	ld c,a
    6562   00:DD8E  06 08               	ld b,8
    6563   00:DD90  1A                  scrly3	ld a,(de)	; get image of char line.
    6564   00:DD91  A1                  	and c		; test relevant bit of char.
    6565   00:DD92                      
    6566   00:DD92                      	IF GFLAG
    6567   00:DD92  28 02               	  jr z,scrl3g	; not set - skip.
    6568   00:DD94  34                  	  inc (hl)	; set bit 1.
    6569   00:DD95  34                  	  inc (hl)
    6570   00:DD96  CB 09               scrl3g	  rrc c		; next bit of char to use.
    6571   00:DD98  1A                  	  ld a,(de)	; get image of char line.
    6572   00:DD99  A1                  	  and c		; test relevant bit of char.
    6573   00:DD9A                      	ENDIF
    6574   00:DD9A                      
    6575   00:DD9A  28 01               	jr z,scrly2	; not set - skip.
    6576   00:DD9C  34                  	inc (hl)	; set bit 0.
    6577   00:DD9D                      scrly2:
    6578   00:DD9D                      	IF GFLAG
    6579   00:DD9D  CB 01               	  rlc c		; restore mask position for next line.
    6580   00:DD9F                      	ENDIF
    6581   00:DD9F                      
    6582   00:DD9F  3E 20               	ld a,32		; next line of window hl+32
    6583   00:DDA1  85                  	add a,l
    6584   00:DDA2  6F                  	ld l,a
    6585   00:DDA3  3E 00               	ld a,0
    6586   00:DDA5  8C                  	adc h
    6587   00:DDA6  67                  	ld h,a
    6588   00:DDA7                      
    6589   00:DDA7  13                  	inc de		; next line of char de+1
    6590   00:DDA8  10 E6               	djnz scrly3
    6591   00:DDAA                      
    6592   00:DDAA  21 A0 CC                   ld hl,txtbit        ; bit of text to display.
    6593   00:DDAD  CB 0E                      rrc (hl)            ; next bit of char to use.
    6594   00:DDAF                          IF GFLAG
    6595   00:DDAF  CB 0E                      rrc (hl)            ; next bit of char to use.
    6596   00:DDB1                          ENDIF
    6597   00:DDB1  D0                         ret nc              ; not reached end of character yet.
    6598   00:DDB2                      
    6599   00:DDB2  2A A2 CC                   ld hl,(txtpos)      ; text pointer.
    6600   00:DDB5  7E                         ld a,(hl)           ; what was the character?
    6601   00:DDB6  23                         inc hl              ; next character in message.
    6602   00:DDB7  17                         rla                 ; end of message?
    6603   00:DDB8  30 03                      jr nc,scrly6        ; not yet - continue.
    6604   00:DDBA  2A A4 CC            scrly4 ld hl,(txtini)      ; start of scrolling message.
    6605   00:DDBD  22 A2 CC            scrly6 ld (txtpos),hl      ; new text pointer position.
    6606   00:DDC0  C9                         ret
    6607   00:DDC1                      
    6608   00:DDC1                      
    6609   00:DDC1  CD E4 D7            iscrly call preprt         ; set up display position.
    6610   00:DDC4                      
    6611   00:DDC4  21 0D 88                   ld hl,msgdat        ; text messages.
    6612   00:DDC7  78                         ld a,b              ; width.
    6613   00:DDC8  3D                         dec a               ; subtract one.
    6614   00:DDC9  FE 20                      cp 32               ; is it between 1 and 32?
    6615   00:DDCB                      ;<fix>
    6616   00:DDCB  3E C9                      ld a,201            ; code for ret.
    6617   00:DDCD                      ;</fix>
    6618   00:DDCD  30 0B                      jr nc,iscrl0        ; no, disable messages.
    6619   00:DDCF  79                         ld a,c              ; message number.
    6620   00:DDD0  50                         ld d,b              ; copy width to d.
    6621   00:DDD1  CD F4 D7                   call getwrd         ; find message start.
    6622   00:DDD4  42                         ld b,d              ; restore width to b register.
    6623   00:DDD5  22 A4 CC                   ld (txtini),hl      ; set initial text position.
    6624   00:DDD8  3E 2A                      ld a,42             ; code for ld hl,(nn).
    6625   00:DDDA  32 4F DD            iscrl0 ld (scrly),a        ; enable/disable scrolling routine.
    6626   00:DDDD                      
    6627   00:DDDD  CD E4 D7                   call preprt         ; set up display position.
    6628   00:DDE0                      
    6629   00:DDE0  CD 2E D3                   call gprad          ; get print address.
    6630   00:DDE3  68                         ld l,b              ; width in b so copy to hl.
    6631   00:DDE4  26 00                      ld h,0              ; no high byte.
    6632   00:DDE6  2B                         dec hl              ; width minus one.
    6633   00:DDE7  19                         add hl,de           ; add width.
    6634   00:DDE8  22 A6 CC                   ld (txtscr),hl      ; set text screen address.
    6635   00:DDEB  78                         ld a,b              ; width.
    6636   00:DDEC  32 A1 CC                   ld (txtwid),a       ; set width in working storage.
    6637   00:DDEF  21 A0 CC                   ld hl,txtbit        ; bit of text to display.
    6638   00:DDF2  36 80                      ld (hl),%10000000   ; start with leftmost bit.
    6639   00:DDF4  18 C4                      jr scrly4
    6640   00:DDF6                      
    6641   00:DDF6                      IF CRFLAG = 1
    6642   00:DDF6                    ~ crumble
    6643   00:DDF6                    ~ ;	ld a,(vard)
    6644   00:DDF6                    ~ ;	and 03h
    6645   00:DDF6                    ~ ;	ret nz
    6646   00:DDF6                    ~ 	ld h,(ix+09h)
    6647   00:DDF6                    ~ 	ld a,(ix+08h)
    6648   00:DDF6                    ~ 	add COLDIST+1
    6649   00:DDF6                    ~ 	ld l,a
    6650   00:DDF6                    ~ 	ld (dispx),hl
    6651   00:DDF6                    ~ 	and 06h
    6652   00:DDF6                    ~ 	ret nz
    6653   00:DDF6                    ~ 	push hl
    6654   00:DDF6                    ~ 	call tstbl
    6655   00:DDF6                    ~ 	pop de
    6656   00:DDF6                    ~ 	ld a,e
    6657   00:DDF6                    ~ 	rra
    6658   00:DDF6                    ~ 	rra
    6659   00:DDF6                    ~ 	rra
    6660   00:DDF6                    ~ 	and 1fh
    6661   00:DDF6                    ~ 	ld e,a
    6662   00:DDF6                    ~ 	ld a,d
    6663   00:DDF6                    ~ 	rra
    6664   00:DDF6                    ~ 	rra
    6665   00:DDF6                    ~ 	rra
    6666   00:DDF6                    ~ 	and 1fh
    6667   00:DDF6                    ~ 	ld d,a
    6668   00:DDF6                    ~ 	ld (dispx),de
    6669   00:DDF6                    ~ 	ld a,(hl)
    6670   00:DDF6                    ~ 	cp 09h
    6671   00:DDF6                    ~ 	call nc,crumble5	; 7a55
    6672   00:DDF6                    ~ crumble1
    6673   00:DDF6                    ~ 	ld a,(dispy)
    6674   00:DDF6                    ~ 	inc a
    6675   00:DDF6                    ~ 	ld (dispy),a
    6676   00:DDF6                    ~ 	inc hl
    6677   00:DDF6                    ~ 	ld a,(hl)
    6678   00:DDF6                    ~ 	cp 09h
    6679   00:DDF6                    ~ 	call nc,crumble5	; 7a55
    6680   00:DDF6                    ~ crumble2
    6681   00:DDF6                    ~ 	ld a,(dispy)
    6682   00:DDF6                    ~ 	inc a
    6683   00:DDF6                    ~ 	ld (dispy),a
    6684   00:DDF6                    ~ 	inc hl
    6685   00:DDF6                    ~ 	ld a,(ix+09h)
    6686   00:DDF6                    ~ 	and 07h
    6687   00:DDF6                    ~ 	ret z
    6688   00:DDF6                    ~ 	ld a,(hl)
    6689   00:DDF6                    ~ 	cp 09h
    6690   00:DDF6                    ~ 	call nc,crumble5        ; 7a55
    6691   00:DDF6                    ~ crumble3
    6692   00:DDF6                    ~ 	ret
    6693   00:DDF6                    ~ 
    6694   00:DDF6                    ~ crumble5			; 7a55
    6695   00:DDF6                    ~ 	push hl
    6696   00:DDF6                    ~ 	inc a
    6697   00:DDF6                    ~ 	cp 11h
    6698   00:DDF6                    ~ 	jr c,crumble6		; 7a5c
    6699   00:DDF6                    ~ 	xor a
    6700   00:DDF6                    ~ crumble6			; 7a5c
    6701   00:DDF6                    ~ 	ld (hl),a
    6702   00:DDF6                    ~ 	call pattr		; 879e
    6703   00:DDF6                    ~ 	dec (hl)
    6704   00:DDF6                    ~ 	pop hl
    6705   00:DDF6                    ~ 	ret
    6706   00:DDF6                    ~ ENDIF
    6707   00:DDF6                      
    6708   00:DDF6                      ;<cpc>
    6709   00:DDF6                      ;lstrnd equ $               ; end of "random" area.
    6710   00:DDF6                      ;</cpc>
    6711   00:DDF6                      
    6712   00:DDF6                      ; Sprite table.
    6713   00:DDF6                      ; ix+0  = type.
    6714   00:DDF6                      ; ix+1  = sprite image number.
    6715   00:DDF6                      ; ix+2  = frame.
    6716   00:DDF6                      ; ix+3  = x coord.
    6717   00:DDF6                      ; ix+4  = y coord.
    6718   00:DDF6                      
    6719   00:DDF6                      ; ix+5  = new type.
    6720   00:DDF6                      ; ix+6  = new image number.
    6721   00:DDF6                      ; ix+7  = new frame.
    6722   00:DDF6                      ; ix+8  = new x coord.
    6723   00:DDF6                      ; ix+9  = new y coord.
    6724   00:DDF6                      
    6725   00:DDF6                      ; ix+10 = direction.
    6726   00:DDF6                      ; ix+11 = parameter 1.
    6727   00:DDF6                      ; ix+12 = parameter 2.
    6728   00:DDF6                      ; ix+13 = jump pointer low.
    6729   00:DDF6                      ; ix+14 = jump pointer high.
    6730   00:DDF6                      ; ix+15 = data pointer low.
    6731   00:DDF6                      ; ix+16 = data pointer high.
    6732   00:DDF6                      
    6733   00:DDF6                      
    6734   00:DDF6  (00:DDF6)           sprtab equ $
    6735   00:DDF6                      
    6736   00:DDF6                      ;       block NUMSPR * TABSIZ,255
    6737   00:DDF6                      
    6738   00:DDF6                             defb 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
    6738   00:DDF6  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 
    6738   00:DE06  FF 
    6739   00:DE07                             defb 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
    6739   00:DE07  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 
    6739   00:DE17  FF 
    6740   00:DE18                             defb 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
    6740   00:DE18  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 
    6740   00:DE28  FF 
    6741   00:DE29                             defb 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
    6741   00:DE29  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 
    6741   00:DE39  FF 
    6742   00:DE3A                             defb 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
    6742   00:DE3A  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 
    6742   00:DE4A  FF 
    6743   00:DE4B                             defb 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
    6743   00:DE4B  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 
    6743   00:DE5B  FF 
    6744   00:DE5C                             defb 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
    6744   00:DE5C  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 
    6744   00:DE6C  FF 
    6745   00:DE6D                             defb 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
    6745   00:DE6D  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 
    6745   00:DE7D  FF 
    6746   00:DE7E                             defb 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
    6746   00:DE7E  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 
    6746   00:DE8E  FF 
    6747   00:DE8F                             defb 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
    6747   00:DE8F  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 
    6747   00:DE9F  FF 
    6748   00:DEA0                             defb 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
    6748   00:DEA0  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 
    6748   00:DEB0  FF 
    6749   00:DEB1                             defb 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
    6749   00:DEB1  FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 
    6749   00:DEC1  FF 
    6750   00:DEC2                      ssprit defb 255,255,255,255,255,255,255,0,192,120,0,0,0,255,255,255,255
    6750   00:DEC2  FF FF FF FF FF FF FF 00 C0 78 00 00 00 FF FF FF 
    6750   00:DED2  FF 
    6751   00:DED3                      
    6752   00:DED3  22                  roomtb defb 34                     ; room number.
    6753   00:DED4                      ;<cpc>
    6754   00:DED4                      ;nosnd  defb 255
    6755   00:DED4                      ;</cpc>
    6756   00:DED4                      
    6757   00:DED4                      ; Everything below here will be generated by the editors.
    6758   00:DED4                      
    6759   00:DED4                      ; Sounds.
    6760   00:DED4                      
    6761   00:DED4                      ;fx1    defb 128+15         ; volume and mixer.
    6762   00:DED4                      ;       defb 31             ; white noise.
    6763   00:DED4                      ;       defw 1000           ; tone register.
    6764   00:DED4                      ;       defb 128+15         ; volume and mixer.
    6765   00:DED4                      ;       defb 25             ; white noise.
    6766   00:DED4                      ;       defw 1000           ; tone register.
    6767   00:DED4                      ;       defb 128+14         ; volume and mixer.
    6768   00:DED4                      ;       defb 19             ; white noise.
    6769   00:DED4                      ;       defw 1000           ; tone register.
    6770   00:DED4                      ;       defb 128+13         ; volume and mixer.
    6771   00:DED4                      ;       defb 13             ; white noise.
    6772   00:DED4                      ;       defw 1000           ; tone register.
    6773   00:DED4                      ;       defb 128+12         ; volume and mixer.
    6774   00:DED4                      ;       defb 7              ; white noise.
    6775   00:DED4                      ;       defw 1000           ; tone register.
    6776   00:DED4                      ;       defb 128+11         ; volume and mixer.
    6777   00:DED4                      ;       defb 0              ; white noise.
    6778   00:DED4                      ;       defw 1000           ; tone register.
    6779   00:DED4                      ;       defb 128+10         ; volume and mixer.
    6780   00:DED4                      ;       defb 6              ; white noise.
    6781   00:DED4                      ;       defw 1000           ; tone register.
    6782   00:DED4                      ;       defb 128+8          ; volume and mixer.
    6783   00:DED4                      ;       defb 12             ; white noise.
    6784   00:DED4                      ;       defw 1000           ; tone register.
    6785   00:DED4                      ;       defb 128+6          ; volume and mixer.
    6786   00:DED4                      ;       defb 18             ; white noise.
    6787   00:DED4                      ;       defw 1000           ; tone register.
    6788   00:DED4                      ;       defb 128+3          ; volume and mixer.
    6789   00:DED4                      ;       defb 24             ; white noise.
    6790   00:DED4                      ;       defw 1000           ; tone register.
    6791   00:DED4                      ;       defb 255
    6792   00:DED4                      ;
    6793   00:DED4                      ;fx2    defb 064+15         ; volume and mixer.
    6794   00:DED4                      ;       defb 27             ; white noise.
    6795   00:DED4                      ;       defw 1000           ; tone register.
    6796   00:DED4                      ;       defb 064+14         ; volume and mixer.
    6797   00:DED4                      ;       defb 31             ; white noise.
    6798   00:DED4                      ;       defw 2000           ; tone register.
    6799   00:DED4                      ;       defb 064+13         ; volume and mixer.
    6800   00:DED4                      ;       defb 28             ; white noise.
    6801   00:DED4                      ;       defw 3000           ; tone register.
    6802   00:DED4                      ;       defb 064+12         ; volume and mixer.
    6803   00:DED4                      ;       defb 31             ; white noise.
    6804   00:DED4                      ;       defw 2000           ; tone register.
    6805   00:DED4                      ;       defb 064+11         ; volume and mixer.
    6806   00:DED4                      ;       defb 29             ; white noise.
    6807   00:DED4                      ;       defw 1000           ; tone register.
    6808   00:DED4                      ;       defb 064+10         ; volume and mixer.
    6809   00:DED4                      ;       defb 31             ; white noise.
    6810   00:DED4                      ;       defw 2000           ; tone register.
    6811   00:DED4                      ;       defb 064+9          ; volume and mixer.
    6812   00:DED4                      ;       defb 30             ; white noise.
    6813   00:DED4                      ;       defw 3000           ; tone register.
    6814   00:DED4                      ;       defb 064+8          ; volume and mixer.
    6815   00:DED4                      ;       defb 31             ; white noise.
    6816   00:DED4                      ;       defw 2000           ; tone register.
    6817   00:DED4                      ;       defb 064+7          ; volume and mixer.
    6818   00:DED4                      ;       defb 31             ; white noise.
    6819   00:DED4                      ;       defw 1000           ; tone register.
    6820   00:DED4                      ;       defb 064+6          ; volume and mixer.
    6821   00:DED4                      ;       defb 31             ; white noise.
    6822   00:DED4                      ;       defw 2000           ; tone register.
    6823   00:DED4                      ;       defb 255
    6824   00:DED4                      ;
    6825   00:DED4                      ;fx3    defb 064+15         ; volume and mixer.
    6826   00:DED4                      ;       defb 0              ; white noise.
    6827   00:DED4                      ;       defw 4000           ; tone register.
    6828   00:DED4                      ;       defb 064+15         ; volume and mixer.
    6829   00:DED4                      ;       defb 0              ; white noise.
    6830   00:DED4                      ;       defw 4100           ; tone register.
    6831   00:DED4                      ;       defb 064+14         ; volume and mixer.
    6832   00:DED4                      ;       defb 0              ; white noise.
    6833   00:DED4                      ;       defw 4200           ; tone register.
    6834   00:DED4                      ;       defb 064+14         ; volume and mixer.
    6835   00:DED4                      ;       defb 0              ; white noise.
    6836   00:DED4                      ;       defw 4300           ; tone register.
    6837   00:DED4                      ;       defb 064+13         ; volume and mixer.
    6838   00:DED4                      ;       defb 0              ; white noise.
    6839   00:DED4                      ;       defw 4400           ; tone register.
    6840   00:DED4                      ;       defb 064+13         ; volume and mixer.
    6841   00:DED4                      ;       defb 0              ; white noise.
    6842   00:DED4                      ;       defw 4500           ; tone register.
    6843   00:DED4                      ;       defb 064+12         ; volume and mixer.
    6844   00:DED4                      ;       defb 0              ; white noise.
    6845   00:DED4                      ;       defw 4600           ; tone register.
    6846   00:DED4                      ;       defb 064+12         ; volume and mixer.
    6847   00:DED4                      ;       defb 0              ; white noise.
    6848   00:DED4                      ;       defw 4700           ; tone register.
    6849   00:DED4                      ;       defb 064+11         ; volume and mixer.
    6850   00:DED4                      ;       defb 0              ; white noise.
    6851   00:DED4                      ;       defw 4800           ; tone register.
    6852   00:DED4                      ;       defb 064+10         ; volume and mixer.
    6853   00:DED4                      ;       defb 0              ; white noise.
    6854   00:DED4                      ;       defw 4900           ; tone register.
    6855   00:DED4                      ;       defb 255
    6856   00:DED4                      ;
    6857   00:DED4                      ;       defb 99             ; temporary marker.
    6858   00:DED4                      
    6859   00:DED4                      ; User routine.  Put your own code in here to be called with USER instruction.
    6860   00:DED4                      ; if USER has an argument it will be passed in the accumulator.
    6861   00:DED4                      
    6862   00:DED4  (00:6800)           sndbit_port   = 26624      ; this is a memory address, not a port !
    6863   00:DED4  (00:0000)           sndbit_bit    = 0
    6864   00:DED4  (00:0021)           sndbit_mask   = 33         ; bit 0 (Speaker A) and 5 (Speaker B)
    6865   00:DED4                      
    6866   00:DED4                      expl
    6867   00:DED4  21 C2 01            	ld hl,450
    6868   00:DED7                      expl0
    6869   00:DED7  E5                            push    hl
    6870   00:DED8  F5                            push    af
    6871   00:DED9  3E 21                         ld      a,sndbit_mask
    6872   00:DEDB  26 00                         ld      h,0
    6873   00:DEDD  A6                            and     (hl)
    6874   00:DEDE  6F                            ld      l,a
    6875   00:DEDF  F1                            pop     af
    6876   00:DEE0  AD                            xor     l
    6877   00:DEE1  F6 08               	or COL_OR
    6878   00:DEE3  E6 EF               	and COL_AND
    6879   00:DEE5  32 00 68                      ld      (sndbit_port),a
    6880   00:DEE8  E1                            pop     hl
    6881   00:DEE9  F5                            push    af
    6882   00:DEEA  44                            ld      b,h
    6883   00:DEEB  4D                            ld      c,l
    6884   00:DEEC  0B                  dly      dec     bc
    6885   00:DEED  78                            ld      a,b
    6886   00:DEEE  B1                            or      c
    6887   00:DEEF  20 FB                         jr      nz,dly
    6888   00:DEF1  F1                            pop     af
    6889   00:DEF2                                
    6890   00:DEF2  23                            inc     hl
    6891   00:DEF3  CB 4C                         bit     1,h
    6892   00:DEF5  28 E0                         jr      z,expl0
    6893   00:DEF7  C9                  	ret         
    6894   00:DEF8                      
    6895   00:DEF8                      	include "user.inc"
       1.  00:DEF8                      user
       2.  00:DEF8  FE 00                   cp 0
       3.  00:DEFA  C2 FE DF                jp nz,usr1
       4.  00:DEFD                          ; USER 0 command
       5.  00:DEFD                          ; Get the draw value from the Q variable
       6.  00:DEFD  3A 4A C9                ld a,(varq)
       7.  00:DF00  21 00 70                ld hl,0x7000
       8.  00:DF03  11 01 70                ld de,0x7001
       9.  00:DF06                          ; Counter for lines downscreen
      10.  00:DF06  01 20 00                ld bc,0x20
      11.  00:DF09                      disloop    
      12.  00:DF09  C5                      push bc
      13.  00:DF0A  3A 4A C9                ld a,(varq)
      14.  00:DF0D  01 1F 00                ld bc,0x01f
      15.  00:DF10  77                      ld (hl),a
      16.  00:DF11  ED B0                   ldir
      17.  00:DF13  01 FF FF                ld bc,0xffff
      18.  00:DF16                      delayit
      19.  00:DF16  0B                      dec bc
      20.  00:DF17  78                      ld a,b
      21.  00:DF18  B1                      or c
      22.  00:DF19  10 FB                   djnz delayit
      23.  00:DF1B  01 FF FF                ld bc,0xffff
      24.  00:DF1E                      delayit2
      25.  00:DF1E  0B                      dec bc
      26.  00:DF1F  78                      ld a,b
      27.  00:DF20  B1                      or c
      28.  00:DF21  10 FB                   djnz delayit2
      29.  00:DF23  01 FF FF                ld bc,0xffff
      30.  00:DF26                      delayit3
      31.  00:DF26  0B                      dec bc
      32.  00:DF27  78                      ld a,b
      33.  00:DF28  B1                      or c
      34.  00:DF29  10 FB                   djnz delayit3    
      35.  00:DF2B  01 20 00                ld bc,0x20
      36.  00:DF2E  09                      add hl,bc
      37.  00:DF2F  E5                      push hl
      38.  00:DF30  D5                      push de
      39.  00:DF31  E1                      pop hl
      40.  00:DF32  09                      add hl,bc
      41.  00:DF33  E5                      push hl
      42.  00:DF34  D1                      pop de
      43.  00:DF35  E1                      pop hl
      44.  00:DF36  C1                      pop bc
      45.  00:DF37  0B                      dec bc
      46.  00:DF38  23                      inc hl
      47.  00:DF39  13                      inc de
      48.  00:DF3A  78                      ld a,b
      49.  00:DF3B  B1                      or c
      50.  00:DF3C  20 CB                   jr nz,disloop
      51.  00:DF3E  3A 4A C9                ld a,(varq)
      52.  00:DF41  21 20 70                ld hl,0x7020
      53.  00:DF44  11 21 70                ld de,0x7021
      54.  00:DF47                          ; Counter for lines downscreen
      55.  00:DF47  01 20 00                ld bc,0x20
      56.  00:DF4A                      disloop2    
      57.  00:DF4A  C5                      push bc
      58.  00:DF4B  3A 4A C9                ld a,(varq)
      59.  00:DF4E  01 1F 00                ld bc,0x01f
      60.  00:DF51  77                      ld (hl),a
      61.  00:DF52  ED B0                   ldir
      62.  00:DF54  01 FF FF                ld bc,0xffff
      63.  00:DF57                      delayit4
      64.  00:DF57  0B                      dec bc
      65.  00:DF58  78                      ld a,b
      66.  00:DF59  B1                      or c
      67.  00:DF5A  10 FB                   djnz delayit4
      68.  00:DF5C  01 FF FF                ld bc,0xffff
      69.  00:DF5F                      delayit5
      70.  00:DF5F  0B                      dec bc
      71.  00:DF60  78                      ld a,b
      72.  00:DF61  B1                      or c
      73.  00:DF62  10 FB                   djnz delayit5
      74.  00:DF64  01 FF FF                ld bc,0xffff
      75.  00:DF67                      delayit6
      76.  00:DF67  0B                      dec bc
      77.  00:DF68  78                      ld a,b
      78.  00:DF69  B1                      or c
      79.  00:DF6A  10 FB                   djnz delayit6   
      80.  00:DF6C  01 20 00                ld bc,0x20
      81.  00:DF6F  09                      add hl,bc
      82.  00:DF70  E5                      push hl
      83.  00:DF71  D5                      push de
      84.  00:DF72  E1                      pop hl
      85.  00:DF73  09                      add hl,bc
      86.  00:DF74  E5                      push hl
      87.  00:DF75  D1                      pop de
      88.  00:DF76  E1                      pop hl
      89.  00:DF77  C1                      pop bc
      90.  00:DF78  0B                      dec bc
      91.  00:DF79  23                      inc hl
      92.  00:DF7A  13                      inc de
      93.  00:DF7B  78                      ld a,b
      94.  00:DF7C  B1                      or c
      95.  00:DF7D  20 CB                   jr nz,disloop2    
      96.  00:DF7F                      
      97.  00:DF7F  3E 00                   ld a,0x00
      98.  00:DF81  21 00 70                ld hl,0x7000
      99.  00:DF84  11 01 70                ld de,0x7001
     100.  00:DF87                          ; Counter for lines downscreen
     101.  00:DF87  01 20 00                ld bc,0x20
     102.  00:DF8A                      disloop3    
     103.  00:DF8A  C5                      push bc
     104.  00:DF8B  3E 00                   ld a,0x00
     105.  00:DF8D  01 1F 00                ld bc,0x01f
     106.  00:DF90  77                      ld (hl),a
     107.  00:DF91  ED B0                   ldir
     108.  00:DF93  01 FF FF                ld bc,0xffff
     109.  00:DF96                      delayit7
     110.  00:DF96  0B                      dec bc
     111.  00:DF97  78                      ld a,b
     112.  00:DF98  B1                      or c
     113.  00:DF99  10 FB                   djnz delayit7
     114.  00:DF9B  01 FF FF                ld bc,0xffff
     115.  00:DF9E                      delayit8
     116.  00:DF9E  0B                      dec bc
     117.  00:DF9F  78                      ld a,b
     118.  00:DFA0  B1                      or c
     119.  00:DFA1  10 FB                   djnz delayit8
     120.  00:DFA3  01 FF FF                ld bc,0xffff
     121.  00:DFA6                      delayit9
     122.  00:DFA6  0B                      dec bc
     123.  00:DFA7  78                      ld a,b
     124.  00:DFA8  B1                      or c
     125.  00:DFA9  10 FB                   djnz delayit9    
     126.  00:DFAB  01 20 00                ld bc,0x20
     127.  00:DFAE  09                      add hl,bc
     128.  00:DFAF  E5                      push hl
     129.  00:DFB0  D5                      push de
     130.  00:DFB1  E1                      pop hl
     131.  00:DFB2  09                      add hl,bc
     132.  00:DFB3  E5                      push hl
     133.  00:DFB4  D1                      pop de
     134.  00:DFB5  E1                      pop hl
     135.  00:DFB6  C1                      pop bc
     136.  00:DFB7  0B                      dec bc
     137.  00:DFB8  23                      inc hl
     138.  00:DFB9  13                      inc de
     139.  00:DFBA  78                      ld a,b
     140.  00:DFBB  B1                      or c
     141.  00:DFBC  20 CC                   jr nz,disloop3
     142.  00:DFBE  3E 00                   ld a,0
     143.  00:DFC0  21 20 70                ld hl,0x7020
     144.  00:DFC3  11 21 70                ld de,0x7021
     145.  00:DFC6                          ; Counter for lines downscreen
     146.  00:DFC6  01 20 00                ld bc,0x20
     147.  00:DFC9                      disloop4   
     148.  00:DFC9  C5                      push bc
     149.  00:DFCA  3E 00                   ld a,0x00
     150.  00:DFCC  01 1F 00                ld bc,0x01f
     151.  00:DFCF  77                      ld (hl),a
     152.  00:DFD0  ED B0                   ldir
     153.  00:DFD2  01 FF FF                ld bc,0xffff
     154.  00:DFD5                      delayit10
     155.  00:DFD5  0B                      dec bc
     156.  00:DFD6  78                      ld a,b
     157.  00:DFD7  B1                      or c
     158.  00:DFD8  10 FB                   djnz delayit10
     159.  00:DFDA  01 FF FF                ld bc,0xffff
     160.  00:DFDD                      delayit11
     161.  00:DFDD  0B                      dec bc
     162.  00:DFDE  78                      ld a,b
     163.  00:DFDF  B1                      or c
     164.  00:DFE0  10 FB                   djnz delayit11
     165.  00:DFE2  01 FF FF                ld bc,0xffff
     166.  00:DFE5                      delayit12
     167.  00:DFE5  0B                      dec bc
     168.  00:DFE6  78                      ld a,b
     169.  00:DFE7  B1                      or c
     170.  00:DFE8  10 FB                   djnz delayit12  
     171.  00:DFEA  01 20 00                ld bc,0x20
     172.  00:DFED  09                      add hl,bc
     173.  00:DFEE  E5                      push hl
     174.  00:DFEF  D5                      push de
     175.  00:DFF0  E1                      pop hl
     176.  00:DFF1  09                      add hl,bc
     177.  00:DFF2  E5                      push hl
     178.  00:DFF3  D1                      pop de
     179.  00:DFF4  E1                      pop hl
     180.  00:DFF5  C1                      pop bc
     181.  00:DFF6  0B                      dec bc
     182.  00:DFF7  23                      inc hl
     183.  00:DFF8  13                      inc de
     184.  00:DFF9  78                      ld a,b
     185.  00:DFFA  B1                      or c
     186.  00:DFFB  20 CC                   jr nz,disloop4    
     187.  00:DFFD  C9                      ret     
     188.  00:DFFE                          ; save value to display
     189.  00:DFFE                          
     190.  00:DFFE                      usr1
     191.  00:DFFE  FE 01                   cp 1
     192.  00:E000  20 0C                   jr nz, usr2
     193.  00:E002  21 1C E0                ld hl,title
     194.  00:E005  11 00 70                ld de,7000h
     195.  00:E008  01 00 06                ld bc,0600h
     196.  00:E00B  ED B0                   ldir
     197.  00:E00D  C9                      ret
     198.  00:E00E                      usr2
     199.  00:E00E  FE 02                   cp 2
     200.  00:E010  20 04                   jr nz,usr3
     201.  00:E012  3A 4A C9                ld a,(varq)
     202.  00:E015  C9                  	ret
     203.  00:E016                      usr3
     204.  00:E016  FE 03               	cp 3
     205.  00:E018  20 01               	jr nz,usr4
     206.  00:E01A  C9                  	ret
     207.  00:E01B                      usr4
     208.  00:E01B  C9                          ret
     209.  00:E01C                      
     210.  00:E01C                      title
     211.  00:E01C                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     211.  00:E01C  00 00 00 00 00 00 00 00 00 00 00 00 
     212.  00:E028                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     212.  00:E028  00 00 00 00 00 00 00 00 00 00 00 00 
     213.  00:E034                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     213.  00:E034  00 00 00 00 00 00 00 00 00 00 00 00 
     214.  00:E040                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     214.  00:E040  00 00 00 00 00 00 00 00 00 00 00 00 
     215.  00:E04C                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     215.  00:E04C  00 00 00 00 00 00 00 00 00 00 00 00 
     216.  00:E058                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     216.  00:E058  00 00 00 00 00 00 00 00 00 00 00 00 
     217.  00:E064                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     217.  00:E064  00 00 00 00 00 00 00 00 00 00 00 00 
     218.  00:E070                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     218.  00:E070  00 00 00 00 00 00 00 00 00 00 00 00 
     219.  00:E07C                        defb 0x00, 0x01, 0x55, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     219.  00:E07C  00 01 55 40 00 00 00 00 00 00 00 00 
     220.  00:E088                        defb 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x00, 0x55, 0x55, 0x50, 0x00, 0x00
     220.  00:E088  00 00 54 00 00 00 00 55 55 50 00 00 
     221.  00:E094                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x55, 0x50
     221.  00:E094  00 00 00 00 00 00 00 00 00 15 55 50 
     222.  00:E0A0                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x5A, 0x00
     222.  00:E0A0  00 00 00 00 00 00 00 00 00 01 5A 00 
     223.  00:E0AC                        defb 0x00, 0x00, 0x15, 0x55, 0x55, 0x68, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     223.  00:E0AC  00 00 15 55 55 68 00 00 00 00 00 00 
     224.  00:E0B8                        defb 0x00, 0x00, 0x00, 0x00, 0x01, 0x59, 0x59, 0x58, 0x00, 0x00, 0x00, 0x00
     224.  00:E0B8  00 00 00 00 01 59 59 58 00 00 00 00 
     225.  00:E0C4                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x68, 0x00, 0x00, 0x00, 0x56, 0x95
     225.  00:E0C4  00 00 00 00 00 05 68 00 00 00 56 95 
     226.  00:E0D0                        defb 0xAA, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     226.  00:E0D0  AA A0 00 00 00 00 00 00 00 00 00 00 
     227.  00:E0DC                        defb 0x05, 0x65, 0x59, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     227.  00:E0DC  05 65 59 58 00 00 00 00 00 00 00 00 
     228.  00:E0E8                        defb 0x00, 0x05, 0xA0, 0x00, 0x00, 0x01, 0x5A, 0x55, 0x80, 0x00, 0x00, 0x00
     228.  00:E0E8  00 05 A0 00 00 01 5A 55 80 00 00 00 
     229.  00:E0F4                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x55, 0x65, 0x68
     229.  00:E0F4  00 00 00 00 00 00 00 00 05 55 65 68 
     230.  00:E100                        defb 0x05, 0x51, 0x55, 0x54, 0x05, 0x55, 0x50, 0x15, 0x45, 0x52, 0x81, 0x55
     230.  00:E100  05 51 55 54 05 55 50 15 45 52 81 55 
     231.  00:E10C                        defb 0x40, 0x05, 0x69, 0x56, 0x80, 0x55, 0x50, 0x15, 0x40, 0x05, 0x55, 0x05
     231.  00:E10C  40 05 69 56 80 55 50 15 40 05 55 05 
     232.  00:E118                        defb 0x55, 0x40, 0x05, 0x50, 0x15, 0x95, 0x55, 0xA0, 0x56, 0x59, 0x55, 0x56
     232.  00:E118  55 40 05 50 15 95 55 A0 56 59 55 56 
     233.  00:E124                        defb 0x05, 0x55, 0x58, 0x55, 0xA5, 0x68, 0x05, 0x69, 0x50, 0x05, 0x61, 0x55
     233.  00:E124  05 55 58 55 A5 68 05 69 50 05 61 55 
     234.  00:E130                        defb 0x41, 0x5A, 0x54, 0x56, 0x51, 0x55, 0x55, 0x85, 0x65, 0x60, 0x56, 0x58
     234.  00:E130  41 5A 54 56 51 55 55 85 65 60 56 58 
     235.  00:E13C                        defb 0x56, 0x55, 0x55, 0x81, 0x59, 0x55, 0x59, 0x56, 0x15, 0x65, 0x58, 0x55
     235.  00:E13C  56 55 55 81 59 55 59 56 15 65 58 55 
     236.  00:E148                        defb 0x95, 0x60, 0x15, 0x65, 0x58, 0x15, 0xA5, 0x55, 0x65, 0x59, 0x55, 0x59
     236.  00:E148  95 60 15 65 58 15 A5 55 65 59 55 59 
     237.  00:E154                        defb 0x55, 0x5A, 0x56, 0x95, 0x65, 0x51, 0x59, 0x58, 0x2A, 0x56, 0x95, 0x45
     237.  00:E154  55 5A 56 95 65 51 59 58 2A 56 95 45 
     238.  00:E160                        defb 0x69, 0x65, 0x69, 0x56, 0x15, 0xA5, 0x59, 0x56, 0x95, 0xA0, 0x15, 0x62
     238.  00:E160  69 65 69 56 15 A5 59 56 95 A0 15 62 
     239.  00:E16C                        defb 0xA8, 0x0A, 0x85, 0x6A, 0xA5, 0x58, 0xA5, 0x59, 0x55, 0x69, 0x56, 0x15
     239.  00:E16C  A8 0A 85 6A A5 58 A5 59 55 69 56 15 
     240.  00:E178                        defb 0xA5, 0x65, 0x69, 0x68, 0x01, 0x56, 0x15, 0x55, 0x55, 0x95, 0x65, 0x5A
     240.  00:E178  A5 65 69 68 01 56 15 55 55 95 65 5A 
     241.  00:E184                        defb 0x55, 0x95, 0x69, 0x5A, 0x55, 0x80, 0x05, 0x50, 0x00, 0x00, 0x15, 0x60
     241.  00:E184  55 95 69 5A 55 80 05 50 00 00 15 60 
     242.  00:E190                        defb 0x01, 0x54, 0x15, 0x68, 0x55, 0xA5, 0x5A, 0x55, 0x95, 0x55, 0x55, 0xA0
     242.  00:E190  01 54 15 68 55 A5 5A 55 95 55 55 A0 
     243.  00:E19C                        defb 0x01, 0x5A, 0x15, 0x55, 0x56, 0x95, 0xA5, 0x58, 0x56, 0x95, 0x65, 0x58
     243.  00:E19C  01 5A 15 55 56 95 A5 58 56 95 65 58 
     244.  00:E1A8                        defb 0x56, 0x80, 0x05, 0x54, 0x00, 0x00, 0x15, 0xA0, 0x01, 0x55, 0x15, 0xA0
     244.  00:E1A8  56 80 05 54 00 00 15 A0 01 55 15 A0 
     245.  00:E1B4                        defb 0x55, 0x85, 0x59, 0x56, 0x95, 0x55, 0x56, 0x80, 0x05, 0x58, 0x55, 0x95
     245.  00:E1B4  55 85 59 56 95 55 56 80 05 58 55 95 
     246.  00:E1C0                        defb 0xAA, 0x55, 0x95, 0x69, 0x56, 0x55, 0xA5, 0x69, 0x56, 0x01, 0x51, 0x56
     246.  00:E1C0  AA 55 95 69 56 55 A5 69 56 01 51 56 
     247.  00:E1CC                        defb 0x00, 0x00, 0x55, 0x80, 0x54, 0x55, 0x95, 0x81, 0x56, 0x95, 0x69, 0x56
     247.  00:E1CC  00 00 55 80 54 55 95 81 56 95 69 56 
     248.  00:E1D8                        defb 0x55, 0x95, 0xAA, 0x50, 0x05, 0x69, 0x55, 0x55, 0x81, 0x56, 0x95, 0x65
     248.  00:E1D8  55 95 AA 50 05 69 55 55 81 56 95 65 
     249.  00:E1E4                        defb 0x5A, 0x55, 0x95, 0x65, 0x5A, 0x05, 0x69, 0x56, 0x00, 0x00, 0x56, 0x81
     249.  00:E1E4  5A 55 95 65 5A 05 69 56 00 00 56 81 
     250.  00:E1F0                        defb 0x5A, 0x55, 0x55, 0x81, 0x56, 0x55, 0xA5, 0x5A, 0x56, 0x55, 0x81, 0x68
     250.  00:E1F0  5A 55 55 81 56 55 A5 5A 56 55 81 68 
     251.  00:E1FC                        defb 0x15, 0x65, 0x5A, 0x55, 0x95, 0x56, 0x15, 0x55, 0x58, 0x55, 0x55, 0x95
     251.  00:E1FC  15 65 5A 55 95 56 15 55 58 55 55 95 
     252.  00:E208                        defb 0x58, 0x05, 0xA5, 0x5A, 0x00, 0x01, 0x55, 0x55, 0x69, 0x56, 0x55, 0x95
     252.  00:E208  58 05 A5 5A 00 01 55 55 69 56 55 95 
     253.  00:E214                        defb 0x55, 0x55, 0x55, 0x55, 0x5A, 0x55, 0x95, 0xA0, 0x55, 0x55, 0xA8, 0x15
     253.  00:E214  55 55 55 55 5A 55 95 A0 55 55 A8 15 
     254.  00:E220                        defb 0x55, 0x5A, 0x15, 0x55, 0x68, 0x55, 0xA5, 0x55, 0x68, 0x01, 0x55, 0xA8
     254.  00:E220  55 5A 15 55 68 55 A5 55 68 01 55 A8 
     255.  00:E22C                        defb 0x00, 0x05, 0x55, 0x5A, 0x55, 0x6A, 0x15, 0x5A, 0x55, 0x95, 0x55, 0x55
     255.  00:E22C  00 05 55 5A 55 6A 15 5A 55 95 55 55 
     256.  00:E238                        defb 0x68, 0x15, 0x5A, 0x80, 0x2A, 0xAA, 0x80, 0x0A, 0xAA, 0xA8, 0x0A, 0xAA
     256.  00:E238  68 15 5A 80 2A AA 80 0A AA A8 0A AA 
     257.  00:E244                        defb 0xA0, 0x2A, 0x82, 0x95, 0xA0, 0x00, 0xAA, 0x80, 0x00, 0x02, 0xAA, 0xA8
     257.  00:E244  A0 2A 82 95 A0 00 AA 80 00 02 AA A8 
     258.  00:E250                        defb 0x2A, 0xA0, 0x0A, 0xA8, 0x2A, 0x8A, 0x95, 0xAA, 0xA0, 0x0A, 0xA8, 0x00
     258.  00:E250  2A A0 0A A8 2A 8A 95 AA A0 0A A8 00 
     259.  00:E25C                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56
     259.  00:E25C  00 00 00 00 00 00 00 00 00 00 00 56 
     260.  00:E268                        defb 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     260.  00:E268  80 00 00 00 00 00 00 00 00 00 00 00 
     261.  00:E274                        defb 0x00, 0x00, 0x55, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     261.  00:E274  00 00 55 80 00 00 00 00 00 00 00 00 
     262.  00:E280                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x56, 0x00, 0x00, 0x00, 0x00
     262.  00:E280  00 00 00 00 00 00 14 56 00 00 00 00 
     263.  00:E28C                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x56, 0x80
     263.  00:E28C  00 00 00 00 00 00 00 00 00 00 56 80 
     264.  00:E298                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     264.  00:E298  00 00 00 00 00 00 00 00 00 00 00 00 
     265.  00:E2A4                        defb 0x00, 0x01, 0x55, 0x6A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     265.  00:E2A4  00 01 55 6A 00 00 00 00 00 00 00 00 
     266.  00:E2B0                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00
     266.  00:E2B0  00 00 00 00 00 01 56 00 00 00 00 00 
     267.  00:E2BC                        defb 0x00, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xAA, 0xA0
     267.  00:E2BC  00 20 20 00 00 00 00 00 00 00 AA A0 
     268.  00:E2C8                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     268.  00:E2C8  00 00 00 00 00 00 00 00 00 00 00 00 
     269.  00:E2D4                        defb 0x00, 0x05, 0x5A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA0, 0x98, 0x00
     269.  00:E2D4  00 05 5A 00 00 00 00 00 00 A0 98 00 
     270.  00:E2E0                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     270.  00:E2E0  00 00 00 00 00 00 00 00 00 00 00 00 
     271.  00:E2EC                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xA8, 0x00
     271.  00:E2EC  00 00 00 00 00 00 00 00 00 02 A8 00 
     272.  00:E2F8                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x98, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00
     272.  00:E2F8  00 00 00 00 00 98 96 00 00 00 00 00 
     273.  00:E304                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     273.  00:E304  00 00 00 00 00 00 00 00 00 00 00 00 
     274.  00:E310                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     274.  00:E310  00 00 00 00 00 00 00 00 00 00 00 00 
     275.  00:E31C                        defb 0xFE, 0xD6, 0x56, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     275.  00:E31C  FE D6 56 FF FF F0 00 00 00 00 00 00 
     276.  00:E328                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     276.  00:E328  00 00 00 00 00 00 00 00 00 00 00 00 
     277.  00:E334                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC2, 0xF5, 0x58, 0x00
     277.  00:E334  00 00 00 00 00 00 00 00 C2 F5 58 00 
     278.  00:E340                        defb 0x00, 0x30, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x55, 0x40, 0x00, 0x00
     278.  00:E340  00 30 00 05 00 00 00 00 55 40 00 00 
     279.  00:E34C                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x40, 0x00, 0x00, 0x05, 0x00
     279.  00:E34C  00 00 00 00 00 00 55 40 00 00 05 00 
     280.  00:E358                        defb 0x50, 0x00, 0x00, 0x00, 0xC0, 0xB5, 0x56, 0x00, 0x00, 0x30, 0x00, 0x17
     280.  00:E358  50 00 00 00 C0 B5 56 00 00 30 00 17 
     281.  00:E364                        defb 0xC0, 0x00, 0x00, 0x05, 0x35, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     281.  00:E364  C0 00 00 05 35 F0 00 00 00 00 00 00 
     282.  00:E370                        defb 0x00, 0x01, 0x3F, 0x50, 0x00, 0x00, 0x17, 0xC1, 0x7C, 0x00, 0x00, 0x00
     282.  00:E370  00 01 3F 50 00 00 17 C1 7C 00 00 00 
     283.  00:E37C                        defb 0xC0, 0x25, 0x69, 0xA0, 0x00, 0x30, 0x00, 0x17, 0x00, 0x00, 0x00, 0x17
     283.  00:E37C  C0 25 69 A0 00 30 00 17 00 00 00 17 
     284.  00:E388                        defb 0xD7, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0xD4, 0x14
     284.  00:E388  D7 C0 00 00 00 00 00 00 00 04 D4 14 
     285.  00:E394                        defb 0x00, 0x00, 0x1F, 0x05, 0x70, 0x00, 0x00, 0x00, 0xC0, 0x95, 0x96, 0x58
     285.  00:E394  00 00 1F 05 70 00 00 00 C0 95 96 58 
     286.  00:E3A0                        defb 0x02, 0xB0, 0x00, 0x55, 0x41, 0x41, 0x40, 0x1F, 0x17, 0x05, 0x54, 0x15
     286.  00:E3A0  02 B0 00 55 41 41 40 1F 17 05 54 15 
     287.  00:E3AC                        defb 0x40, 0x55, 0x05, 0x14, 0x00, 0x13, 0x5F, 0x17, 0x05, 0x54, 0x5D, 0x45
     287.  00:E3AC  40 55 05 14 00 13 5F 17 05 54 5D 45 
     288.  00:E3B8                        defb 0xF1, 0x51, 0x41, 0x40, 0xC0, 0x95, 0xB6, 0xD8, 0x2A, 0xA0, 0x00, 0x5D
     288.  00:E3B8  F1 51 41 40 C0 95 B6 D8 2A A0 00 5D 
     289.  00:E3C4                        defb 0x75, 0xF5, 0x70, 0x5C, 0x5F, 0x53, 0x5D, 0x5F, 0x71, 0x35, 0xC5, 0x45
     289.  00:E3C4  75 F5 70 5C 5F 53 5D 5F 71 35 C5 45 
     290.  00:E3D0                        defb 0x00, 0x4D, 0x7C, 0x5F, 0x53, 0x5F, 0x54, 0x57, 0xC4, 0xD5, 0xF5, 0x70
     290.  00:E3D0  00 4D 7C 5F 53 5F 54 57 C4 D5 F5 70 
     291.  00:E3DC                        defb 0xC2, 0x55, 0x96, 0x5A, 0x9A, 0xA0, 0x01, 0x7D, 0x75, 0xC5, 0xF0, 0x3C
     291.  00:E3DC  C2 55 96 5A 9A A0 01 7D 75 C5 F0 3C 
     292.  00:E3E8                        defb 0x5D, 0x7D, 0x7D, 0x7D, 0x74, 0xD5, 0x57, 0xF7, 0xC1, 0x35, 0xF0, 0x5D
     292.  00:E3E8  5D 7D 7D 7D 74 D5 57 F7 C1 35 F0 5D 
     293.  00:E3F4                        defb 0x7D, 0x7D, 0x7D, 0x17, 0x13, 0x45, 0xC5, 0xF0, 0xC2, 0x55, 0x69, 0xA5
     293.  00:E3F4  7D 7D 7D 17 13 45 C5 F0 C2 55 69 A5 
     294.  00:E400                        defb 0x56, 0xB0, 0x01, 0x71, 0x57, 0xD5, 0xC0, 0x01, 0x75, 0xF1, 0x70, 0x50
     294.  00:E400  56 B0 01 71 57 D5 C0 01 75 F1 70 50 
     295.  00:E40C                        defb 0xD7, 0x55, 0xD7, 0x17, 0x00, 0xC5, 0xC1, 0x75, 0xF1, 0x71, 0x74, 0x5F
     295.  00:E40C  D7 55 D7 17 00 C5 C1 75 F1 71 74 5F 
     296.  00:E418                        defb 0x5D, 0x17, 0xD5, 0xC0, 0xC2, 0x55, 0x55, 0x55, 0x55, 0xB0, 0x05, 0xF5
     296.  00:E418  5D 17 D5 C0 C2 55 55 55 55 B0 05 F5 
     297.  00:E424                        defb 0xD7, 0x17, 0xC0, 0x01, 0x55, 0xC5, 0xF4, 0x54, 0x5F, 0x17, 0x5F, 0x5F
     297.  00:E424  D7 17 C0 01 55 C5 F4 54 5F 17 5F 5F 
     298.  00:E430                        defb 0x00, 0x17, 0xC5, 0x55, 0xC5, 0xF5, 0x53, 0x5D, 0x54, 0xD7, 0x17, 0xC0
     298.  00:E430  00 17 C5 55 C5 F5 53 5D 54 D7 17 C0 
     299.  00:E43C                        defb 0xC9, 0x55, 0x55, 0x55, 0x55, 0xB0, 0x15, 0xC7, 0x5F, 0x5F, 0x00, 0x05
     299.  00:E43C  C9 55 55 55 55 B0 15 C7 5F 5F 00 05 
     300.  00:E448                        defb 0xD7, 0xC5, 0xD7, 0x17, 0x5C, 0x1F, 0x5C, 0x5C, 0x40, 0x17, 0x05, 0xD7
     300.  00:E448  D7 C5 D7 17 5C 1F 5C 5C 40 17 05 D7 
     301.  00:E454                        defb 0xC5, 0xD5, 0x5D, 0x7D, 0x7F, 0x5F, 0x5F, 0x00, 0xC9, 0x55, 0x65, 0x55
     301.  00:E454  C5 D5 5D 7D 7F 5F 5F 00 C9 55 65 55 
     302.  00:E460                        defb 0x56, 0x30, 0x17, 0xD7, 0x5D, 0x5C, 0x00, 0x05, 0xD7, 0x57, 0xDF, 0x57
     302.  00:E460  56 30 17 D7 5D 5C 00 05 D7 57 DF 57 
     303.  00:E46C                        defb 0x5C, 0x4D, 0x7D, 0x7D, 0x30, 0x17, 0x57, 0xD7, 0x57, 0xD7, 0x5D, 0x75
     303.  00:E46C  5C 4D 7D 7D 30 17 57 D7 57 D7 5D 75 
     304.  00:E478                        defb 0x71, 0x5D, 0x5C, 0x00, 0xE5, 0x55, 0x5A, 0x95, 0x56, 0x30, 0x55, 0x4F
     304.  00:E478  71 5D 5C 00 E5 55 5A 95 56 30 55 4F 
     305.  00:E484                        defb 0x55, 0x7C, 0x00, 0x17, 0xD5, 0x15, 0x55, 0x7F, 0x55, 0x35, 0x70, 0x54
     305.  00:E484  55 7C 00 17 D5 15 55 7F 55 35 70 54 
     306.  00:E490                        defb 0xC0, 0x15, 0x7F, 0x15, 0x15, 0x57, 0x55, 0x51, 0x54, 0x55, 0x7C, 0x00
     306.  00:E490  C0 15 7F 15 15 57 55 51 54 55 7C 00 
     307.  00:E49C                        defb 0xE5, 0x55, 0x55, 0x6A, 0xA8, 0x30, 0x3F, 0xF0, 0x3D, 0x70, 0x10, 0x5F
     307.  00:E49C  E5 55 55 6A A8 30 3F F0 3D 70 10 5F 
     308.  00:E4A8                        defb 0x0F, 0xCF, 0xFF, 0xF0, 0x3F, 0xC3, 0xF0, 0x3F, 0x00, 0x0F, 0xF0, 0x0F
     308.  00:E4A8  0F CF FF F0 3F C3 F0 3F 00 0F F0 0F 
     309.  00:E4B4                        defb 0xCF, 0xFF, 0x3F, 0xFC, 0xFF, 0x3D, 0x70, 0x00, 0x95, 0x55, 0x55, 0x68
     309.  00:E4B4  CF FF 3F FC FF 3D 70 00 95 55 55 68 
     310.  00:E4C0                        defb 0x00, 0x30, 0x00, 0x00, 0x05, 0xF1, 0x5D, 0x7C, 0x00, 0x00, 0x00, 0x00
     310.  00:E4C0  00 30 00 00 05 F1 5D 7C 00 00 00 00 
     311.  00:E4CC                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     311.  00:E4CC  00 00 00 00 00 00 00 00 00 00 00 00 
     312.  00:E4D8                        defb 0x00, 0x05, 0xF0, 0x00, 0x55, 0x55, 0x5A, 0x80, 0x00, 0x30, 0x00, 0x00
     312.  00:E4D8  00 05 F0 00 55 55 5A 80 00 30 00 00 
     313.  00:E4E4                        defb 0x47, 0xC0, 0x55, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     313.  00:E4E4  47 C0 55 F0 00 00 00 00 00 00 00 00 
     314.  00:E4F0                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0xC0, 0x00
     314.  00:E4F0  00 00 00 00 00 00 00 00 00 47 C0 00 
     315.  00:E4FC                        defb 0x55, 0x55, 0x60, 0x00, 0x00, 0x30, 0x00, 0x05, 0x53, 0x00, 0x3F, 0xC0
     315.  00:E4FC  55 55 60 00 00 30 00 05 53 00 3F C0 
     316.  00:E508                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     316.  00:E508  00 00 00 00 00 00 00 00 00 00 00 00 
     317.  00:E514                        defb 0x00, 0x00, 0x00, 0x00, 0x05, 0x53, 0x00, 0x00, 0x55, 0x55, 0x80, 0x00
     317.  00:E514  00 00 00 00 05 53 00 00 55 55 80 00 
     318.  00:E520                        defb 0x00, 0x30, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     318.  00:E520  00 30 00 03 FC 00 00 00 00 00 00 00 
     319.  00:E52C                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     319.  00:E52C  00 00 00 00 00 00 00 00 00 00 00 00 
     320.  00:E538                        defb 0x03, 0xFC, 0x00, 0x00, 0x55, 0x55, 0x80, 0x00, 0x00, 0x30, 0x00, 0x00
     320.  00:E538  03 FC 00 00 55 55 80 00 00 30 00 00 
     321.  00:E544                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     321.  00:E544  00 00 00 00 00 00 00 00 00 00 00 00 
     322.  00:E550                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     322.  00:E550  00 00 00 00 00 00 00 00 00 00 00 00 
     323.  00:E55C                        defb 0x55, 0x55, 0xFF, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     323.  00:E55C  55 55 FF FF FF F0 00 00 00 00 00 00 
     324.  00:E568                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     324.  00:E568  00 00 00 00 00 00 00 00 00 00 00 00 
     325.  00:E574                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     325.  00:E574  00 00 00 00 00 00 00 00 00 00 00 00 
     326.  00:E580                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     326.  00:E580  00 00 00 00 00 00 00 00 00 00 00 00 
     327.  00:E58C                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     327.  00:E58C  00 00 00 00 00 00 00 00 00 00 00 00 
     328.  00:E598                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     328.  00:E598  00 00 00 00 00 00 00 00 00 00 00 00 
     329.  00:E5A4                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     329.  00:E5A4  00 00 00 00 00 00 00 00 00 00 00 00 
     330.  00:E5B0                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     330.  00:E5B0  00 00 00 00 00 00 00 00 00 00 00 00 
     331.  00:E5BC                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     331.  00:E5BC  00 00 00 00 00 00 00 00 00 00 00 00 
     332.  00:E5C8                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     332.  00:E5C8  00 00 00 00 00 00 00 00 00 00 00 00 
     333.  00:E5D4                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     333.  00:E5D4  00 00 00 00 00 00 00 00 00 00 00 00 
     334.  00:E5E0                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     334.  00:E5E0  00 00 00 00 00 00 00 00 00 00 00 00 
     335.  00:E5EC                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     335.  00:E5EC  00 00 00 00 00 00 00 00 00 00 00 00 
     336.  00:E5F8                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     336.  00:E5F8  00 00 00 00 00 00 00 00 00 00 00 00 
     337.  00:E604                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     337.  00:E604  00 00 00 00 00 00 00 00 00 00 00 00 
     338.  00:E610                        defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     338.  00:E610  00 00 00 00 00 00 00 00 00 00 00 00 
    6896   00:E61C                      
    6897   00:E61C  (00:E61C)           eop    equ $
    6898   00:E61C                      
    6899   00:E61C                      
    6900   00:E61C                      ; Game-specific data and events code generated by the compiler ------------------
    6901   00:E61C                      
    6902   00:E61C                      

    LABELS
-------------------------------------------------
00:00000018   SCRHGT
00:0000001C   XMODE
00:00000020   XPORT
00:00000002 X XFLAG
00:00000000 X AFLAG
00:00000000 X CRFLAG
00:00000001 X IFLAG
00:00000000 X MFLAG
00:00000001 X GFLAG
00:00000001   WINDOWTOP
00:00000001   WINDOWLFT
00:00000012   WINDOWHGT
00:0000001E   WINDOWWID
00:00000009   MAPWID
00:00007B0C   mapdat
00:00007B42   stmap
00:00007B43   evnt00
00:00007B53   a00033
00:00007B61   a00058
00:00007B71   a00084
00:00007B8F   a00138
00:00007BA2   a00172
00:00007BBF   a00226
00:00007BCB   a00248
00:00007BDC   a00275
00:00007BF3   a00313
00:00007C07   a00347
00:00007C27   a00401
00:00007C41   a00448
00:00007C47   a00457
00:00007C67   a00511
00:00007C82   a00558
00:00007C88   a00567
00:00007C9C   a00599
00:00007CA1   a00608
00:00007CAE   a00634
00:00007CB1   evnt01
00:00007CC1   b00028
00:00007CC6   b00037
00:00007CD3   b00060
00:00007CF3   b00113
00:00007CFF   b00134
00:00007D04   b00142
00:00007D12   b00168
00:00007D18   b00178
00:00007D37   b00232
00:00007D43   b00252
00:00007D47   b00261
00:00007D52   b00282
00:00007D5E   b00304
00:00007D5F   evnt02
00:00007D6F   c00028
00:00007D74   c00037
00:00007D81   c00060
00:00007D90   c00082
00:00007D95   c00091
00:00007D9F   c00109
00:00007DA5   c00119
00:00007DB4   c00142
00:00007DB8   c00150
00:00007DBF   c00164
00:00007DCF   c00194
00:00007DD0   evnt03
00:00007DE6   d00038
00:00007DEB   d00047
00:00007DEE   d00051
00:00007DFD   d00074
00:00007E01   d00082
00:00007E17   d00118
00:00007E1C   d00126
00:00007E1F   d00130
00:00007E2E   d00153
00:00007E32   d00161
00:00007E42   d00191
00:00007E43   evnt04
00:00007E44   evnt05
00:00007E49   evnt06
00:00007E5D   g00038
00:00007E71   g00073
00:00007E80   g00102
00:00007E85   g00110
00:00007E9A   g00145
00:00007EAA   g00175
00:00007EAF   g00183
00:00007EC4   g00218
00:00007ED4   g00248
00:00007ED9   g00256
00:00007EEE   g00291
00:00007EFE   g00321
00:00007F03   g00329
00:00007F08   evnt07
00:00007F1A   h00033
00:00007F32   h00069
00:00007F45   h00099
00:00007F49   h00104
00:00007F5C   h00138
00:00007F70   h00172
00:00007F83   h00207
00:00007F84   evnt08
00:00007FB3   i00084
00:00007FB4   evnt09
00:00007FD9   j00068
00:00007FF1   j00111
00:00007FF2   evnt10
00:0000800E   k00050
00:00008051   k00168
00:00008068   k00208
00:0000808A   k00264
00:000080A1   k00304
00:000080C3   k00360
00:000080DA   k00400
00:000080FC   k00456
00:00008113   k00496
00:0000812D   k00549
00:00008141   k00587
00:000081C5   k00820
00:000081E3   k00873
00:00008232   k01016
00:00008249   k01055
00:00008269   k01115
00:00008279   k01145
00:0000828F   k01188
00:000082AB   k01239
00:000082C0   k01277
00:000082DF   k01337
00:00008311   k01423
00:00008328   k01463
00:00008335   k01487
00:00008368   k01578
00:00008369   evnt11
00:0000836A   evnt12
00:000083E9   m00219
00:000083FF   m00260
00:0000840D   m00283
00:0000841B   m00306
00:00008424   m00321
00:00008427   m00325
00:00008428   evnt13
00:00008478   n00140
00:000084B6   n00249
00:00008522   n00442
00:0000855C   n00543
00:000085C6   n00732
00:00008673   evnt14
00:00008689   o00045
00:0000868A   evnt15
00:00008696   p00025
00:00008697   evnt16
00:000086A9   evnt17
00:000086FB   evnt18
00:00008701   s00013
00:00008714   s00045
00:00008727   s00077
00:000087AF   s00310
00:000087BF   s00337
00:000087F2   s00425
00:0000880A   evnt19
00:0000880B   evnt20
00:0000880C   ptcusr
00:0000880D   msgdat
00:00008AD8 X nummsg
00:00008AD9   scdat
00:00009D85   numsc
00:00009D86   chgfx
00:0000A056   bcol
00:0000A0B0   bprop
00:0000A10A   sprgfx
00:0000C00A   frmlst
00:0000C02A   nmedat
00:00000018   NUMOBJ
00:0000C1E8   objdta
00:0000C590 X palett
00:0000C5D0   font
00:0000C8D0   jtab
00:0000C8E6   keys
00:0000C8F1 X g
00:00000001   RFLAG
00:00000000 X CFLAG
00:000000FF   FILL
00:00000008   COL_OR
00:000000EF   COL_AND
00:00000000   GFX_MOD
00:00000020   obj_len
00:00007000   VRAM
00:00000000 X ROM
00:0000687F X KEY
00:00006800   MODE
00:0000F800   RAMTOP
00:0000F500   MAP
00:0000F400   STACK
00:00000001   PLATFM
00:00000002   WALL
00:00000003   LADDER
00:00000004   FODDER
00:00000005   DEADLY
00:00000006   CUSTOM
00:00000007   WATER
00:00000008   COLECT
00:00000009 X NUMTYP
00:0000000C   NUMSPR
00:00000011   TABSIZ
00:000000CC   SPRBUF
00:00000004   NMESIZ
00:00000008   X
00:00000009   Y
00:00000005   PAM1ST
00:0000000F   COLDIST
00:00000037   NUMSHR
00:00000006   SHRSIZ
00:0000F2B6   SHRAPN
00:0000C8F1   start
00:0000C919   reboot
00:0000C921   joyval
00:0000C922   frmno
00:0000C923   XBANK
00:0000C924   cntint
00:0000C92F   wintop
00:0000C930   winlft
00:0000C931   winhgt
00:0000C932   winwid
00:0000C933   numob
00:0000C934   wntopx
00:0000C935   wnlftx
00:0000C936   wnbotx
00:0000C937   wnrgtx
00:0000C938   scno
00:0000C939   numlif
00:0000C93A   vara
00:0000C93B   varb
00:0000C93C   varc
00:0000C93D   vard
00:0000C93E X vare
00:0000C93F X varf
00:0000C940 X varg
00:0000C941 X varh
00:0000C942   vari
00:0000C943   varj
00:0000C944   vark
00:0000C945   varl
00:0000C946   varm
00:0000C947   varn
00:0000C948   varo
00:0000C949   varp
00:0000C94A   varq
00:0000C94B X varr
00:0000C94C   vars
00:0000C94D   vart
00:0000C94E X varu
00:0000C94F X varv
00:0000C950 X varw
00:0000C951 X varz
00:0000C952   contrl
00:0000C953   charx
00:0000C954   chary
00:0000C955   clock
00:0000C956   varrnd
00:0000C957   varobj
00:0000C958   varopt
00:0000C959 X varblk
00:0000C95A   nexlev
00:0000C95B   restfl
00:0000C95C   deadf
00:0000C95D   gamwon
00:0000C95E   dispx
00:0000C95F   dispy
00:0000C960   loopa
00:0000C961 X loopb
00:0000C962 X loopc
00:0000C963   bgmask
00:0000C964 X fgmask
00:0000C965   frmptr
00:0000C967   blkptr
00:0000C969 X colptr
00:0000C96B   proptr
00:0000C96D   scrptr
00:0000C96F   nmeptr
00:0000C971 X minve
00:0000C982   mmenu
00:0000C991   dbox
00:0000C99F   dbox5
00:0000C9A1   mod2
00:0000C9A7   dbox6
00:0000C9B8   dbox3
00:0000C9BF   dbox4
00:0000C9C4   dbox8
00:0000C9F8   dbox2
00:0000C9FB   mod0
00:0000CA0B   dbox0
00:0000CA29   dbox9
00:0000CA39   dboxf
00:0000CA45   dbox1
00:0000CA49   dbox10
00:0000CA53   dbox7
00:0000CA5A   dbox11
00:0000CA60   dbox14
00:0000CA6A   dbox12
00:0000CA73   mod1
00:0000CA93   dboxu
00:0000CAA3   fstd
00:0000CAB0   dbox13
00:0000CAC2   dbox15
00:0000CAC4   dbar
00:0000CAD5   dbar1
00:0000CAD8   dbar0
00:0000CAE4   invdis
00:0000CAF1   fopt
00:0000CAF8   rel
00:0000CB0D   fopt0
00:0000CB1E   fobj
00:0000CB2A   bwid
00:0000CB2B X blen
00:0000CB2C   btop
00:0000CB2D   blft
00:0000CB2E   prskey
00:0000CB36   prskey0
00:0000CB48   prskey1
00:0000CB4B   prskey2
00:0000CB55 X prskey3
00:0000CB57   prskey4
00:0000CB62   debounce
00:0000CB6A   delay
00:0000CB6D X delay1
00:0000CB73   wloop
00:0000CB7B   wloop1
00:0000CB83   xspr
00:0000CB88   xspr0
00:0000CB8E   iniob
00:0000CB99   iniob0
00:0000CBB0   vsync
00:0000CBB0   vsync0
00:0000CBB7   vsloop
00:0000CBC7   vsync1
00:0000CBD1   snd0
00:0000CBE3   vsync2
00:0000CBE7   sound
00:0000CBF2   toggle
00:0000CBFE   toggle0
00:0000CC0C   toggle1
00:0000CC11   sndtyp
00:0000CC12 X sndcnt
00:0000CC13 X framec
00:0000CC14 X firmad
00:0000CC16   redraw
00:0000CC24 X numsp0
00:0000CC2A   redrw0
00:0000CC3C   redrw1
00:0000CC43 X rpblc1
00:0000CC49   cls
00:0000CC4E   cls1
00:0000CC7E   fdchk
00:0000CC9F X cspr
00:0000CCA0   txtbit
00:0000CCA1   txtwid
00:0000CCA2   txtpos
00:0000CCA4   txtini
00:0000CCA6   txtscr
00:0000CCA8   proshr
00:0000CCB1   prosh0
00:0000CCB5   proshx
00:0000CCBF   prosh1
00:0000CCD4   prosh2
00:0000CCDE   shrptr
00:0000CCEE   shrap
00:0000CD19   dotl
00:0000CD1D   dotr
00:0000CD21   dotu
00:0000CD25   dotd
00:0000CD29   chkxy
00:0000CD4F   plot
00:0000CD5E X plot0
00:0000CD8B   plot1
00:0000CDA9   kilshr
00:0000CDAE   shrsin
00:0000CDEE   trail
00:0000CE01   traill
00:0000CE05   trailv
00:0000CE0C   trailu
00:0000CE10   trailk
00:0000CE15   laser
00:0000CE1F   laserl
00:0000CE21   laserm
00:0000CE40   dots
00:0000CE48   plotde
00:0000CE4E X shoot
00:0000CE52 X shoot1
00:0000CE6E   shoot0
00:0000CE75   shootr
00:0000CE7A X vapour
00:0000CE82 X vapou3
00:0000CE8B   vapou2
00:0000CE8E   vapou1
00:0000CEA2   vapou0
00:0000CEA7 X ptusr
00:0000CEB8   ptusr1
00:0000CEC9 X star
00:0000CED1   star0
00:0000CED4   star7
00:0000CEE3   star8
00:0000CEE9   star9
00:0000CEFA   star1
00:0000CF08   star2
00:0000CF15   star3
00:0000CF1D   fpslot
00:0000CF26   fpslt0
00:0000CF30 X explod
00:0000CF42   expld0
00:0000CF48   expld2
00:0000CF4C   expld3
00:0000CF4F   expld1
00:0000CF75   qrand
00:0000CF82   seed3
00:0000CF83   dshrp
00:0000CF93   inishr
00:0000CF9B   inish0
00:0000CFA1 X lcol
00:0000CFA9   lcol0
00:0000CFAD   lcol3
00:0000CFB1   lcol1
00:0000CFB9 X lcolh
00:0000CFC7   lcol2
00:0000CFCA   lcol4
00:0000CFCC   game
00:0000CFCC X rpblc2
00:0000CFCF X evintr
00:0000CFEC X mapst
00:0000CFF2 X inipbl
00:0000CFF9 X evini
00:0000CFFC   rstrt
00:0000D00A   rstrtn
00:0000D016   rstrt0
00:0000D023 X rpblc0
00:0000D037   mloop
00:0000D052 X evlp1
00:0000D05C X evlp2
00:0000D05F X bsortx
00:0000D081 X qoff
00:0000D085   newlev
00:0000D095   evwon
00:0000D09B   pdead
00:0000D09F X evdie
00:0000D0A9 X evfail
00:0000D0AC   tidyup
00:0000D0B4   tidyu2
00:0000D0BE   tidyu0
00:0000D0BF   tidyu1
00:0000D0CA X evnewh
00:0000D0CF   rsevt
00:0000D0D3 X evrs
00:0000D0D6   num2ch
00:0000D0DB   numdg3
00:0000D0E1   numdg2
00:0000D0EC   numdg
00:0000D0EE   numdg1
00:0000D0F7   numdg0
00:0000D0FE X num2dd
00:0000D10D X num2td
00:0000D114   inisc
00:0000D116   inisc0
00:0000D11C   imul
00:0000D11E X imul0
00:0000D124   imul1
00:0000D12A   imul2
00:0000D131 X idiv
00:0000D134   idiv0
00:0000D13C   idiv1
00:0000D13F X isnd
00:0000D140   plsnd
00:0000D141   shwob
00:0000D14C   shwob0
00:0000D15E   dobjc
00:0000D15E X dobj
00:0000D15F X dobj0
00:0000D16A   dobj1
00:0000D16D X remob
00:0000D17D   getob
00:0000D191 X getob1
00:0000D19F   getob0
00:0000D1A2   gotob
00:0000D1AB   gotob1
00:0000D1AE   gotob0
00:0000D1B2   findob
00:0000D1BC   fndob2
00:0000D1BF   fndob1
00:0000D1C4   drpob
00:0000D1E3   skobj
00:0000D1F1   skobj0
00:0000D1FE   skobj1
00:0000D21C   skobj3
00:0000D21D   skobj2
00:0000D21F X spawn
00:0000D222 X numsp1
00:0000D227   spaw0
00:0000D231   spaw1
00:0000D25D X rtssp
00:0000D261 X evis1
00:0000D26E   spptr
00:0000D270   seed
00:0000D271   score
00:0000D277   hiscor
00:0000D27D   bonus
00:0000D283   grbase
00:0000D285   checkx
00:0000D28B   dscor
00:0000D298   dscor0
00:0000D2AD   dscor2
00:0000D2B4   bscor0
00:0000D2C2   addsc
00:0000D2E4   incsc
00:0000D2F3   incsc0
00:0000D2F5   incsc2
00:0000D301 X addbo
00:0000D30B   addbo0
00:0000D316   addbo1
00:0000D31C X swpsb
00:0000D324   swpsb0
00:0000D32E   gprad
00:0000D34C   pradd
00:0000D364   pchar
00:0000D381   pchar0
00:0000D38E X pcnt
00:0000D38F   colpat
00:0000D390   pattr
00:0000D390   pattr2
00:0000D3A3   pattr1
00:0000D3AE   pchr
00:0000D3B6   setfgm
00:0000D3B7   setbgm
00:0000D3CB   calfgm
00:0000D3D4   cmsktb
00:0000D3D8   sprit7
00:0000D3DB   sprit3
00:0000D3EC   sprite
00:0000D3FA   sprit1
00:0000D40A   sprit2
00:0000D414   sprit0
00:0000D43E X sprit6
00:0000D446   groom
00:0000D449 X groomx
00:0000D450   groom1
00:0000D45C   groom0
00:0000D469   droom
00:0000D46F X droom2
00:0000D47F   droom0
00:0000D489   droom1
00:0000D4A2   flbyt
00:0000D4B4   flbyt1
00:0000D4BC   combyt
00:0000D4BD   comcnt
00:0000D4BE X laddd
00:0000D4C9 X laddu
00:0000D4D7   laddv
00:0000D4ED   cangu
00:0000D510   cangd
00:0000D533   cangl
00:0000D53E   cangr
00:0000D547   cangh
00:0000D54A X cangh2
00:0000D552   cangh0
00:0000D558   cangh1
00:0000D560   lrchk
00:0000D569   always
00:0000D56B   lrchkx
00:0000D56E   plchk
00:0000D57F   plchk0
00:0000D581   plchkx
00:0000D58A   ldchk
00:0000D58E   getcol
00:0000D59D   gtblk
00:0000D5F1   tded
00:0000D613   tded0
00:0000D624   tded1
00:0000D639   tstbl
00:0000D656 X jump
00:0000D659 X jump0
00:0000D665   hop
00:0000D673   random
00:0000D685 X kget
00:0000D68B   kget0
00:0000D69A   kget1
00:0000D69C X kget3
00:0000D6A0   kget2
00:0000D6A1   ktest
00:0000D6B2   ktest0
00:0000D6B7   ktest1
00:0000D6BE   joykey
00:0000D6CE   joyke0
00:0000D6DA   joyke1
00:0000D6DF   joy1
00:0000D6E8   joy2
00:0000D6F1   readjoy
00:0000D6F3   read0
00:0000D702   rstfire
00:0000D704   joyexit
00:0000D705   readarm
00:0000D70D   joy1a
00:0000D70F   joy1b
00:0000D71C   joy1c
00:0000D71E   joy1d
00:0000D720   dmsg
00:0000D726   dmsg3
00:0000D733   dmsg0
00:0000D746   dmsg2
00:0000D74F   dmsg1
00:0000D75A   dmsg4
00:0000D75F   prtmod
00:0000D760   bmsg1
00:0000D76B   bmsg3
00:0000D772   bmsg2
00:0000D783   bchar
00:0000D7A0   bchar0
00:0000D7B3   bchar1
00:0000D7B9 X bchar3
00:0000D7BD   bchar2
00:0000D7C0 X achar
00:0000D7D2   nexpos
00:0000D7DC   nexlin
00:0000D7E4   preprt
00:0000D7EB X prescr
00:0000D7F4   getwrd
00:0000D7F7   getwd0
00:0000D800   bsort
00:0000D806   bsort0
00:0000D81B   bsort2
00:0000D824   bsort1
00:0000D82F   swemp
00:0000D83A   swspr
00:0000D845   swspr0
00:0000D84F   pspr
00:0000D855   pspr1
00:0000D867   pspr2
00:0000D86E X rtorg
00:0000D872 X rtorg0
00:0000D873   pspr3
00:0000D876 X pspr4
00:0000D880   ogptr
00:0000D882   evtyp0
00:0000D884 X evtyp1
00:0000D886 X evtyp2
00:0000D888 X evtyp3
00:0000D88A X evtyp4
00:0000D88C X evtyp5
00:0000D88E X evtyp6
00:0000D890 X evtyp7
00:0000D892 X evtyp8
00:0000D894   dspr
00:0000D896   dspr0
00:0000D89D X dspr5
00:0000D8A3   dspr2
00:0000D8BE   dspr1
00:0000D8C4 X dspr6
00:0000D8CA   dspr4
00:0000D8EB   dspr7
00:0000D8F1   dspr3
00:0000D8F7   gspran
00:0000D90D   gsprad
00:0000D920   gspra0
00:0000D944   scadd
00:0000D962   spmask
00:0000D96A   sspria
00:0000D96D   sspri2
00:0000D96F   sspri0
00:0000D979   ssprib
00:0000D97F   sspric
00:0000DA02   dline
00:0000DA0C   goon
00:0000DA35   skipline
00:0000DA36 X nline
00:0000DA3F   animsp
00:0000DA53   anims0
00:0000DA57   animbk
00:0000DA6A   rtanb0
00:0000DA6D   sktyp
00:0000DA70 X numsp2
00:0000DA72   sktyp0
00:0000DA7A   sktyp1
00:0000DA8E   skptr
00:0000DA90   coltyp
00:0000DA96   colty0
00:0000DA9D X colc16
00:0000DAA5   colc1a
00:0000DAB2   colc1b
00:0000DABD   colty1
00:0000DAC9   disply
00:0000DACF X displ1
00:0000DADA   displ0
00:0000DADE   initsc
00:0000DAEB   tstsc
00:0000DAF7   scrl
00:0000DAFB   scrl0
00:0000DB04   scrl1
00:0000DB0D   scrr
00:0000DB13   scru
00:0000DB1A   scrd
00:0000DB21 X nwscr
00:0000DB27   nwscr0
00:0000DB2F   nwscr1
00:0000DB35   grav
00:0000DB4E   grav0
00:0000DB59 X gravd
00:0000DB5A   gravd0
00:0000DB65   gravu
00:0000DB68   gravu0
00:0000DB74   gravst
00:0000DB81   evftf
00:0000DB85   ogrv
00:0000DB97   ogrv0
00:0000DB9A   ogrv1
00:0000DBA0 X ogrvd
00:0000DBA1   ogrvd0
00:0000DBAC   ogrvu
00:0000DBAF   ogrvu0
00:0000DBBA   ogrvst
00:0000DBD1   ogrv2
00:0000DBD6   ogrv4
00:0000DBDF   ogrv3
00:0000DBE3   ifall
00:0000DC0C   ifalls
00:0000DC14   tfall
00:0000DC27   gfrm
00:0000DC30   sprlst
00:0000DC33 X sprls2
00:0000DC3C   sprls1
00:0000DC43   sprls0
00:0000DC47   nspr
00:0000DC50   nspr0
00:0000DC63   nspr1
00:0000DC6C   nspr2
00:0000DC79   ispr
00:0000DC7F   ispr2
00:0000DC83   ispr1
00:0000DC91   ispr4
00:0000DC99   ispr3
00:0000DC9F   kspr
00:0000DCA5   kspr2
00:0000DCB2   kspr1
00:0000DCC0   kspr4
00:0000DCC8   kspr3
00:0000DCCE   cpsp
00:0000DCFE X evis0
00:0000DD0B X clw
00:0000DD20   clw0
00:0000DD24   clw1
00:0000DD4F   scrly
00:0000DD55   scrly1
00:0000DD5C   scrly0
00:0000DD79   scrly5
00:0000DD90   scrly3
00:0000DD96   scrl3g
00:0000DD9D   scrly2
00:0000DDBA   scrly4
00:0000DDBD   scrly6
00:0000DDC1 X iscrly
00:0000DDDA   iscrl0
00:0000DDF6   sprtab
00:0000DEC2   ssprit
00:0000DED3   roomtb
00:00006800   sndbit_port
00:00000000 X sndbit_bit
00:00000021   sndbit_mask
00:0000DED4 X expl
00:0000DED7   expl0
00:0000DEEC   dly
00:0000DEF8 X user
00:0000DF09   disloop
00:0000DF16   delayit
00:0000DF1E   delayit2
00:0000DF26   delayit3
00:0000DF4A   disloop2
00:0000DF57   delayit4
00:0000DF5F   delayit5
00:0000DF67   delayit6
00:0000DF8A   disloop3
00:0000DF96   delayit7
00:0000DF9E   delayit8
00:0000DFA6   delayit9
00:0000DFC9   disloop4
00:0000DFD5   delayit10
00:0000DFDD   delayit11
00:0000DFE5   delayit12
00:0000DFFE   usr1
00:0000E00E   usr2
00:0000E016   usr3
00:0000E01B   usr4
00:0000E01C   title
00:0000E61C X eop


 Output: agdcode.vz
-------------------------------------------------

 Page: 00
  Org: 00007B00  Size: *  Used: 00006B34

   Address   Length Align   Label
   00007B00   27444         stmap
